//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WinProgramTaskActuatorDevice.ResourceManagerWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ResourceManagerSoap", Namespace="http://tempuri.org/")]
    public partial class ResourceManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InheritGGKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateBlocksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateBlockByBlockIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplateBlockPassSuperviseLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplateBlockTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplateBlockItemsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplateBlockPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorages4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoragesByWorkgroupIDCategoryTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageName4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStorage4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorage4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorage4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyStorage4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyStorageAndStorageZone4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersSpaceByWorkgroupIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZoneByStorageIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingStorageZone4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageID4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZoneNumber4BCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStorageZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorageZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorageZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyStorageZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkgroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkgroupsByStationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsedSapceByWorkgroupIDInUserSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistWorkgroupsInStoragesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistWorkgroupsInWorkgroup2StationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistWorkgroupsWorkgroupNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistWorkgroupsWorkgroupNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyWorkgroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStationsInItemDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStationsInWorkgroup2StationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStationsStationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStationsStationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStationsIsBatchBroadcastOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAir5DBOperationCompleted;
        
        private System.Threading.SendOrPostCallback DropAir5DBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkgroup2StationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkgroup2StationModelByStationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistWorkgroup2StationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWorkgroup2StationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkgroup2StationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkgroup2StationsInStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyWorkgroup2StationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContributorOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContributorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterClassByFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterClassByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistMasterClassNameByMAFOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingMasterClassInMediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsParentMasterClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMasterClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMasterClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMasterClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaAssetFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaAssetFormatByFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistWorkflowNameByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingWorkflowInMediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkflowBySystemIDTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIWFM_WorkflowsByObjectTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistNodeNameByWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNodeByWorkflowIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWFNodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIWFM_NodeSignerByNodeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIWFM_NodeSignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIWF_TypeMatchWFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelator2ContributorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRelator2ContributorOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramMBInFolder4MTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramMBInFolder4ProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibs1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByProgramLibTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByUserIDProgramLibTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByUserID1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByStorageIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibTypeEqual1OperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibShortNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProgramLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgramLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLib2StoragesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgramLib2StoragesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramLib2StoragesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramIDInLibStoragesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageIDInLibStoragesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderByFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByProgramLibIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByProgramLibIDUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibIDInfolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistFolderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistFolderShortNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistFolderTelephoneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorages4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoragesByProgramLibID4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageName4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStorage4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorage4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorage4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZoneInfoByStorageIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingStorageZone4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageID4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZoneNumber4XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStorageZoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorageZoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorageZoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSpaceInObjByObjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSpaceInObjByProgramLibIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserSpaceInObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserSpaceInObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryByCategoryIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryPassSuperviseLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryCopyToMamOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsNR1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibByIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByProgramLibTypeNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByUserIDProgramLibTypeNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByUserIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByUserIDNR1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibsByStorageIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibNameNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibTypeEqualNR1OperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibShortNameNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibNumberNROperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProgramLibNROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgramLibNROperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramLibNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLib2StoragesNROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgramLib2StoragesNROperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramLib2StoragesNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramIDInLibStoragesNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageIDInLibStoragesNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderByFolderIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByUserIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByProgramLibIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByProgramLibIDUserIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistProgramLibIDInfolderNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistFolderNameNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistFolderShortNameNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistFolderTelephoneNumberNROperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFolderNROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderNROperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorages4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoragesByProgramLibID4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageName4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStorage4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorage4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorage4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZoneInfoByStorageIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingStorageZone4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageID4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZoneNumber4NewsRoomOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStorageZoneInfoNROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorageZoneInfoNROperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorageZoneInfoNROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSpaceInObjByObjectIDNROperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserSpaceInObjNROperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserSpaceInObjNROperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogicLibsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistLogicLibNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingLogicLibInMediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingLogicLibInMediaAssetSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistLogicLib2StorageByLogicLibIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLogicLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogicLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogicLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogicLib2StoragesByLogicLibIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogicLib2StorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorages4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistStorageName4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingStorageInL2SOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingStorageInMediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStorage4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorage4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorage4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageZoneInfoByStorageID4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorageZoneInfo4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStorageZoneInfo4MediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryByTableNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryDistinctByTableNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryDistinctByTableNameMCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingDictionaryInMediaAsset2DictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistDictionaryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsParentDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContributorByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContributorByRelatorIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingDictionaryInContributorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContributorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ResourceManager() {
            this.Url = global::WinProgramTaskActuatorDevice.Properties.Settings.Default.WinProgramTaskActuatorDevice_ResourceManagerWS_ResourceManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InheritGGKCompletedEventHandler InheritGGKCompleted;
        
        /// <remarks/>
        public event GetTemplateBlocksCompletedEventHandler GetTemplateBlocksCompleted;
        
        /// <remarks/>
        public event GetTemplateBlockByBlockIDCompletedEventHandler GetTemplateBlockByBlockIDCompleted;
        
        /// <remarks/>
        public event UpdateTemplateBlockPassSuperviseLevelCompletedEventHandler UpdateTemplateBlockPassSuperviseLevelCompleted;
        
        /// <remarks/>
        public event UpdateTemplateBlockTypeCompletedEventHandler UpdateTemplateBlockTypeCompleted;
        
        /// <remarks/>
        public event UpdateTemplateBlockItemsCountCompletedEventHandler UpdateTemplateBlockItemsCountCompleted;
        
        /// <remarks/>
        public event UpdateTemplateBlockPriorityCompletedEventHandler UpdateTemplateBlockPriorityCompleted;
        
        /// <remarks/>
        public event GetStorages4BCCompletedEventHandler GetStorages4BCCompleted;
        
        /// <remarks/>
        public event GetStoragesByWorkgroupIDCategoryTypeCompletedEventHandler GetStoragesByWorkgroupIDCategoryTypeCompleted;
        
        /// <remarks/>
        public event IsExistStorageName4BCCompletedEventHandler IsExistStorageName4BCCompleted;
        
        /// <remarks/>
        public event CreateStorage4BCCompletedEventHandler CreateStorage4BCCompleted;
        
        /// <remarks/>
        public event UpdateStorage4BCCompletedEventHandler UpdateStorage4BCCompleted;
        
        /// <remarks/>
        public event DeleteStorage4BCCompletedEventHandler DeleteStorage4BCCompleted;
        
        /// <remarks/>
        public event CopyStorage4BCCompletedEventHandler CopyStorage4BCCompleted;
        
        /// <remarks/>
        public event CopyStorageAndStorageZone4BCCompletedEventHandler CopyStorageAndStorageZone4BCCompleted;
        
        /// <remarks/>
        public event GetUsersSpaceByWorkgroupIDCompletedEventHandler GetUsersSpaceByWorkgroupIDCompleted;
        
        /// <remarks/>
        public event GetStorageZonesCompletedEventHandler GetStorageZonesCompleted;
        
        /// <remarks/>
        public event GetStorageZoneByStorageIDCompletedEventHandler GetStorageZoneByStorageIDCompleted;
        
        /// <remarks/>
        public event IsUsingStorageZone4BCCompletedEventHandler IsUsingStorageZone4BCCompleted;
        
        /// <remarks/>
        public event IsExistStorageID4BCCompletedEventHandler IsExistStorageID4BCCompleted;
        
        /// <remarks/>
        public event GetStorageZoneNumber4BCCompletedEventHandler GetStorageZoneNumber4BCCompleted;
        
        /// <remarks/>
        public event CreateStorageZoneCompletedEventHandler CreateStorageZoneCompleted;
        
        /// <remarks/>
        public event UpdateStorageZoneCompletedEventHandler UpdateStorageZoneCompleted;
        
        /// <remarks/>
        public event DeleteStorageZoneCompletedEventHandler DeleteStorageZoneCompleted;
        
        /// <remarks/>
        public event CopyStorageZoneCompletedEventHandler CopyStorageZoneCompleted;
        
        /// <remarks/>
        public event GetWorkgroupsCompletedEventHandler GetWorkgroupsCompleted;
        
        /// <remarks/>
        public event GetWorkgroupsByStationIDCompletedEventHandler GetWorkgroupsByStationIDCompleted;
        
        /// <remarks/>
        public event UsedSapceByWorkgroupIDInUserSpaceCompletedEventHandler UsedSapceByWorkgroupIDInUserSpaceCompleted;
        
        /// <remarks/>
        public event IsExistWorkgroupsInStoragesCompletedEventHandler IsExistWorkgroupsInStoragesCompleted;
        
        /// <remarks/>
        public event IsExistWorkgroupsInWorkgroup2StationsCompletedEventHandler IsExistWorkgroupsInWorkgroup2StationsCompleted;
        
        /// <remarks/>
        public event IsExistWorkgroupsWorkgroupNameCompletedEventHandler IsExistWorkgroupsWorkgroupNameCompleted;
        
        /// <remarks/>
        public event IsExistWorkgroupsWorkgroupNumberCompletedEventHandler IsExistWorkgroupsWorkgroupNumberCompleted;
        
        /// <remarks/>
        public event CreateWorkgroupCompletedEventHandler CreateWorkgroupCompleted;
        
        /// <remarks/>
        public event UpdateWorkgroupCompletedEventHandler UpdateWorkgroupCompleted;
        
        /// <remarks/>
        public event DeleteWorkgroupCompletedEventHandler DeleteWorkgroupCompleted;
        
        /// <remarks/>
        public event CopyWorkgroupCompletedEventHandler CopyWorkgroupCompleted;
        
        /// <remarks/>
        public event GetStationsCompletedEventHandler GetStationsCompleted;
        
        /// <remarks/>
        public event IsExistStationsInItemDictCompletedEventHandler IsExistStationsInItemDictCompleted;
        
        /// <remarks/>
        public event IsExistStationsInWorkgroup2StationsCompletedEventHandler IsExistStationsInWorkgroup2StationsCompleted;
        
        /// <remarks/>
        public event IsExistStationsStationNameCompletedEventHandler IsExistStationsStationNameCompleted;
        
        /// <remarks/>
        public event IsExistStationsStationNumberCompletedEventHandler IsExistStationsStationNumberCompleted;
        
        /// <remarks/>
        public event CreateStationCompletedEventHandler CreateStationCompleted;
        
        /// <remarks/>
        public event UpdateStationCompletedEventHandler UpdateStationCompleted;
        
        /// <remarks/>
        public event DeleteStationCompletedEventHandler DeleteStationCompleted;
        
        /// <remarks/>
        public event UpdateStationsIsBatchBroadcastCompletedEventHandler UpdateStationsIsBatchBroadcastCompleted;
        
        /// <remarks/>
        public event CopyStationCompletedEventHandler CopyStationCompleted;
        
        /// <remarks/>
        public event CreateAir5DBCompletedEventHandler CreateAir5DBCompleted;
        
        /// <remarks/>
        public event DropAir5DBCompletedEventHandler DropAir5DBCompleted;
        
        /// <remarks/>
        public event GetWorkgroup2StationsCompletedEventHandler GetWorkgroup2StationsCompleted;
        
        /// <remarks/>
        public event GetWorkgroup2StationModelByStationIDCompletedEventHandler GetWorkgroup2StationModelByStationIDCompleted;
        
        /// <remarks/>
        public event IsExistWorkgroup2StationsCompletedEventHandler IsExistWorkgroup2StationsCompleted;
        
        /// <remarks/>
        public event CreateWorkgroup2StationsCompletedEventHandler CreateWorkgroup2StationsCompleted;
        
        /// <remarks/>
        public event DeleteWorkgroup2StationsCompletedEventHandler DeleteWorkgroup2StationsCompleted;
        
        /// <remarks/>
        public event UpdateWorkgroup2StationsInStationCompletedEventHandler UpdateWorkgroup2StationsInStationCompleted;
        
        /// <remarks/>
        public event CopyWorkgroup2StationsCompletedEventHandler CopyWorkgroup2StationsCompleted;
        
        /// <remarks/>
        public event UpdateContributorCompletedEventHandler UpdateContributorCompleted;
        
        /// <remarks/>
        public event DeleteContributorCompletedEventHandler DeleteContributorCompleted;
        
        /// <remarks/>
        public event GetMasterClassCompletedEventHandler GetMasterClassCompleted;
        
        /// <remarks/>
        public event GetMasterClassByFormatCompletedEventHandler GetMasterClassByFormatCompleted;
        
        /// <remarks/>
        public event GetMasterClassByConditionCompletedEventHandler GetMasterClassByConditionCompleted;
        
        /// <remarks/>
        public event IsExistMasterClassNameByMAFCompletedEventHandler IsExistMasterClassNameByMAFCompleted;
        
        /// <remarks/>
        public event IsUsingMasterClassInMediaAssetCompletedEventHandler IsUsingMasterClassInMediaAssetCompleted;
        
        /// <remarks/>
        public event IsParentMasterClassCompletedEventHandler IsParentMasterClassCompleted;
        
        /// <remarks/>
        public event CreateMasterClassCompletedEventHandler CreateMasterClassCompleted;
        
        /// <remarks/>
        public event UpdateMasterClassCompletedEventHandler UpdateMasterClassCompleted;
        
        /// <remarks/>
        public event DeleteMasterClassCompletedEventHandler DeleteMasterClassCompleted;
        
        /// <remarks/>
        public event GetMediaAssetFormatCompletedEventHandler GetMediaAssetFormatCompleted;
        
        /// <remarks/>
        public event GetMediaAssetFormatByFormatCompletedEventHandler GetMediaAssetFormatByFormatCompleted;
        
        /// <remarks/>
        public event IsExistWorkflowNameByTypeCompletedEventHandler IsExistWorkflowNameByTypeCompleted;
        
        /// <remarks/>
        public event IsUsingWorkflowInMediaAssetCompletedEventHandler IsUsingWorkflowInMediaAssetCompleted;
        
        /// <remarks/>
        public event GetWorkflowBySystemIDTypeCompletedEventHandler GetWorkflowBySystemIDTypeCompleted;
        
        /// <remarks/>
        public event GetIWFM_WorkflowsByObjectTypeCompletedEventHandler GetIWFM_WorkflowsByObjectTypeCompleted;
        
        /// <remarks/>
        public event CreateWorkflowCompletedEventHandler CreateWorkflowCompleted;
        
        /// <remarks/>
        public event UpdateWorkflowCompletedEventHandler UpdateWorkflowCompleted;
        
        /// <remarks/>
        public event DeleteWorkflowCompletedEventHandler DeleteWorkflowCompleted;
        
        /// <remarks/>
        public event IsExistNodeNameByWorkflowCompletedEventHandler IsExistNodeNameByWorkflowCompleted;
        
        /// <remarks/>
        public event GetNodeByWorkflowIDCompletedEventHandler GetNodeByWorkflowIDCompleted;
        
        /// <remarks/>
        public event UpdateWFNodesCompletedEventHandler UpdateWFNodesCompleted;
        
        /// <remarks/>
        public event GetIWFM_NodeSignerByNodeIDCompletedEventHandler GetIWFM_NodeSignerByNodeIDCompleted;
        
        /// <remarks/>
        public event UpdateIWFM_NodeSignerCompletedEventHandler UpdateIWFM_NodeSignerCompleted;
        
        /// <remarks/>
        public event UpdateIWF_TypeMatchWFCompletedEventHandler UpdateIWF_TypeMatchWFCompleted;
        
        /// <remarks/>
        public event GetRelator2ContributorsCompletedEventHandler GetRelator2ContributorsCompleted;
        
        /// <remarks/>
        public event UpdateRelator2ContributorCompletedEventHandler UpdateRelator2ContributorCompleted;
        
        /// <remarks/>
        public event IsExistProgramInFolderCompletedEventHandler IsExistProgramInFolderCompleted;
        
        /// <remarks/>
        public event GetProgramMBInFolder4MTCompletedEventHandler GetProgramMBInFolder4MTCompleted;
        
        /// <remarks/>
        public event GetProgramMBInFolder4ProjectCompletedEventHandler GetProgramMBInFolder4ProjectCompleted;
        
        /// <remarks/>
        public event GetProgramLibsCompletedEventHandler GetProgramLibsCompleted;
        
        /// <remarks/>
        public event GetProgramLibs1CompletedEventHandler GetProgramLibs1Completed;
        
        /// <remarks/>
        public event GetProgramLibByIDCompletedEventHandler GetProgramLibByIDCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByProgramLibTypeCompletedEventHandler GetProgramLibsByProgramLibTypeCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByUserIDProgramLibTypeCompletedEventHandler GetProgramLibsByUserIDProgramLibTypeCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByUserIDCompletedEventHandler GetProgramLibsByUserIDCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByUserID1CompletedEventHandler GetProgramLibsByUserID1Completed;
        
        /// <remarks/>
        public event GetProgramLibsByStorageIDCompletedEventHandler GetProgramLibsByStorageIDCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibNameCompletedEventHandler IsExistProgramLibNameCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibTypeEqual1CompletedEventHandler IsExistProgramLibTypeEqual1Completed;
        
        /// <remarks/>
        public event IsExistProgramLibShortNameCompletedEventHandler IsExistProgramLibShortNameCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibNumberCompletedEventHandler IsExistProgramLibNumberCompleted;
        
        /// <remarks/>
        public event CreateProgramLibCompletedEventHandler CreateProgramLibCompleted;
        
        /// <remarks/>
        public event UpdateProgramLibCompletedEventHandler UpdateProgramLibCompleted;
        
        /// <remarks/>
        public event DeleteProgramLibCompletedEventHandler DeleteProgramLibCompleted;
        
        /// <remarks/>
        public event GetProgramLib2StoragesCompletedEventHandler GetProgramLib2StoragesCompleted;
        
        /// <remarks/>
        public event UpdateProgramLib2StoragesCompletedEventHandler UpdateProgramLib2StoragesCompleted;
        
        /// <remarks/>
        public event DeleteProgramLib2StoragesCompletedEventHandler DeleteProgramLib2StoragesCompleted;
        
        /// <remarks/>
        public event IsExistProgramIDInLibStoragesCompletedEventHandler IsExistProgramIDInLibStoragesCompleted;
        
        /// <remarks/>
        public event IsExistStorageIDInLibStoragesCompletedEventHandler IsExistStorageIDInLibStoragesCompleted;
        
        /// <remarks/>
        public event GetFoldersCompletedEventHandler GetFoldersCompleted;
        
        /// <remarks/>
        public event GetFolderByFolderIDCompletedEventHandler GetFolderByFolderIDCompleted;
        
        /// <remarks/>
        public event GetFoldersByUserIDCompletedEventHandler GetFoldersByUserIDCompleted;
        
        /// <remarks/>
        public event GetFoldersByProgramLibIDCompletedEventHandler GetFoldersByProgramLibIDCompleted;
        
        /// <remarks/>
        public event GetFoldersByProgramLibIDUserIDCompletedEventHandler GetFoldersByProgramLibIDUserIDCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibIDInfolderCompletedEventHandler IsExistProgramLibIDInfolderCompleted;
        
        /// <remarks/>
        public event IsExistFolderNameCompletedEventHandler IsExistFolderNameCompleted;
        
        /// <remarks/>
        public event IsExistFolderShortNameCompletedEventHandler IsExistFolderShortNameCompleted;
        
        /// <remarks/>
        public event IsExistFolderTelephoneNumberCompletedEventHandler IsExistFolderTelephoneNumberCompleted;
        
        /// <remarks/>
        public event CreateFolderCompletedEventHandler CreateFolderCompleted;
        
        /// <remarks/>
        public event UpdateFolderCompletedEventHandler UpdateFolderCompleted;
        
        /// <remarks/>
        public event DeleteFolderCompletedEventHandler DeleteFolderCompleted;
        
        /// <remarks/>
        public event GetStorages4XStudioCompletedEventHandler GetStorages4XStudioCompleted;
        
        /// <remarks/>
        public event GetStoragesByProgramLibID4XStudioCompletedEventHandler GetStoragesByProgramLibID4XStudioCompleted;
        
        /// <remarks/>
        public event IsExistStorageName4XStudioCompletedEventHandler IsExistStorageName4XStudioCompleted;
        
        /// <remarks/>
        public event CreateStorage4XStudioCompletedEventHandler CreateStorage4XStudioCompleted;
        
        /// <remarks/>
        public event UpdateStorage4XStudioCompletedEventHandler UpdateStorage4XStudioCompleted;
        
        /// <remarks/>
        public event DeleteStorage4XStudioCompletedEventHandler DeleteStorage4XStudioCompleted;
        
        /// <remarks/>
        public event GetStorageZoneInfoByStorageIDCompletedEventHandler GetStorageZoneInfoByStorageIDCompleted;
        
        /// <remarks/>
        public event IsUsingStorageZone4XStudioCompletedEventHandler IsUsingStorageZone4XStudioCompleted;
        
        /// <remarks/>
        public event IsExistStorageID4XStudioCompletedEventHandler IsExistStorageID4XStudioCompleted;
        
        /// <remarks/>
        public event GetStorageZoneNumber4XStudioCompletedEventHandler GetStorageZoneNumber4XStudioCompleted;
        
        /// <remarks/>
        public event CreateStorageZoneInfoCompletedEventHandler CreateStorageZoneInfoCompleted;
        
        /// <remarks/>
        public event UpdateStorageZoneInfoCompletedEventHandler UpdateStorageZoneInfoCompleted;
        
        /// <remarks/>
        public event DeleteStorageZoneInfoCompletedEventHandler DeleteStorageZoneInfoCompleted;
        
        /// <remarks/>
        public event GetUserSpaceInObjByObjectIDCompletedEventHandler GetUserSpaceInObjByObjectIDCompleted;
        
        /// <remarks/>
        public event GetUserSpaceInObjByProgramLibIDCompletedEventHandler GetUserSpaceInObjByProgramLibIDCompleted;
        
        /// <remarks/>
        public event RemoveUserSpaceInObjCompletedEventHandler RemoveUserSpaceInObjCompleted;
        
        /// <remarks/>
        public event AddUserSpaceInObjCompletedEventHandler AddUserSpaceInObjCompleted;
        
        /// <remarks/>
        public event GetCategoriesCompletedEventHandler GetCategoriesCompleted;
        
        /// <remarks/>
        public event GetCategoryByCategoryIDCompletedEventHandler GetCategoryByCategoryIDCompleted;
        
        /// <remarks/>
        public event UpdateCategoryPassSuperviseLevelCompletedEventHandler UpdateCategoryPassSuperviseLevelCompleted;
        
        /// <remarks/>
        public event UpdateCategoryCopyToMamCompletedEventHandler UpdateCategoryCopyToMamCompleted;
        
        /// <remarks/>
        public event UpdateCategoryPriorityCompletedEventHandler UpdateCategoryPriorityCompleted;
        
        /// <remarks/>
        public event GetProgramLibsNRCompletedEventHandler GetProgramLibsNRCompleted;
        
        /// <remarks/>
        public event GetProgramLibsNR1CompletedEventHandler GetProgramLibsNR1Completed;
        
        /// <remarks/>
        public event GetProgramLibByIDNRCompletedEventHandler GetProgramLibByIDNRCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByProgramLibTypeNRCompletedEventHandler GetProgramLibsByProgramLibTypeNRCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByUserIDProgramLibTypeNRCompletedEventHandler GetProgramLibsByUserIDProgramLibTypeNRCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByUserIDNRCompletedEventHandler GetProgramLibsByUserIDNRCompleted;
        
        /// <remarks/>
        public event GetProgramLibsByUserIDNR1CompletedEventHandler GetProgramLibsByUserIDNR1Completed;
        
        /// <remarks/>
        public event GetProgramLibsByStorageIDNRCompletedEventHandler GetProgramLibsByStorageIDNRCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibNameNRCompletedEventHandler IsExistProgramLibNameNRCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibTypeEqualNR1CompletedEventHandler IsExistProgramLibTypeEqualNR1Completed;
        
        /// <remarks/>
        public event IsExistProgramLibShortNameNRCompletedEventHandler IsExistProgramLibShortNameNRCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibNumberNRCompletedEventHandler IsExistProgramLibNumberNRCompleted;
        
        /// <remarks/>
        public event CreateProgramLibNRCompletedEventHandler CreateProgramLibNRCompleted;
        
        /// <remarks/>
        public event UpdateProgramLibNRCompletedEventHandler UpdateProgramLibNRCompleted;
        
        /// <remarks/>
        public event DeleteProgramLibNRCompletedEventHandler DeleteProgramLibNRCompleted;
        
        /// <remarks/>
        public event GetProgramLib2StoragesNRCompletedEventHandler GetProgramLib2StoragesNRCompleted;
        
        /// <remarks/>
        public event UpdateProgramLib2StoragesNRCompletedEventHandler UpdateProgramLib2StoragesNRCompleted;
        
        /// <remarks/>
        public event DeleteProgramLib2StoragesNRCompletedEventHandler DeleteProgramLib2StoragesNRCompleted;
        
        /// <remarks/>
        public event IsExistProgramIDInLibStoragesNRCompletedEventHandler IsExistProgramIDInLibStoragesNRCompleted;
        
        /// <remarks/>
        public event IsExistStorageIDInLibStoragesNRCompletedEventHandler IsExistStorageIDInLibStoragesNRCompleted;
        
        /// <remarks/>
        public event GetFoldersNRCompletedEventHandler GetFoldersNRCompleted;
        
        /// <remarks/>
        public event GetFolderByFolderIDNRCompletedEventHandler GetFolderByFolderIDNRCompleted;
        
        /// <remarks/>
        public event GetFoldersByUserIDNRCompletedEventHandler GetFoldersByUserIDNRCompleted;
        
        /// <remarks/>
        public event GetFoldersByProgramLibIDNRCompletedEventHandler GetFoldersByProgramLibIDNRCompleted;
        
        /// <remarks/>
        public event GetFoldersByProgramLibIDUserIDNRCompletedEventHandler GetFoldersByProgramLibIDUserIDNRCompleted;
        
        /// <remarks/>
        public event IsExistProgramLibIDInfolderNRCompletedEventHandler IsExistProgramLibIDInfolderNRCompleted;
        
        /// <remarks/>
        public event IsExistFolderNameNRCompletedEventHandler IsExistFolderNameNRCompleted;
        
        /// <remarks/>
        public event IsExistFolderShortNameNRCompletedEventHandler IsExistFolderShortNameNRCompleted;
        
        /// <remarks/>
        public event IsExistFolderTelephoneNumberNRCompletedEventHandler IsExistFolderTelephoneNumberNRCompleted;
        
        /// <remarks/>
        public event CreateFolderNRCompletedEventHandler CreateFolderNRCompleted;
        
        /// <remarks/>
        public event UpdateFolderNRCompletedEventHandler UpdateFolderNRCompleted;
        
        /// <remarks/>
        public event DeleteFolderNRCompletedEventHandler DeleteFolderNRCompleted;
        
        /// <remarks/>
        public event GetStorages4NewsRoomCompletedEventHandler GetStorages4NewsRoomCompleted;
        
        /// <remarks/>
        public event GetStoragesByProgramLibID4NewsRoomCompletedEventHandler GetStoragesByProgramLibID4NewsRoomCompleted;
        
        /// <remarks/>
        public event IsExistStorageName4NewsRoomCompletedEventHandler IsExistStorageName4NewsRoomCompleted;
        
        /// <remarks/>
        public event CreateStorage4NewsRoomCompletedEventHandler CreateStorage4NewsRoomCompleted;
        
        /// <remarks/>
        public event UpdateStorage4NewsRoomCompletedEventHandler UpdateStorage4NewsRoomCompleted;
        
        /// <remarks/>
        public event DeleteStorage4NewsRoomCompletedEventHandler DeleteStorage4NewsRoomCompleted;
        
        /// <remarks/>
        public event GetStorageZoneInfoByStorageIDNRCompletedEventHandler GetStorageZoneInfoByStorageIDNRCompleted;
        
        /// <remarks/>
        public event IsUsingStorageZone4NewsRoomCompletedEventHandler IsUsingStorageZone4NewsRoomCompleted;
        
        /// <remarks/>
        public event IsExistStorageID4NewsRoomCompletedEventHandler IsExistStorageID4NewsRoomCompleted;
        
        /// <remarks/>
        public event GetStorageZoneNumber4NewsRoomCompletedEventHandler GetStorageZoneNumber4NewsRoomCompleted;
        
        /// <remarks/>
        public event CreateStorageZoneInfoNRCompletedEventHandler CreateStorageZoneInfoNRCompleted;
        
        /// <remarks/>
        public event UpdateStorageZoneInfoNRCompletedEventHandler UpdateStorageZoneInfoNRCompleted;
        
        /// <remarks/>
        public event DeleteStorageZoneInfoNRCompletedEventHandler DeleteStorageZoneInfoNRCompleted;
        
        /// <remarks/>
        public event GetUserSpaceInObjByObjectIDNRCompletedEventHandler GetUserSpaceInObjByObjectIDNRCompleted;
        
        /// <remarks/>
        public event RemoveUserSpaceInObjNRCompletedEventHandler RemoveUserSpaceInObjNRCompleted;
        
        /// <remarks/>
        public event AddUserSpaceInObjNRCompletedEventHandler AddUserSpaceInObjNRCompleted;
        
        /// <remarks/>
        public event HelloWordCompletedEventHandler HelloWordCompleted;
        
        /// <remarks/>
        public event GetLogicLibsCompletedEventHandler GetLogicLibsCompleted;
        
        /// <remarks/>
        public event IsExistLogicLibNameCompletedEventHandler IsExistLogicLibNameCompleted;
        
        /// <remarks/>
        public event IsUsingLogicLibInMediaAssetCompletedEventHandler IsUsingLogicLibInMediaAssetCompleted;
        
        /// <remarks/>
        public event IsUsingLogicLibInMediaAssetSeriesCompletedEventHandler IsUsingLogicLibInMediaAssetSeriesCompleted;
        
        /// <remarks/>
        public event IsExistLogicLib2StorageByLogicLibIDCompletedEventHandler IsExistLogicLib2StorageByLogicLibIDCompleted;
        
        /// <remarks/>
        public event CreateLogicLibCompletedEventHandler CreateLogicLibCompleted;
        
        /// <remarks/>
        public event UpdateLogicLibCompletedEventHandler UpdateLogicLibCompleted;
        
        /// <remarks/>
        public event DeleteLogicLibCompletedEventHandler DeleteLogicLibCompleted;
        
        /// <remarks/>
        public event GetLogicLib2StoragesByLogicLibIDCompletedEventHandler GetLogicLib2StoragesByLogicLibIDCompleted;
        
        /// <remarks/>
        public event UpdateLogicLib2StorageCompletedEventHandler UpdateLogicLib2StorageCompleted;
        
        /// <remarks/>
        public event GetStorages4MediaAssetCompletedEventHandler GetStorages4MediaAssetCompleted;
        
        /// <remarks/>
        public event IsExistStorageName4MediaAssetCompletedEventHandler IsExistStorageName4MediaAssetCompleted;
        
        /// <remarks/>
        public event IsUsingStorageInL2SCompletedEventHandler IsUsingStorageInL2SCompleted;
        
        /// <remarks/>
        public event IsUsingStorageInMediaAssetCompletedEventHandler IsUsingStorageInMediaAssetCompleted;
        
        /// <remarks/>
        public event CreateStorage4MediaAssetCompletedEventHandler CreateStorage4MediaAssetCompleted;
        
        /// <remarks/>
        public event UpdateStorage4MediaAssetCompletedEventHandler UpdateStorage4MediaAssetCompleted;
        
        /// <remarks/>
        public event DeleteStorage4MediaAssetCompletedEventHandler DeleteStorage4MediaAssetCompleted;
        
        /// <remarks/>
        public event GetStorageZoneInfoByStorageID4MediaAssetCompletedEventHandler GetStorageZoneInfoByStorageID4MediaAssetCompleted;
        
        /// <remarks/>
        public event UpdateStorageZoneInfo4MediaAssetCompletedEventHandler UpdateStorageZoneInfo4MediaAssetCompleted;
        
        /// <remarks/>
        public event DeleteStorageZoneInfo4MediaAssetCompletedEventHandler DeleteStorageZoneInfo4MediaAssetCompleted;
        
        /// <remarks/>
        public event GetDictionaryByTableNameCompletedEventHandler GetDictionaryByTableNameCompleted;
        
        /// <remarks/>
        public event GetDictionaryDistinctByTableNameCompletedEventHandler GetDictionaryDistinctByTableNameCompleted;
        
        /// <remarks/>
        public event GetDictionaryDistinctByTableNameMCCompletedEventHandler GetDictionaryDistinctByTableNameMCCompleted;
        
        /// <remarks/>
        public event GetDictionaryByConditionCompletedEventHandler GetDictionaryByConditionCompleted;
        
        /// <remarks/>
        public event IsUsingDictionaryInMediaAsset2DictionaryCompletedEventHandler IsUsingDictionaryInMediaAsset2DictionaryCompleted;
        
        /// <remarks/>
        public event IsExistDictionaryNameCompletedEventHandler IsExistDictionaryNameCompleted;
        
        /// <remarks/>
        public event IsParentDictionaryCompletedEventHandler IsParentDictionaryCompleted;
        
        /// <remarks/>
        public event CreateDictionaryCompletedEventHandler CreateDictionaryCompleted;
        
        /// <remarks/>
        public event UpdateDictionaryCompletedEventHandler UpdateDictionaryCompleted;
        
        /// <remarks/>
        public event DeleteDictionaryCompletedEventHandler DeleteDictionaryCompleted;
        
        /// <remarks/>
        public event GetConfigDictionaryCompletedEventHandler GetConfigDictionaryCompleted;
        
        /// <remarks/>
        public event GetContributorByConditionCompletedEventHandler GetContributorByConditionCompleted;
        
        /// <remarks/>
        public event GetContributorByRelatorIDCompletedEventHandler GetContributorByRelatorIDCompleted;
        
        /// <remarks/>
        public event IsUsingDictionaryInContributorCompletedEventHandler IsUsingDictionaryInContributorCompleted;
        
        /// <remarks/>
        public event CreateContributorCompletedEventHandler CreateContributorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InheritGGK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InheritGGK() {
            object[] results = this.Invoke("InheritGGK", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InheritGGKAsync() {
            this.InheritGGKAsync(null);
        }
        
        /// <remarks/>
        public void InheritGGKAsync(object userState) {
            if ((this.InheritGGKOperationCompleted == null)) {
                this.InheritGGKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInheritGGKOperationCompleted);
            }
            this.InvokeAsync("InheritGGK", new object[0], this.InheritGGKOperationCompleted, userState);
        }
        
        private void OnInheritGGKOperationCompleted(object arg) {
            if ((this.InheritGGKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InheritGGKCompleted(this, new InheritGGKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplateBlocks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.TempleteBlocksDataTable GetTemplateBlocks(string systemKey) {
            object[] results = this.Invoke("GetTemplateBlocks", new object[] {
                        systemKey});
            return ((BroadcastDS.TempleteBlocksDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateBlocksAsync(string systemKey) {
            this.GetTemplateBlocksAsync(systemKey, null);
        }
        
        /// <remarks/>
        public void GetTemplateBlocksAsync(string systemKey, object userState) {
            if ((this.GetTemplateBlocksOperationCompleted == null)) {
                this.GetTemplateBlocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateBlocksOperationCompleted);
            }
            this.InvokeAsync("GetTemplateBlocks", new object[] {
                        systemKey}, this.GetTemplateBlocksOperationCompleted, userState);
        }
        
        private void OnGetTemplateBlocksOperationCompleted(object arg) {
            if ((this.GetTemplateBlocksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateBlocksCompleted(this, new GetTemplateBlocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplateBlockByBlockID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.TempleteBlocksDataTable GetTemplateBlockByBlockID(System.Guid blockID, string systemKey) {
            object[] results = this.Invoke("GetTemplateBlockByBlockID", new object[] {
                        blockID,
                        systemKey});
            return ((BroadcastDS.TempleteBlocksDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateBlockByBlockIDAsync(System.Guid blockID, string systemKey) {
            this.GetTemplateBlockByBlockIDAsync(blockID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetTemplateBlockByBlockIDAsync(System.Guid blockID, string systemKey, object userState) {
            if ((this.GetTemplateBlockByBlockIDOperationCompleted == null)) {
                this.GetTemplateBlockByBlockIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateBlockByBlockIDOperationCompleted);
            }
            this.InvokeAsync("GetTemplateBlockByBlockID", new object[] {
                        blockID,
                        systemKey}, this.GetTemplateBlockByBlockIDOperationCompleted, userState);
        }
        
        private void OnGetTemplateBlockByBlockIDOperationCompleted(object arg) {
            if ((this.GetTemplateBlockByBlockIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateBlockByBlockIDCompleted(this, new GetTemplateBlockByBlockIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTemplateBlockPassSuperviseLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTemplateBlockPassSuperviseLevel(System.Guid[] blockIDs, int passSuperviseLevel, string systemKey) {
            object[] results = this.Invoke("UpdateTemplateBlockPassSuperviseLevel", new object[] {
                        blockIDs,
                        passSuperviseLevel,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockPassSuperviseLevelAsync(System.Guid[] blockIDs, int passSuperviseLevel, string systemKey) {
            this.UpdateTemplateBlockPassSuperviseLevelAsync(blockIDs, passSuperviseLevel, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockPassSuperviseLevelAsync(System.Guid[] blockIDs, int passSuperviseLevel, string systemKey, object userState) {
            if ((this.UpdateTemplateBlockPassSuperviseLevelOperationCompleted == null)) {
                this.UpdateTemplateBlockPassSuperviseLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateBlockPassSuperviseLevelOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplateBlockPassSuperviseLevel", new object[] {
                        blockIDs,
                        passSuperviseLevel,
                        systemKey}, this.UpdateTemplateBlockPassSuperviseLevelOperationCompleted, userState);
        }
        
        private void OnUpdateTemplateBlockPassSuperviseLevelOperationCompleted(object arg) {
            if ((this.UpdateTemplateBlockPassSuperviseLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplateBlockPassSuperviseLevelCompleted(this, new UpdateTemplateBlockPassSuperviseLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTemplateBlockType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTemplateBlockType(System.Guid[] blockIDs, int type, string systemKey) {
            object[] results = this.Invoke("UpdateTemplateBlockType", new object[] {
                        blockIDs,
                        type,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockTypeAsync(System.Guid[] blockIDs, int type, string systemKey) {
            this.UpdateTemplateBlockTypeAsync(blockIDs, type, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockTypeAsync(System.Guid[] blockIDs, int type, string systemKey, object userState) {
            if ((this.UpdateTemplateBlockTypeOperationCompleted == null)) {
                this.UpdateTemplateBlockTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateBlockTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplateBlockType", new object[] {
                        blockIDs,
                        type,
                        systemKey}, this.UpdateTemplateBlockTypeOperationCompleted, userState);
        }
        
        private void OnUpdateTemplateBlockTypeOperationCompleted(object arg) {
            if ((this.UpdateTemplateBlockTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplateBlockTypeCompleted(this, new UpdateTemplateBlockTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTemplateBlockItemsCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTemplateBlockItemsCount(System.Guid[] blockIDs, int itemsCount, string systemKey) {
            object[] results = this.Invoke("UpdateTemplateBlockItemsCount", new object[] {
                        blockIDs,
                        itemsCount,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockItemsCountAsync(System.Guid[] blockIDs, int itemsCount, string systemKey) {
            this.UpdateTemplateBlockItemsCountAsync(blockIDs, itemsCount, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockItemsCountAsync(System.Guid[] blockIDs, int itemsCount, string systemKey, object userState) {
            if ((this.UpdateTemplateBlockItemsCountOperationCompleted == null)) {
                this.UpdateTemplateBlockItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateBlockItemsCountOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplateBlockItemsCount", new object[] {
                        blockIDs,
                        itemsCount,
                        systemKey}, this.UpdateTemplateBlockItemsCountOperationCompleted, userState);
        }
        
        private void OnUpdateTemplateBlockItemsCountOperationCompleted(object arg) {
            if ((this.UpdateTemplateBlockItemsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplateBlockItemsCountCompleted(this, new UpdateTemplateBlockItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTemplateBlockPriority", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTemplateBlockPriority(System.Guid[] blockIDs, int priority, string systemKey) {
            object[] results = this.Invoke("UpdateTemplateBlockPriority", new object[] {
                        blockIDs,
                        priority,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockPriorityAsync(System.Guid[] blockIDs, int priority, string systemKey) {
            this.UpdateTemplateBlockPriorityAsync(blockIDs, priority, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateTemplateBlockPriorityAsync(System.Guid[] blockIDs, int priority, string systemKey, object userState) {
            if ((this.UpdateTemplateBlockPriorityOperationCompleted == null)) {
                this.UpdateTemplateBlockPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateBlockPriorityOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplateBlockPriority", new object[] {
                        blockIDs,
                        priority,
                        systemKey}, this.UpdateTemplateBlockPriorityOperationCompleted, userState);
        }
        
        private void OnUpdateTemplateBlockPriorityOperationCompleted(object arg) {
            if ((this.UpdateTemplateBlockPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplateBlockPriorityCompleted(this, new UpdateTemplateBlockPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorages4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.StoragesDataTable GetStorages4BC(string systemKey, System.Guid No1) {
            object[] results = this.Invoke("GetStorages4BC", new object[] {
                        systemKey,
                        No1});
            return ((BroadcastDS.StoragesDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorages4BCAsync(string systemKey, System.Guid No1) {
            this.GetStorages4BCAsync(systemKey, No1, null);
        }
        
        /// <remarks/>
        public void GetStorages4BCAsync(string systemKey, System.Guid No1, object userState) {
            if ((this.GetStorages4BCOperationCompleted == null)) {
                this.GetStorages4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorages4BCOperationCompleted);
            }
            this.InvokeAsync("GetStorages4BC", new object[] {
                        systemKey,
                        No1}, this.GetStorages4BCOperationCompleted, userState);
        }
        
        private void OnGetStorages4BCOperationCompleted(object arg) {
            if ((this.GetStorages4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorages4BCCompleted(this, new GetStorages4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStoragesByWorkgroupIDCategoryType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.StoragesDataTable GetStoragesByWorkgroupIDCategoryType(int categoryType, System.Guid workgroupID, string systemKey) {
            object[] results = this.Invoke("GetStoragesByWorkgroupIDCategoryType", new object[] {
                        categoryType,
                        workgroupID,
                        systemKey});
            return ((BroadcastDS.StoragesDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoragesByWorkgroupIDCategoryTypeAsync(int categoryType, System.Guid workgroupID, string systemKey) {
            this.GetStoragesByWorkgroupIDCategoryTypeAsync(categoryType, workgroupID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetStoragesByWorkgroupIDCategoryTypeAsync(int categoryType, System.Guid workgroupID, string systemKey, object userState) {
            if ((this.GetStoragesByWorkgroupIDCategoryTypeOperationCompleted == null)) {
                this.GetStoragesByWorkgroupIDCategoryTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoragesByWorkgroupIDCategoryTypeOperationCompleted);
            }
            this.InvokeAsync("GetStoragesByWorkgroupIDCategoryType", new object[] {
                        categoryType,
                        workgroupID,
                        systemKey}, this.GetStoragesByWorkgroupIDCategoryTypeOperationCompleted, userState);
        }
        
        private void OnGetStoragesByWorkgroupIDCategoryTypeOperationCompleted(object arg) {
            if ((this.GetStoragesByWorkgroupIDCategoryTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoragesByWorkgroupIDCategoryTypeCompleted(this, new GetStoragesByWorkgroupIDCategoryTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageName4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageName4BC(System.Guid storageID, System.Guid workgroupID, int categoryType, string storageName, string systemKey) {
            object[] results = this.Invoke("IsExistStorageName4BC", new object[] {
                        storageID,
                        workgroupID,
                        categoryType,
                        storageName,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageName4BCAsync(System.Guid storageID, System.Guid workgroupID, int categoryType, string storageName, string systemKey) {
            this.IsExistStorageName4BCAsync(storageID, workgroupID, categoryType, storageName, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistStorageName4BCAsync(System.Guid storageID, System.Guid workgroupID, int categoryType, string storageName, string systemKey, object userState) {
            if ((this.IsExistStorageName4BCOperationCompleted == null)) {
                this.IsExistStorageName4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageName4BCOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageName4BC", new object[] {
                        storageID,
                        workgroupID,
                        categoryType,
                        storageName,
                        systemKey}, this.IsExistStorageName4BCOperationCompleted, userState);
        }
        
        private void OnIsExistStorageName4BCOperationCompleted(object arg) {
            if ((this.IsExistStorageName4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageName4BCCompleted(this, new IsExistStorageName4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStorage4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStorage4BC(System.Guid storageID, string storageName, int maxSpaceMB, int maxSpaceHour, int freeSpaceMB, int freeSpaceHour, bool lastEnter, int categoryType, System.Guid workgroupID, string audServer1, string audServer2, string audServer3, string audServer4, string description, string systemKey) {
            object[] results = this.Invoke("CreateStorage4BC", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        lastEnter,
                        categoryType,
                        workgroupID,
                        audServer1,
                        audServer2,
                        audServer3,
                        audServer4,
                        description,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStorage4BCAsync(System.Guid storageID, string storageName, int maxSpaceMB, int maxSpaceHour, int freeSpaceMB, int freeSpaceHour, bool lastEnter, int categoryType, System.Guid workgroupID, string audServer1, string audServer2, string audServer3, string audServer4, string description, string systemKey) {
            this.CreateStorage4BCAsync(storageID, storageName, maxSpaceMB, maxSpaceHour, freeSpaceMB, freeSpaceHour, lastEnter, categoryType, workgroupID, audServer1, audServer2, audServer3, audServer4, description, systemKey, null);
        }
        
        /// <remarks/>
        public void CreateStorage4BCAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    bool lastEnter, 
                    int categoryType, 
                    System.Guid workgroupID, 
                    string audServer1, 
                    string audServer2, 
                    string audServer3, 
                    string audServer4, 
                    string description, 
                    string systemKey, 
                    object userState) {
            if ((this.CreateStorage4BCOperationCompleted == null)) {
                this.CreateStorage4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStorage4BCOperationCompleted);
            }
            this.InvokeAsync("CreateStorage4BC", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        lastEnter,
                        categoryType,
                        workgroupID,
                        audServer1,
                        audServer2,
                        audServer3,
                        audServer4,
                        description,
                        systemKey}, this.CreateStorage4BCOperationCompleted, userState);
        }
        
        private void OnCreateStorage4BCOperationCompleted(object arg) {
            if ((this.CreateStorage4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStorage4BCCompleted(this, new CreateStorage4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorage4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorage4BC(System.Guid storageID, string storageName, int maxSpaceMB, int maxSpaceHour, int freeSpaceMB, int freeSpaceHour, string audServer1, string audServer2, string audServer3, string audServer4, string description, string systemKey) {
            object[] results = this.Invoke("UpdateStorage4BC", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        audServer1,
                        audServer2,
                        audServer3,
                        audServer4,
                        description,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorage4BCAsync(System.Guid storageID, string storageName, int maxSpaceMB, int maxSpaceHour, int freeSpaceMB, int freeSpaceHour, string audServer1, string audServer2, string audServer3, string audServer4, string description, string systemKey) {
            this.UpdateStorage4BCAsync(storageID, storageName, maxSpaceMB, maxSpaceHour, freeSpaceMB, freeSpaceHour, audServer1, audServer2, audServer3, audServer4, description, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateStorage4BCAsync(System.Guid storageID, string storageName, int maxSpaceMB, int maxSpaceHour, int freeSpaceMB, int freeSpaceHour, string audServer1, string audServer2, string audServer3, string audServer4, string description, string systemKey, object userState) {
            if ((this.UpdateStorage4BCOperationCompleted == null)) {
                this.UpdateStorage4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorage4BCOperationCompleted);
            }
            this.InvokeAsync("UpdateStorage4BC", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        audServer1,
                        audServer2,
                        audServer3,
                        audServer4,
                        description,
                        systemKey}, this.UpdateStorage4BCOperationCompleted, userState);
        }
        
        private void OnUpdateStorage4BCOperationCompleted(object arg) {
            if ((this.UpdateStorage4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorage4BCCompleted(this, new UpdateStorage4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorage4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorage4BC(System.Guid storageID, string systemKey) {
            object[] results = this.Invoke("DeleteStorage4BC", new object[] {
                        storageID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorage4BCAsync(System.Guid storageID, string systemKey) {
            this.DeleteStorage4BCAsync(storageID, systemKey, null);
        }
        
        /// <remarks/>
        public void DeleteStorage4BCAsync(System.Guid storageID, string systemKey, object userState) {
            if ((this.DeleteStorage4BCOperationCompleted == null)) {
                this.DeleteStorage4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorage4BCOperationCompleted);
            }
            this.InvokeAsync("DeleteStorage4BC", new object[] {
                        storageID,
                        systemKey}, this.DeleteStorage4BCOperationCompleted, userState);
        }
        
        private void OnDeleteStorage4BCOperationCompleted(object arg) {
            if ((this.DeleteStorage4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorage4BCCompleted(this, new DeleteStorage4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyStorage4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyStorage4BC(BroadcastDS.StoragesDataTable storageDT, string systemKey) {
            object[] results = this.Invoke("CopyStorage4BC", new object[] {
                        storageDT,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyStorage4BCAsync(BroadcastDS.StoragesDataTable storageDT, string systemKey) {
            this.CopyStorage4BCAsync(storageDT, systemKey, null);
        }
        
        /// <remarks/>
        public void CopyStorage4BCAsync(BroadcastDS.StoragesDataTable storageDT, string systemKey, object userState) {
            if ((this.CopyStorage4BCOperationCompleted == null)) {
                this.CopyStorage4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyStorage4BCOperationCompleted);
            }
            this.InvokeAsync("CopyStorage4BC", new object[] {
                        storageDT,
                        systemKey}, this.CopyStorage4BCOperationCompleted, userState);
        }
        
        private void OnCopyStorage4BCOperationCompleted(object arg) {
            if ((this.CopyStorage4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyStorage4BCCompleted(this, new CopyStorage4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyStorageAndStorageZone4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyStorageAndStorageZone4BC(BroadcastDS.StoragesDataTable storageDT, BroadcastDS.StorageZoneDataTable storageZoneDT, string systemKey) {
            object[] results = this.Invoke("CopyStorageAndStorageZone4BC", new object[] {
                        storageDT,
                        storageZoneDT,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyStorageAndStorageZone4BCAsync(BroadcastDS.StoragesDataTable storageDT, BroadcastDS.StorageZoneDataTable storageZoneDT, string systemKey) {
            this.CopyStorageAndStorageZone4BCAsync(storageDT, storageZoneDT, systemKey, null);
        }
        
        /// <remarks/>
        public void CopyStorageAndStorageZone4BCAsync(BroadcastDS.StoragesDataTable storageDT, BroadcastDS.StorageZoneDataTable storageZoneDT, string systemKey, object userState) {
            if ((this.CopyStorageAndStorageZone4BCOperationCompleted == null)) {
                this.CopyStorageAndStorageZone4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyStorageAndStorageZone4BCOperationCompleted);
            }
            this.InvokeAsync("CopyStorageAndStorageZone4BC", new object[] {
                        storageDT,
                        storageZoneDT,
                        systemKey}, this.CopyStorageAndStorageZone4BCOperationCompleted, userState);
        }
        
        private void OnCopyStorageAndStorageZone4BCOperationCompleted(object arg) {
            if ((this.CopyStorageAndStorageZone4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyStorageAndStorageZone4BCCompleted(this, new CopyStorageAndStorageZone4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersSpaceByWorkgroupID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsersSpaceByWorkgroupID(System.Guid workgroupID, string systemKey) {
            object[] results = this.Invoke("GetUsersSpaceByWorkgroupID", new object[] {
                        workgroupID,
                        systemKey});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersSpaceByWorkgroupIDAsync(System.Guid workgroupID, string systemKey) {
            this.GetUsersSpaceByWorkgroupIDAsync(workgroupID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetUsersSpaceByWorkgroupIDAsync(System.Guid workgroupID, string systemKey, object userState) {
            if ((this.GetUsersSpaceByWorkgroupIDOperationCompleted == null)) {
                this.GetUsersSpaceByWorkgroupIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersSpaceByWorkgroupIDOperationCompleted);
            }
            this.InvokeAsync("GetUsersSpaceByWorkgroupID", new object[] {
                        workgroupID,
                        systemKey}, this.GetUsersSpaceByWorkgroupIDOperationCompleted, userState);
        }
        
        private void OnGetUsersSpaceByWorkgroupIDOperationCompleted(object arg) {
            if ((this.GetUsersSpaceByWorkgroupIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersSpaceByWorkgroupIDCompleted(this, new GetUsersSpaceByWorkgroupIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZones", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.StorageZoneDataTable GetStorageZones(string systemKey) {
            object[] results = this.Invoke("GetStorageZones", new object[] {
                        systemKey});
            return ((BroadcastDS.StorageZoneDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZonesAsync(string systemKey) {
            this.GetStorageZonesAsync(systemKey, null);
        }
        
        /// <remarks/>
        public void GetStorageZonesAsync(string systemKey, object userState) {
            if ((this.GetStorageZonesOperationCompleted == null)) {
                this.GetStorageZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZonesOperationCompleted);
            }
            this.InvokeAsync("GetStorageZones", new object[] {
                        systemKey}, this.GetStorageZonesOperationCompleted, userState);
        }
        
        private void OnGetStorageZonesOperationCompleted(object arg) {
            if ((this.GetStorageZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZonesCompleted(this, new GetStorageZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZoneByStorageID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.StorageZoneDataTable GetStorageZoneByStorageID(System.Guid storageID, string systemKey) {
            object[] results = this.Invoke("GetStorageZoneByStorageID", new object[] {
                        storageID,
                        systemKey});
            return ((BroadcastDS.StorageZoneDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZoneByStorageIDAsync(System.Guid storageID, string systemKey) {
            this.GetStorageZoneByStorageIDAsync(storageID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetStorageZoneByStorageIDAsync(System.Guid storageID, string systemKey, object userState) {
            if ((this.GetStorageZoneByStorageIDOperationCompleted == null)) {
                this.GetStorageZoneByStorageIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZoneByStorageIDOperationCompleted);
            }
            this.InvokeAsync("GetStorageZoneByStorageID", new object[] {
                        storageID,
                        systemKey}, this.GetStorageZoneByStorageIDOperationCompleted, userState);
        }
        
        private void OnGetStorageZoneByStorageIDOperationCompleted(object arg) {
            if ((this.GetStorageZoneByStorageIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZoneByStorageIDCompleted(this, new GetStorageZoneByStorageIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingStorageZone4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingStorageZone4BC(System.Guid storageID, int zoneID, string systemKey) {
            object[] results = this.Invoke("IsUsingStorageZone4BC", new object[] {
                        storageID,
                        zoneID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingStorageZone4BCAsync(System.Guid storageID, int zoneID, string systemKey) {
            this.IsUsingStorageZone4BCAsync(storageID, zoneID, systemKey, null);
        }
        
        /// <remarks/>
        public void IsUsingStorageZone4BCAsync(System.Guid storageID, int zoneID, string systemKey, object userState) {
            if ((this.IsUsingStorageZone4BCOperationCompleted == null)) {
                this.IsUsingStorageZone4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingStorageZone4BCOperationCompleted);
            }
            this.InvokeAsync("IsUsingStorageZone4BC", new object[] {
                        storageID,
                        zoneID,
                        systemKey}, this.IsUsingStorageZone4BCOperationCompleted, userState);
        }
        
        private void OnIsUsingStorageZone4BCOperationCompleted(object arg) {
            if ((this.IsUsingStorageZone4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingStorageZone4BCCompleted(this, new IsUsingStorageZone4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageID4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageID4BC(System.Guid storageID, string systemKey) {
            object[] results = this.Invoke("IsExistStorageID4BC", new object[] {
                        storageID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageID4BCAsync(System.Guid storageID, string systemKey) {
            this.IsExistStorageID4BCAsync(storageID, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistStorageID4BCAsync(System.Guid storageID, string systemKey, object userState) {
            if ((this.IsExistStorageID4BCOperationCompleted == null)) {
                this.IsExistStorageID4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageID4BCOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageID4BC", new object[] {
                        storageID,
                        systemKey}, this.IsExistStorageID4BCOperationCompleted, userState);
        }
        
        private void OnIsExistStorageID4BCOperationCompleted(object arg) {
            if ((this.IsExistStorageID4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageID4BCCompleted(this, new IsExistStorageID4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZoneNumber4BC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetStorageZoneNumber4BC(System.Guid storageID, string systemKey) {
            object[] results = this.Invoke("GetStorageZoneNumber4BC", new object[] {
                        storageID,
                        systemKey});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZoneNumber4BCAsync(System.Guid storageID, string systemKey) {
            this.GetStorageZoneNumber4BCAsync(storageID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetStorageZoneNumber4BCAsync(System.Guid storageID, string systemKey, object userState) {
            if ((this.GetStorageZoneNumber4BCOperationCompleted == null)) {
                this.GetStorageZoneNumber4BCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZoneNumber4BCOperationCompleted);
            }
            this.InvokeAsync("GetStorageZoneNumber4BC", new object[] {
                        storageID,
                        systemKey}, this.GetStorageZoneNumber4BCOperationCompleted, userState);
        }
        
        private void OnGetStorageZoneNumber4BCOperationCompleted(object arg) {
            if ((this.GetStorageZoneNumber4BCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZoneNumber4BCCompleted(this, new GetStorageZoneNumber4BCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStorageZone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStorageZone(
                    System.Guid storageID, 
                    int zoneID, 
                    string name, 
                    string ftpServer1, 
                    int ftpPort1, 
                    string ftpDir1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    string fileStreamServer1, 
                    int fileStreamPort1, 
                    string ftpServer2, 
                    int ftpPort2, 
                    string ftpDir2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    string fileStreamServer2, 
                    int fileStreamPort2, 
                    string ftpServer3, 
                    int ftpPort3, 
                    string ftpDir3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    string fileStreamServer3, 
                    int fileStreamPort3, 
                    string ftpServer4, 
                    int ftpPort4, 
                    string ftpDir4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    string fileStreamServer4, 
                    int fileStreamPort4, 
                    string systemKey) {
            object[] results = this.Invoke("CreateStorageZone", new object[] {
                        storageID,
                        zoneID,
                        name,
                        ftpServer1,
                        ftpPort1,
                        ftpDir1,
                        ftpUser1,
                        ftpPassword1,
                        fileStreamServer1,
                        fileStreamPort1,
                        ftpServer2,
                        ftpPort2,
                        ftpDir2,
                        ftpUser2,
                        ftpPassword2,
                        fileStreamServer2,
                        fileStreamPort2,
                        ftpServer3,
                        ftpPort3,
                        ftpDir3,
                        ftpUser3,
                        ftpPassword3,
                        fileStreamServer3,
                        fileStreamPort3,
                        ftpServer4,
                        ftpPort4,
                        ftpDir4,
                        ftpUser4,
                        ftpPassword4,
                        fileStreamServer4,
                        fileStreamPort4,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStorageZoneAsync(
                    System.Guid storageID, 
                    int zoneID, 
                    string name, 
                    string ftpServer1, 
                    int ftpPort1, 
                    string ftpDir1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    string fileStreamServer1, 
                    int fileStreamPort1, 
                    string ftpServer2, 
                    int ftpPort2, 
                    string ftpDir2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    string fileStreamServer2, 
                    int fileStreamPort2, 
                    string ftpServer3, 
                    int ftpPort3, 
                    string ftpDir3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    string fileStreamServer3, 
                    int fileStreamPort3, 
                    string ftpServer4, 
                    int ftpPort4, 
                    string ftpDir4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    string fileStreamServer4, 
                    int fileStreamPort4, 
                    string systemKey) {
            this.CreateStorageZoneAsync(storageID, zoneID, name, ftpServer1, ftpPort1, ftpDir1, ftpUser1, ftpPassword1, fileStreamServer1, fileStreamPort1, ftpServer2, ftpPort2, ftpDir2, ftpUser2, ftpPassword2, fileStreamServer2, fileStreamPort2, ftpServer3, ftpPort3, ftpDir3, ftpUser3, ftpPassword3, fileStreamServer3, fileStreamPort3, ftpServer4, ftpPort4, ftpDir4, ftpUser4, ftpPassword4, fileStreamServer4, fileStreamPort4, systemKey, null);
        }
        
        /// <remarks/>
        public void CreateStorageZoneAsync(
                    System.Guid storageID, 
                    int zoneID, 
                    string name, 
                    string ftpServer1, 
                    int ftpPort1, 
                    string ftpDir1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    string fileStreamServer1, 
                    int fileStreamPort1, 
                    string ftpServer2, 
                    int ftpPort2, 
                    string ftpDir2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    string fileStreamServer2, 
                    int fileStreamPort2, 
                    string ftpServer3, 
                    int ftpPort3, 
                    string ftpDir3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    string fileStreamServer3, 
                    int fileStreamPort3, 
                    string ftpServer4, 
                    int ftpPort4, 
                    string ftpDir4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    string fileStreamServer4, 
                    int fileStreamPort4, 
                    string systemKey, 
                    object userState) {
            if ((this.CreateStorageZoneOperationCompleted == null)) {
                this.CreateStorageZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStorageZoneOperationCompleted);
            }
            this.InvokeAsync("CreateStorageZone", new object[] {
                        storageID,
                        zoneID,
                        name,
                        ftpServer1,
                        ftpPort1,
                        ftpDir1,
                        ftpUser1,
                        ftpPassword1,
                        fileStreamServer1,
                        fileStreamPort1,
                        ftpServer2,
                        ftpPort2,
                        ftpDir2,
                        ftpUser2,
                        ftpPassword2,
                        fileStreamServer2,
                        fileStreamPort2,
                        ftpServer3,
                        ftpPort3,
                        ftpDir3,
                        ftpUser3,
                        ftpPassword3,
                        fileStreamServer3,
                        fileStreamPort3,
                        ftpServer4,
                        ftpPort4,
                        ftpDir4,
                        ftpUser4,
                        ftpPassword4,
                        fileStreamServer4,
                        fileStreamPort4,
                        systemKey}, this.CreateStorageZoneOperationCompleted, userState);
        }
        
        private void OnCreateStorageZoneOperationCompleted(object arg) {
            if ((this.CreateStorageZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStorageZoneCompleted(this, new CreateStorageZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorageZone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorageZone(
                    System.Guid storageID, 
                    int zoneID1, 
                    int zoneID2, 
                    string name, 
                    string ftpServer1, 
                    int ftpPort1, 
                    string ftpDir1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    string fileStreamServer1, 
                    int fileStreamPort1, 
                    string ftpServer2, 
                    int ftpPort2, 
                    string ftpDir2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    string fileStreamServer2, 
                    int fileStreamPort2, 
                    string ftpServer3, 
                    int ftpPort3, 
                    string ftpDir3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    string fileStreamServer3, 
                    int fileStreamPort3, 
                    string ftpServer4, 
                    int ftpPort4, 
                    string ftpDir4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    string fileStreamServer4, 
                    int fileStreamPort4, 
                    string systemKey) {
            object[] results = this.Invoke("UpdateStorageZone", new object[] {
                        storageID,
                        zoneID1,
                        zoneID2,
                        name,
                        ftpServer1,
                        ftpPort1,
                        ftpDir1,
                        ftpUser1,
                        ftpPassword1,
                        fileStreamServer1,
                        fileStreamPort1,
                        ftpServer2,
                        ftpPort2,
                        ftpDir2,
                        ftpUser2,
                        ftpPassword2,
                        fileStreamServer2,
                        fileStreamPort2,
                        ftpServer3,
                        ftpPort3,
                        ftpDir3,
                        ftpUser3,
                        ftpPassword3,
                        fileStreamServer3,
                        fileStreamPort3,
                        ftpServer4,
                        ftpPort4,
                        ftpDir4,
                        ftpUser4,
                        ftpPassword4,
                        fileStreamServer4,
                        fileStreamPort4,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorageZoneAsync(
                    System.Guid storageID, 
                    int zoneID1, 
                    int zoneID2, 
                    string name, 
                    string ftpServer1, 
                    int ftpPort1, 
                    string ftpDir1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    string fileStreamServer1, 
                    int fileStreamPort1, 
                    string ftpServer2, 
                    int ftpPort2, 
                    string ftpDir2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    string fileStreamServer2, 
                    int fileStreamPort2, 
                    string ftpServer3, 
                    int ftpPort3, 
                    string ftpDir3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    string fileStreamServer3, 
                    int fileStreamPort3, 
                    string ftpServer4, 
                    int ftpPort4, 
                    string ftpDir4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    string fileStreamServer4, 
                    int fileStreamPort4, 
                    string systemKey) {
            this.UpdateStorageZoneAsync(storageID, zoneID1, zoneID2, name, ftpServer1, ftpPort1, ftpDir1, ftpUser1, ftpPassword1, fileStreamServer1, fileStreamPort1, ftpServer2, ftpPort2, ftpDir2, ftpUser2, ftpPassword2, fileStreamServer2, fileStreamPort2, ftpServer3, ftpPort3, ftpDir3, ftpUser3, ftpPassword3, fileStreamServer3, fileStreamPort3, ftpServer4, ftpPort4, ftpDir4, ftpUser4, ftpPassword4, fileStreamServer4, fileStreamPort4, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateStorageZoneAsync(
                    System.Guid storageID, 
                    int zoneID1, 
                    int zoneID2, 
                    string name, 
                    string ftpServer1, 
                    int ftpPort1, 
                    string ftpDir1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    string fileStreamServer1, 
                    int fileStreamPort1, 
                    string ftpServer2, 
                    int ftpPort2, 
                    string ftpDir2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    string fileStreamServer2, 
                    int fileStreamPort2, 
                    string ftpServer3, 
                    int ftpPort3, 
                    string ftpDir3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    string fileStreamServer3, 
                    int fileStreamPort3, 
                    string ftpServer4, 
                    int ftpPort4, 
                    string ftpDir4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    string fileStreamServer4, 
                    int fileStreamPort4, 
                    string systemKey, 
                    object userState) {
            if ((this.UpdateStorageZoneOperationCompleted == null)) {
                this.UpdateStorageZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorageZoneOperationCompleted);
            }
            this.InvokeAsync("UpdateStorageZone", new object[] {
                        storageID,
                        zoneID1,
                        zoneID2,
                        name,
                        ftpServer1,
                        ftpPort1,
                        ftpDir1,
                        ftpUser1,
                        ftpPassword1,
                        fileStreamServer1,
                        fileStreamPort1,
                        ftpServer2,
                        ftpPort2,
                        ftpDir2,
                        ftpUser2,
                        ftpPassword2,
                        fileStreamServer2,
                        fileStreamPort2,
                        ftpServer3,
                        ftpPort3,
                        ftpDir3,
                        ftpUser3,
                        ftpPassword3,
                        fileStreamServer3,
                        fileStreamPort3,
                        ftpServer4,
                        ftpPort4,
                        ftpDir4,
                        ftpUser4,
                        ftpPassword4,
                        fileStreamServer4,
                        fileStreamPort4,
                        systemKey}, this.UpdateStorageZoneOperationCompleted, userState);
        }
        
        private void OnUpdateStorageZoneOperationCompleted(object arg) {
            if ((this.UpdateStorageZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorageZoneCompleted(this, new UpdateStorageZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorageZone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorageZone(System.Guid storageID, int zoneID, string systemKey) {
            object[] results = this.Invoke("DeleteStorageZone", new object[] {
                        storageID,
                        zoneID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorageZoneAsync(System.Guid storageID, int zoneID, string systemKey) {
            this.DeleteStorageZoneAsync(storageID, zoneID, systemKey, null);
        }
        
        /// <remarks/>
        public void DeleteStorageZoneAsync(System.Guid storageID, int zoneID, string systemKey, object userState) {
            if ((this.DeleteStorageZoneOperationCompleted == null)) {
                this.DeleteStorageZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorageZoneOperationCompleted);
            }
            this.InvokeAsync("DeleteStorageZone", new object[] {
                        storageID,
                        zoneID,
                        systemKey}, this.DeleteStorageZoneOperationCompleted, userState);
        }
        
        private void OnDeleteStorageZoneOperationCompleted(object arg) {
            if ((this.DeleteStorageZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorageZoneCompleted(this, new DeleteStorageZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyStorageZone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyStorageZone(BroadcastDS.StorageZoneDataTable storageZongDT, string systemKey) {
            object[] results = this.Invoke("CopyStorageZone", new object[] {
                        storageZongDT,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyStorageZoneAsync(BroadcastDS.StorageZoneDataTable storageZongDT, string systemKey) {
            this.CopyStorageZoneAsync(storageZongDT, systemKey, null);
        }
        
        /// <remarks/>
        public void CopyStorageZoneAsync(BroadcastDS.StorageZoneDataTable storageZongDT, string systemKey, object userState) {
            if ((this.CopyStorageZoneOperationCompleted == null)) {
                this.CopyStorageZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyStorageZoneOperationCompleted);
            }
            this.InvokeAsync("CopyStorageZone", new object[] {
                        storageZongDT,
                        systemKey}, this.CopyStorageZoneOperationCompleted, userState);
        }
        
        private void OnCopyStorageZoneOperationCompleted(object arg) {
            if ((this.CopyStorageZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyStorageZoneCompleted(this, new CopyStorageZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkgroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.WorkgroupsDataTable GetWorkgroups(string systemKey) {
            object[] results = this.Invoke("GetWorkgroups", new object[] {
                        systemKey});
            return ((BroadcastDS.WorkgroupsDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkgroupsAsync(string systemKey) {
            this.GetWorkgroupsAsync(systemKey, null);
        }
        
        /// <remarks/>
        public void GetWorkgroupsAsync(string systemKey, object userState) {
            if ((this.GetWorkgroupsOperationCompleted == null)) {
                this.GetWorkgroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkgroupsOperationCompleted);
            }
            this.InvokeAsync("GetWorkgroups", new object[] {
                        systemKey}, this.GetWorkgroupsOperationCompleted, userState);
        }
        
        private void OnGetWorkgroupsOperationCompleted(object arg) {
            if ((this.GetWorkgroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkgroupsCompleted(this, new GetWorkgroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkgroupsByStationID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.WorkgroupsDataTable GetWorkgroupsByStationID(System.Guid stationID, string systemKey) {
            object[] results = this.Invoke("GetWorkgroupsByStationID", new object[] {
                        stationID,
                        systemKey});
            return ((BroadcastDS.WorkgroupsDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkgroupsByStationIDAsync(System.Guid stationID, string systemKey) {
            this.GetWorkgroupsByStationIDAsync(stationID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetWorkgroupsByStationIDAsync(System.Guid stationID, string systemKey, object userState) {
            if ((this.GetWorkgroupsByStationIDOperationCompleted == null)) {
                this.GetWorkgroupsByStationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkgroupsByStationIDOperationCompleted);
            }
            this.InvokeAsync("GetWorkgroupsByStationID", new object[] {
                        stationID,
                        systemKey}, this.GetWorkgroupsByStationIDOperationCompleted, userState);
        }
        
        private void OnGetWorkgroupsByStationIDOperationCompleted(object arg) {
            if ((this.GetWorkgroupsByStationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkgroupsByStationIDCompleted(this, new GetWorkgroupsByStationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsedSapceByWorkgroupIDInUserSpace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UsedSapceByWorkgroupIDInUserSpace(System.Guid workgroupID, string systemKey) {
            object[] results = this.Invoke("UsedSapceByWorkgroupIDInUserSpace", new object[] {
                        workgroupID,
                        systemKey});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UsedSapceByWorkgroupIDInUserSpaceAsync(System.Guid workgroupID, string systemKey) {
            this.UsedSapceByWorkgroupIDInUserSpaceAsync(workgroupID, systemKey, null);
        }
        
        /// <remarks/>
        public void UsedSapceByWorkgroupIDInUserSpaceAsync(System.Guid workgroupID, string systemKey, object userState) {
            if ((this.UsedSapceByWorkgroupIDInUserSpaceOperationCompleted == null)) {
                this.UsedSapceByWorkgroupIDInUserSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsedSapceByWorkgroupIDInUserSpaceOperationCompleted);
            }
            this.InvokeAsync("UsedSapceByWorkgroupIDInUserSpace", new object[] {
                        workgroupID,
                        systemKey}, this.UsedSapceByWorkgroupIDInUserSpaceOperationCompleted, userState);
        }
        
        private void OnUsedSapceByWorkgroupIDInUserSpaceOperationCompleted(object arg) {
            if ((this.UsedSapceByWorkgroupIDInUserSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsedSapceByWorkgroupIDInUserSpaceCompleted(this, new UsedSapceByWorkgroupIDInUserSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistWorkgroupsInStorages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistWorkgroupsInStorages(System.Guid workgroupID, string systemKey) {
            object[] results = this.Invoke("IsExistWorkgroupsInStorages", new object[] {
                        workgroupID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsInStoragesAsync(System.Guid workgroupID, string systemKey) {
            this.IsExistWorkgroupsInStoragesAsync(workgroupID, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsInStoragesAsync(System.Guid workgroupID, string systemKey, object userState) {
            if ((this.IsExistWorkgroupsInStoragesOperationCompleted == null)) {
                this.IsExistWorkgroupsInStoragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistWorkgroupsInStoragesOperationCompleted);
            }
            this.InvokeAsync("IsExistWorkgroupsInStorages", new object[] {
                        workgroupID,
                        systemKey}, this.IsExistWorkgroupsInStoragesOperationCompleted, userState);
        }
        
        private void OnIsExistWorkgroupsInStoragesOperationCompleted(object arg) {
            if ((this.IsExistWorkgroupsInStoragesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistWorkgroupsInStoragesCompleted(this, new IsExistWorkgroupsInStoragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistWorkgroupsInWorkgroup2Stations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistWorkgroupsInWorkgroup2Stations(System.Guid workgroupID, string systemKey) {
            object[] results = this.Invoke("IsExistWorkgroupsInWorkgroup2Stations", new object[] {
                        workgroupID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsInWorkgroup2StationsAsync(System.Guid workgroupID, string systemKey) {
            this.IsExistWorkgroupsInWorkgroup2StationsAsync(workgroupID, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsInWorkgroup2StationsAsync(System.Guid workgroupID, string systemKey, object userState) {
            if ((this.IsExistWorkgroupsInWorkgroup2StationsOperationCompleted == null)) {
                this.IsExistWorkgroupsInWorkgroup2StationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistWorkgroupsInWorkgroup2StationsOperationCompleted);
            }
            this.InvokeAsync("IsExistWorkgroupsInWorkgroup2Stations", new object[] {
                        workgroupID,
                        systemKey}, this.IsExistWorkgroupsInWorkgroup2StationsOperationCompleted, userState);
        }
        
        private void OnIsExistWorkgroupsInWorkgroup2StationsOperationCompleted(object arg) {
            if ((this.IsExistWorkgroupsInWorkgroup2StationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistWorkgroupsInWorkgroup2StationsCompleted(this, new IsExistWorkgroupsInWorkgroup2StationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistWorkgroupsWorkgroupName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistWorkgroupsWorkgroupName(string workgroupName, string systemKey) {
            object[] results = this.Invoke("IsExistWorkgroupsWorkgroupName", new object[] {
                        workgroupName,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsWorkgroupNameAsync(string workgroupName, string systemKey) {
            this.IsExistWorkgroupsWorkgroupNameAsync(workgroupName, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsWorkgroupNameAsync(string workgroupName, string systemKey, object userState) {
            if ((this.IsExistWorkgroupsWorkgroupNameOperationCompleted == null)) {
                this.IsExistWorkgroupsWorkgroupNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistWorkgroupsWorkgroupNameOperationCompleted);
            }
            this.InvokeAsync("IsExistWorkgroupsWorkgroupName", new object[] {
                        workgroupName,
                        systemKey}, this.IsExistWorkgroupsWorkgroupNameOperationCompleted, userState);
        }
        
        private void OnIsExistWorkgroupsWorkgroupNameOperationCompleted(object arg) {
            if ((this.IsExistWorkgroupsWorkgroupNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistWorkgroupsWorkgroupNameCompleted(this, new IsExistWorkgroupsWorkgroupNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistWorkgroupsWorkgroupNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistWorkgroupsWorkgroupNumber(int workgroupNumber, string systemKey) {
            object[] results = this.Invoke("IsExistWorkgroupsWorkgroupNumber", new object[] {
                        workgroupNumber,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsWorkgroupNumberAsync(int workgroupNumber, string systemKey) {
            this.IsExistWorkgroupsWorkgroupNumberAsync(workgroupNumber, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistWorkgroupsWorkgroupNumberAsync(int workgroupNumber, string systemKey, object userState) {
            if ((this.IsExistWorkgroupsWorkgroupNumberOperationCompleted == null)) {
                this.IsExistWorkgroupsWorkgroupNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistWorkgroupsWorkgroupNumberOperationCompleted);
            }
            this.InvokeAsync("IsExistWorkgroupsWorkgroupNumber", new object[] {
                        workgroupNumber,
                        systemKey}, this.IsExistWorkgroupsWorkgroupNumberOperationCompleted, userState);
        }
        
        private void OnIsExistWorkgroupsWorkgroupNumberOperationCompleted(object arg) {
            if ((this.IsExistWorkgroupsWorkgroupNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistWorkgroupsWorkgroupNumberCompleted(this, new IsExistWorkgroupsWorkgroupNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateWorkgroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateWorkgroup(System.Guid workgroupID, string workgroupName, int workgroupNumber, string systemKey) {
            object[] results = this.Invoke("CreateWorkgroup", new object[] {
                        workgroupID,
                        workgroupName,
                        workgroupNumber,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWorkgroupAsync(System.Guid workgroupID, string workgroupName, int workgroupNumber, string systemKey) {
            this.CreateWorkgroupAsync(workgroupID, workgroupName, workgroupNumber, systemKey, null);
        }
        
        /// <remarks/>
        public void CreateWorkgroupAsync(System.Guid workgroupID, string workgroupName, int workgroupNumber, string systemKey, object userState) {
            if ((this.CreateWorkgroupOperationCompleted == null)) {
                this.CreateWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWorkgroupOperationCompleted);
            }
            this.InvokeAsync("CreateWorkgroup", new object[] {
                        workgroupID,
                        workgroupName,
                        workgroupNumber,
                        systemKey}, this.CreateWorkgroupOperationCompleted, userState);
        }
        
        private void OnCreateWorkgroupOperationCompleted(object arg) {
            if ((this.CreateWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWorkgroupCompleted(this, new CreateWorkgroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkgroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWorkgroup(System.Guid workgroupID, string workgroupName, int workgroupNumber, string systemKey) {
            object[] results = this.Invoke("UpdateWorkgroup", new object[] {
                        workgroupID,
                        workgroupName,
                        workgroupNumber,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkgroupAsync(System.Guid workgroupID, string workgroupName, int workgroupNumber, string systemKey) {
            this.UpdateWorkgroupAsync(workgroupID, workgroupName, workgroupNumber, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateWorkgroupAsync(System.Guid workgroupID, string workgroupName, int workgroupNumber, string systemKey, object userState) {
            if ((this.UpdateWorkgroupOperationCompleted == null)) {
                this.UpdateWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkgroupOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkgroup", new object[] {
                        workgroupID,
                        workgroupName,
                        workgroupNumber,
                        systemKey}, this.UpdateWorkgroupOperationCompleted, userState);
        }
        
        private void OnUpdateWorkgroupOperationCompleted(object arg) {
            if ((this.UpdateWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkgroupCompleted(this, new UpdateWorkgroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteWorkgroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteWorkgroup(System.Guid workgroupID, string systemKey) {
            object[] results = this.Invoke("DeleteWorkgroup", new object[] {
                        workgroupID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkgroupAsync(System.Guid workgroupID, string systemKey) {
            this.DeleteWorkgroupAsync(workgroupID, systemKey, null);
        }
        
        /// <remarks/>
        public void DeleteWorkgroupAsync(System.Guid workgroupID, string systemKey, object userState) {
            if ((this.DeleteWorkgroupOperationCompleted == null)) {
                this.DeleteWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkgroupOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkgroup", new object[] {
                        workgroupID,
                        systemKey}, this.DeleteWorkgroupOperationCompleted, userState);
        }
        
        private void OnDeleteWorkgroupOperationCompleted(object arg) {
            if ((this.DeleteWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkgroupCompleted(this, new DeleteWorkgroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyWorkgroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyWorkgroup(BroadcastDS.WorkgroupsDataTable workgroupDT, string systemKey) {
            object[] results = this.Invoke("CopyWorkgroup", new object[] {
                        workgroupDT,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyWorkgroupAsync(BroadcastDS.WorkgroupsDataTable workgroupDT, string systemKey) {
            this.CopyWorkgroupAsync(workgroupDT, systemKey, null);
        }
        
        /// <remarks/>
        public void CopyWorkgroupAsync(BroadcastDS.WorkgroupsDataTable workgroupDT, string systemKey, object userState) {
            if ((this.CopyWorkgroupOperationCompleted == null)) {
                this.CopyWorkgroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyWorkgroupOperationCompleted);
            }
            this.InvokeAsync("CopyWorkgroup", new object[] {
                        workgroupDT,
                        systemKey}, this.CopyWorkgroupOperationCompleted, userState);
        }
        
        private void OnCopyWorkgroupOperationCompleted(object arg) {
            if ((this.CopyWorkgroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyWorkgroupCompleted(this, new CopyWorkgroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.StationsDataTable GetStations(string systemKey) {
            object[] results = this.Invoke("GetStations", new object[] {
                        systemKey});
            return ((BroadcastDS.StationsDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStationsAsync(string systemKey) {
            this.GetStationsAsync(systemKey, null);
        }
        
        /// <remarks/>
        public void GetStationsAsync(string systemKey, object userState) {
            if ((this.GetStationsOperationCompleted == null)) {
                this.GetStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationsOperationCompleted);
            }
            this.InvokeAsync("GetStations", new object[] {
                        systemKey}, this.GetStationsOperationCompleted, userState);
        }
        
        private void OnGetStationsOperationCompleted(object arg) {
            if ((this.GetStationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationsCompleted(this, new GetStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStationsInItemDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStationsInItemDict(System.Guid stationID, string systemKey) {
            object[] results = this.Invoke("IsExistStationsInItemDict", new object[] {
                        stationID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStationsInItemDictAsync(System.Guid stationID, string systemKey) {
            this.IsExistStationsInItemDictAsync(stationID, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistStationsInItemDictAsync(System.Guid stationID, string systemKey, object userState) {
            if ((this.IsExistStationsInItemDictOperationCompleted == null)) {
                this.IsExistStationsInItemDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStationsInItemDictOperationCompleted);
            }
            this.InvokeAsync("IsExistStationsInItemDict", new object[] {
                        stationID,
                        systemKey}, this.IsExistStationsInItemDictOperationCompleted, userState);
        }
        
        private void OnIsExistStationsInItemDictOperationCompleted(object arg) {
            if ((this.IsExistStationsInItemDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStationsInItemDictCompleted(this, new IsExistStationsInItemDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStationsInWorkgroup2Stations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStationsInWorkgroup2Stations(System.Guid stationID, string systemKey) {
            object[] results = this.Invoke("IsExistStationsInWorkgroup2Stations", new object[] {
                        stationID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStationsInWorkgroup2StationsAsync(System.Guid stationID, string systemKey) {
            this.IsExistStationsInWorkgroup2StationsAsync(stationID, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistStationsInWorkgroup2StationsAsync(System.Guid stationID, string systemKey, object userState) {
            if ((this.IsExistStationsInWorkgroup2StationsOperationCompleted == null)) {
                this.IsExistStationsInWorkgroup2StationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStationsInWorkgroup2StationsOperationCompleted);
            }
            this.InvokeAsync("IsExistStationsInWorkgroup2Stations", new object[] {
                        stationID,
                        systemKey}, this.IsExistStationsInWorkgroup2StationsOperationCompleted, userState);
        }
        
        private void OnIsExistStationsInWorkgroup2StationsOperationCompleted(object arg) {
            if ((this.IsExistStationsInWorkgroup2StationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStationsInWorkgroup2StationsCompleted(this, new IsExistStationsInWorkgroup2StationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStationsStationName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStationsStationName(string stationName, string systemKey) {
            object[] results = this.Invoke("IsExistStationsStationName", new object[] {
                        stationName,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStationsStationNameAsync(string stationName, string systemKey) {
            this.IsExistStationsStationNameAsync(stationName, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistStationsStationNameAsync(string stationName, string systemKey, object userState) {
            if ((this.IsExistStationsStationNameOperationCompleted == null)) {
                this.IsExistStationsStationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStationsStationNameOperationCompleted);
            }
            this.InvokeAsync("IsExistStationsStationName", new object[] {
                        stationName,
                        systemKey}, this.IsExistStationsStationNameOperationCompleted, userState);
        }
        
        private void OnIsExistStationsStationNameOperationCompleted(object arg) {
            if ((this.IsExistStationsStationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStationsStationNameCompleted(this, new IsExistStationsStationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStationsStationNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStationsStationNumber(int stationNumber, string systemKey) {
            object[] results = this.Invoke("IsExistStationsStationNumber", new object[] {
                        stationNumber,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStationsStationNumberAsync(int stationNumber, string systemKey) {
            this.IsExistStationsStationNumberAsync(stationNumber, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistStationsStationNumberAsync(int stationNumber, string systemKey, object userState) {
            if ((this.IsExistStationsStationNumberOperationCompleted == null)) {
                this.IsExistStationsStationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStationsStationNumberOperationCompleted);
            }
            this.InvokeAsync("IsExistStationsStationNumber", new object[] {
                        stationNumber,
                        systemKey}, this.IsExistStationsStationNumberOperationCompleted, userState);
        }
        
        private void OnIsExistStationsStationNumberOperationCompleted(object arg) {
            if ((this.IsExistStationsStationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStationsStationNumberCompleted(this, new IsExistStationsStationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStation(System.Guid stationID, string stationName, int stationNumber, bool isBatchBroadcast, byte hasCategory, byte uniqueAdCategory, byte lockedClockInTemplate, string systemKey, System.Guid systemID) {
            object[] results = this.Invoke("CreateStation", new object[] {
                        stationID,
                        stationName,
                        stationNumber,
                        isBatchBroadcast,
                        hasCategory,
                        uniqueAdCategory,
                        lockedClockInTemplate,
                        systemKey,
                        systemID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStationAsync(System.Guid stationID, string stationName, int stationNumber, bool isBatchBroadcast, byte hasCategory, byte uniqueAdCategory, byte lockedClockInTemplate, string systemKey, System.Guid systemID) {
            this.CreateStationAsync(stationID, stationName, stationNumber, isBatchBroadcast, hasCategory, uniqueAdCategory, lockedClockInTemplate, systemKey, systemID, null);
        }
        
        /// <remarks/>
        public void CreateStationAsync(System.Guid stationID, string stationName, int stationNumber, bool isBatchBroadcast, byte hasCategory, byte uniqueAdCategory, byte lockedClockInTemplate, string systemKey, System.Guid systemID, object userState) {
            if ((this.CreateStationOperationCompleted == null)) {
                this.CreateStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStationOperationCompleted);
            }
            this.InvokeAsync("CreateStation", new object[] {
                        stationID,
                        stationName,
                        stationNumber,
                        isBatchBroadcast,
                        hasCategory,
                        uniqueAdCategory,
                        lockedClockInTemplate,
                        systemKey,
                        systemID}, this.CreateStationOperationCompleted, userState);
        }
        
        private void OnCreateStationOperationCompleted(object arg) {
            if ((this.CreateStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStationCompleted(this, new CreateStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStation(System.Guid stationID, string stationName, int stationNumber, bool isBatchBroadcast, byte hasCategory, byte uniqueAdCategory, byte lockedClockInTemplate, string systemKey) {
            object[] results = this.Invoke("UpdateStation", new object[] {
                        stationID,
                        stationName,
                        stationNumber,
                        isBatchBroadcast,
                        hasCategory,
                        uniqueAdCategory,
                        lockedClockInTemplate,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStationAsync(System.Guid stationID, string stationName, int stationNumber, bool isBatchBroadcast, byte hasCategory, byte uniqueAdCategory, byte lockedClockInTemplate, string systemKey) {
            this.UpdateStationAsync(stationID, stationName, stationNumber, isBatchBroadcast, hasCategory, uniqueAdCategory, lockedClockInTemplate, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateStationAsync(System.Guid stationID, string stationName, int stationNumber, bool isBatchBroadcast, byte hasCategory, byte uniqueAdCategory, byte lockedClockInTemplate, string systemKey, object userState) {
            if ((this.UpdateStationOperationCompleted == null)) {
                this.UpdateStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStationOperationCompleted);
            }
            this.InvokeAsync("UpdateStation", new object[] {
                        stationID,
                        stationName,
                        stationNumber,
                        isBatchBroadcast,
                        hasCategory,
                        uniqueAdCategory,
                        lockedClockInTemplate,
                        systemKey}, this.UpdateStationOperationCompleted, userState);
        }
        
        private void OnUpdateStationOperationCompleted(object arg) {
            if ((this.UpdateStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStationCompleted(this, new UpdateStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStation(System.Guid stationID, string systemKey) {
            object[] results = this.Invoke("DeleteStation", new object[] {
                        stationID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStationAsync(System.Guid stationID, string systemKey) {
            this.DeleteStationAsync(stationID, systemKey, null);
        }
        
        /// <remarks/>
        public void DeleteStationAsync(System.Guid stationID, string systemKey, object userState) {
            if ((this.DeleteStationOperationCompleted == null)) {
                this.DeleteStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStationOperationCompleted);
            }
            this.InvokeAsync("DeleteStation", new object[] {
                        stationID,
                        systemKey}, this.DeleteStationOperationCompleted, userState);
        }
        
        private void OnDeleteStationOperationCompleted(object arg) {
            if ((this.DeleteStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStationCompleted(this, new DeleteStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStationsIsBatchBroadcast", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStationsIsBatchBroadcast(System.Guid stationID, bool isBatchBroadcast, string systemKey) {
            object[] results = this.Invoke("UpdateStationsIsBatchBroadcast", new object[] {
                        stationID,
                        isBatchBroadcast,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStationsIsBatchBroadcastAsync(System.Guid stationID, bool isBatchBroadcast, string systemKey) {
            this.UpdateStationsIsBatchBroadcastAsync(stationID, isBatchBroadcast, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateStationsIsBatchBroadcastAsync(System.Guid stationID, bool isBatchBroadcast, string systemKey, object userState) {
            if ((this.UpdateStationsIsBatchBroadcastOperationCompleted == null)) {
                this.UpdateStationsIsBatchBroadcastOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStationsIsBatchBroadcastOperationCompleted);
            }
            this.InvokeAsync("UpdateStationsIsBatchBroadcast", new object[] {
                        stationID,
                        isBatchBroadcast,
                        systemKey}, this.UpdateStationsIsBatchBroadcastOperationCompleted, userState);
        }
        
        private void OnUpdateStationsIsBatchBroadcastOperationCompleted(object arg) {
            if ((this.UpdateStationsIsBatchBroadcastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStationsIsBatchBroadcastCompleted(this, new UpdateStationsIsBatchBroadcastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyStation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyStation(BroadcastDS.StationsDataTable stationDT, string systemKey) {
            object[] results = this.Invoke("CopyStation", new object[] {
                        stationDT,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyStationAsync(BroadcastDS.StationsDataTable stationDT, string systemKey) {
            this.CopyStationAsync(stationDT, systemKey, null);
        }
        
        /// <remarks/>
        public void CopyStationAsync(BroadcastDS.StationsDataTable stationDT, string systemKey, object userState) {
            if ((this.CopyStationOperationCompleted == null)) {
                this.CopyStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyStationOperationCompleted);
            }
            this.InvokeAsync("CopyStation", new object[] {
                        stationDT,
                        systemKey}, this.CopyStationOperationCompleted, userState);
        }
        
        private void OnCopyStationOperationCompleted(object arg) {
            if ((this.CopyStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyStationCompleted(this, new CopyStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAir5DB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateAir5DB(string sqlCreateTable, string sqlInitData, System.Guid systemID, string systemKey) {
            object[] results = this.Invoke("CreateAir5DB", new object[] {
                        sqlCreateTable,
                        sqlInitData,
                        systemID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAir5DBAsync(string sqlCreateTable, string sqlInitData, System.Guid systemID, string systemKey) {
            this.CreateAir5DBAsync(sqlCreateTable, sqlInitData, systemID, systemKey, null);
        }
        
        /// <remarks/>
        public void CreateAir5DBAsync(string sqlCreateTable, string sqlInitData, System.Guid systemID, string systemKey, object userState) {
            if ((this.CreateAir5DBOperationCompleted == null)) {
                this.CreateAir5DBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAir5DBOperationCompleted);
            }
            this.InvokeAsync("CreateAir5DB", new object[] {
                        sqlCreateTable,
                        sqlInitData,
                        systemID,
                        systemKey}, this.CreateAir5DBOperationCompleted, userState);
        }
        
        private void OnCreateAir5DBOperationCompleted(object arg) {
            if ((this.CreateAir5DBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAir5DBCompleted(this, new CreateAir5DBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DropAir5DB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DropAir5DB(string databaseName) {
            object[] results = this.Invoke("DropAir5DB", new object[] {
                        databaseName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DropAir5DBAsync(string databaseName) {
            this.DropAir5DBAsync(databaseName, null);
        }
        
        /// <remarks/>
        public void DropAir5DBAsync(string databaseName, object userState) {
            if ((this.DropAir5DBOperationCompleted == null)) {
                this.DropAir5DBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDropAir5DBOperationCompleted);
            }
            this.InvokeAsync("DropAir5DB", new object[] {
                        databaseName}, this.DropAir5DBOperationCompleted, userState);
        }
        
        private void OnDropAir5DBOperationCompleted(object arg) {
            if ((this.DropAir5DBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DropAir5DBCompleted(this, new DropAir5DBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkgroup2Stations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.Workgroup2StationsDataTable GetWorkgroup2Stations(string systemKey) {
            object[] results = this.Invoke("GetWorkgroup2Stations", new object[] {
                        systemKey});
            return ((BroadcastDS.Workgroup2StationsDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkgroup2StationsAsync(string systemKey) {
            this.GetWorkgroup2StationsAsync(systemKey, null);
        }
        
        /// <remarks/>
        public void GetWorkgroup2StationsAsync(string systemKey, object userState) {
            if ((this.GetWorkgroup2StationsOperationCompleted == null)) {
                this.GetWorkgroup2StationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkgroup2StationsOperationCompleted);
            }
            this.InvokeAsync("GetWorkgroup2Stations", new object[] {
                        systemKey}, this.GetWorkgroup2StationsOperationCompleted, userState);
        }
        
        private void OnGetWorkgroup2StationsOperationCompleted(object arg) {
            if ((this.GetWorkgroup2StationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkgroup2StationsCompleted(this, new GetWorkgroup2StationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkgroup2StationModelByStationID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Workgroup2StationModel[] GetWorkgroup2StationModelByStationID(System.Guid stationID, string systemKey) {
            object[] results = this.Invoke("GetWorkgroup2StationModelByStationID", new object[] {
                        stationID,
                        systemKey});
            return ((Workgroup2StationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkgroup2StationModelByStationIDAsync(System.Guid stationID, string systemKey) {
            this.GetWorkgroup2StationModelByStationIDAsync(stationID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetWorkgroup2StationModelByStationIDAsync(System.Guid stationID, string systemKey, object userState) {
            if ((this.GetWorkgroup2StationModelByStationIDOperationCompleted == null)) {
                this.GetWorkgroup2StationModelByStationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkgroup2StationModelByStationIDOperationCompleted);
            }
            this.InvokeAsync("GetWorkgroup2StationModelByStationID", new object[] {
                        stationID,
                        systemKey}, this.GetWorkgroup2StationModelByStationIDOperationCompleted, userState);
        }
        
        private void OnGetWorkgroup2StationModelByStationIDOperationCompleted(object arg) {
            if ((this.GetWorkgroup2StationModelByStationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkgroup2StationModelByStationIDCompleted(this, new GetWorkgroup2StationModelByStationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistWorkgroup2Stations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistWorkgroup2Stations(System.Guid workgroupID, System.Guid stationID, string systemKey) {
            object[] results = this.Invoke("IsExistWorkgroup2Stations", new object[] {
                        workgroupID,
                        stationID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistWorkgroup2StationsAsync(System.Guid workgroupID, System.Guid stationID, string systemKey) {
            this.IsExistWorkgroup2StationsAsync(workgroupID, stationID, systemKey, null);
        }
        
        /// <remarks/>
        public void IsExistWorkgroup2StationsAsync(System.Guid workgroupID, System.Guid stationID, string systemKey, object userState) {
            if ((this.IsExistWorkgroup2StationsOperationCompleted == null)) {
                this.IsExistWorkgroup2StationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistWorkgroup2StationsOperationCompleted);
            }
            this.InvokeAsync("IsExistWorkgroup2Stations", new object[] {
                        workgroupID,
                        stationID,
                        systemKey}, this.IsExistWorkgroup2StationsOperationCompleted, userState);
        }
        
        private void OnIsExistWorkgroup2StationsOperationCompleted(object arg) {
            if ((this.IsExistWorkgroup2StationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistWorkgroup2StationsCompleted(this, new IsExistWorkgroup2StationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateWorkgroup2Stations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateWorkgroup2Stations(System.Guid workgroupID, System.Guid stationID, byte inStation, string systemKey) {
            object[] results = this.Invoke("CreateWorkgroup2Stations", new object[] {
                        workgroupID,
                        stationID,
                        inStation,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWorkgroup2StationsAsync(System.Guid workgroupID, System.Guid stationID, byte inStation, string systemKey) {
            this.CreateWorkgroup2StationsAsync(workgroupID, stationID, inStation, systemKey, null);
        }
        
        /// <remarks/>
        public void CreateWorkgroup2StationsAsync(System.Guid workgroupID, System.Guid stationID, byte inStation, string systemKey, object userState) {
            if ((this.CreateWorkgroup2StationsOperationCompleted == null)) {
                this.CreateWorkgroup2StationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWorkgroup2StationsOperationCompleted);
            }
            this.InvokeAsync("CreateWorkgroup2Stations", new object[] {
                        workgroupID,
                        stationID,
                        inStation,
                        systemKey}, this.CreateWorkgroup2StationsOperationCompleted, userState);
        }
        
        private void OnCreateWorkgroup2StationsOperationCompleted(object arg) {
            if ((this.CreateWorkgroup2StationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWorkgroup2StationsCompleted(this, new CreateWorkgroup2StationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteWorkgroup2Stations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteWorkgroup2Stations(System.Guid workgroupID, System.Guid stationID, string systemKey) {
            object[] results = this.Invoke("DeleteWorkgroup2Stations", new object[] {
                        workgroupID,
                        stationID,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkgroup2StationsAsync(System.Guid workgroupID, System.Guid stationID, string systemKey) {
            this.DeleteWorkgroup2StationsAsync(workgroupID, stationID, systemKey, null);
        }
        
        /// <remarks/>
        public void DeleteWorkgroup2StationsAsync(System.Guid workgroupID, System.Guid stationID, string systemKey, object userState) {
            if ((this.DeleteWorkgroup2StationsOperationCompleted == null)) {
                this.DeleteWorkgroup2StationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkgroup2StationsOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkgroup2Stations", new object[] {
                        workgroupID,
                        stationID,
                        systemKey}, this.DeleteWorkgroup2StationsOperationCompleted, userState);
        }
        
        private void OnDeleteWorkgroup2StationsOperationCompleted(object arg) {
            if ((this.DeleteWorkgroup2StationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkgroup2StationsCompleted(this, new DeleteWorkgroup2StationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkgroup2StationsInStation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWorkgroup2StationsInStation(System.Guid workgroupID, System.Guid stationID, byte inStation, string systemKey) {
            object[] results = this.Invoke("UpdateWorkgroup2StationsInStation", new object[] {
                        workgroupID,
                        stationID,
                        inStation,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkgroup2StationsInStationAsync(System.Guid workgroupID, System.Guid stationID, byte inStation, string systemKey) {
            this.UpdateWorkgroup2StationsInStationAsync(workgroupID, stationID, inStation, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateWorkgroup2StationsInStationAsync(System.Guid workgroupID, System.Guid stationID, byte inStation, string systemKey, object userState) {
            if ((this.UpdateWorkgroup2StationsInStationOperationCompleted == null)) {
                this.UpdateWorkgroup2StationsInStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkgroup2StationsInStationOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkgroup2StationsInStation", new object[] {
                        workgroupID,
                        stationID,
                        inStation,
                        systemKey}, this.UpdateWorkgroup2StationsInStationOperationCompleted, userState);
        }
        
        private void OnUpdateWorkgroup2StationsInStationOperationCompleted(object arg) {
            if ((this.UpdateWorkgroup2StationsInStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkgroup2StationsInStationCompleted(this, new UpdateWorkgroup2StationsInStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyWorkgroup2Stations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyWorkgroup2Stations(BroadcastDS.Workgroup2StationsDataTable w2sDT, string systemKey) {
            object[] results = this.Invoke("CopyWorkgroup2Stations", new object[] {
                        w2sDT,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyWorkgroup2StationsAsync(BroadcastDS.Workgroup2StationsDataTable w2sDT, string systemKey) {
            this.CopyWorkgroup2StationsAsync(w2sDT, systemKey, null);
        }
        
        /// <remarks/>
        public void CopyWorkgroup2StationsAsync(BroadcastDS.Workgroup2StationsDataTable w2sDT, string systemKey, object userState) {
            if ((this.CopyWorkgroup2StationsOperationCompleted == null)) {
                this.CopyWorkgroup2StationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyWorkgroup2StationsOperationCompleted);
            }
            this.InvokeAsync("CopyWorkgroup2Stations", new object[] {
                        w2sDT,
                        systemKey}, this.CopyWorkgroup2StationsOperationCompleted, userState);
        }
        
        private void OnCopyWorkgroup2StationsOperationCompleted(object arg) {
            if ((this.CopyWorkgroup2StationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyWorkgroup2StationsCompleted(this, new CopyWorkgroup2StationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContributor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateContributor(
                    System.Guid ID, 
                    System.Guid MasterClassID, 
                    System.Guid ParentID, 
                    string Name, 
                    bool Gender, 
                    System.DateTime BirthDate, 
                    string BirthPlace, 
                    string ForeignName, 
                    string FastCode, 
                    string AlternativeName, 
                    System.Guid NationalityID, 
                    System.Guid AreaID, 
                    System.Guid LanguageID, 
                    System.Guid EraID, 
                    System.Guid CombinationID, 
                    System.Guid EthnicID, 
                    System.Guid ProfessionID, 
                    int Popularity, 
                    int CurrentState, 
                    string Remark, 
                    int ValueNumber, 
                    bool IsDefault, 
                    System.Guid modifyUserID, 
                    string modifyUserName) {
            object[] results = this.Invoke("UpdateContributor", new object[] {
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        Gender,
                        BirthDate,
                        BirthPlace,
                        ForeignName,
                        FastCode,
                        AlternativeName,
                        NationalityID,
                        AreaID,
                        LanguageID,
                        EraID,
                        CombinationID,
                        EthnicID,
                        ProfessionID,
                        Popularity,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        modifyUserID,
                        modifyUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContributorAsync(
                    System.Guid ID, 
                    System.Guid MasterClassID, 
                    System.Guid ParentID, 
                    string Name, 
                    bool Gender, 
                    System.DateTime BirthDate, 
                    string BirthPlace, 
                    string ForeignName, 
                    string FastCode, 
                    string AlternativeName, 
                    System.Guid NationalityID, 
                    System.Guid AreaID, 
                    System.Guid LanguageID, 
                    System.Guid EraID, 
                    System.Guid CombinationID, 
                    System.Guid EthnicID, 
                    System.Guid ProfessionID, 
                    int Popularity, 
                    int CurrentState, 
                    string Remark, 
                    int ValueNumber, 
                    bool IsDefault, 
                    System.Guid modifyUserID, 
                    string modifyUserName) {
            this.UpdateContributorAsync(ID, MasterClassID, ParentID, Name, Gender, BirthDate, BirthPlace, ForeignName, FastCode, AlternativeName, NationalityID, AreaID, LanguageID, EraID, CombinationID, EthnicID, ProfessionID, Popularity, CurrentState, Remark, ValueNumber, IsDefault, modifyUserID, modifyUserName, null);
        }
        
        /// <remarks/>
        public void UpdateContributorAsync(
                    System.Guid ID, 
                    System.Guid MasterClassID, 
                    System.Guid ParentID, 
                    string Name, 
                    bool Gender, 
                    System.DateTime BirthDate, 
                    string BirthPlace, 
                    string ForeignName, 
                    string FastCode, 
                    string AlternativeName, 
                    System.Guid NationalityID, 
                    System.Guid AreaID, 
                    System.Guid LanguageID, 
                    System.Guid EraID, 
                    System.Guid CombinationID, 
                    System.Guid EthnicID, 
                    System.Guid ProfessionID, 
                    int Popularity, 
                    int CurrentState, 
                    string Remark, 
                    int ValueNumber, 
                    bool IsDefault, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    object userState) {
            if ((this.UpdateContributorOperationCompleted == null)) {
                this.UpdateContributorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContributorOperationCompleted);
            }
            this.InvokeAsync("UpdateContributor", new object[] {
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        Gender,
                        BirthDate,
                        BirthPlace,
                        ForeignName,
                        FastCode,
                        AlternativeName,
                        NationalityID,
                        AreaID,
                        LanguageID,
                        EraID,
                        CombinationID,
                        EthnicID,
                        ProfessionID,
                        Popularity,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        modifyUserID,
                        modifyUserName}, this.UpdateContributorOperationCompleted, userState);
        }
        
        private void OnUpdateContributorOperationCompleted(object arg) {
            if ((this.UpdateContributorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContributorCompleted(this, new UpdateContributorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteContributor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteContributor(string IDs) {
            object[] results = this.Invoke("DeleteContributor", new object[] {
                        IDs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContributorAsync(string IDs) {
            this.DeleteContributorAsync(IDs, null);
        }
        
        /// <remarks/>
        public void DeleteContributorAsync(string IDs, object userState) {
            if ((this.DeleteContributorOperationCompleted == null)) {
                this.DeleteContributorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContributorOperationCompleted);
            }
            this.InvokeAsync("DeleteContributor", new object[] {
                        IDs}, this.DeleteContributorOperationCompleted, userState);
        }
        
        private void OnDeleteContributorOperationCompleted(object arg) {
            if ((this.DeleteContributorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContributorCompleted(this, new DeleteContributorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.MasterClassDataTable GetMasterClass() {
            object[] results = this.Invoke("GetMasterClass", new object[0]);
            return ((MediaAssetDS.MasterClassDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterClassAsync() {
            this.GetMasterClassAsync(null);
        }
        
        /// <remarks/>
        public void GetMasterClassAsync(object userState) {
            if ((this.GetMasterClassOperationCompleted == null)) {
                this.GetMasterClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterClassOperationCompleted);
            }
            this.InvokeAsync("GetMasterClass", new object[0], this.GetMasterClassOperationCompleted, userState);
        }
        
        private void OnGetMasterClassOperationCompleted(object arg) {
            if ((this.GetMasterClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterClassCompleted(this, new GetMasterClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterClassByFormat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.MasterClassDataTable GetMasterClassByFormat(System.Guid formatID) {
            object[] results = this.Invoke("GetMasterClassByFormat", new object[] {
                        formatID});
            return ((MediaAssetDS.MasterClassDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterClassByFormatAsync(System.Guid formatID) {
            this.GetMasterClassByFormatAsync(formatID, null);
        }
        
        /// <remarks/>
        public void GetMasterClassByFormatAsync(System.Guid formatID, object userState) {
            if ((this.GetMasterClassByFormatOperationCompleted == null)) {
                this.GetMasterClassByFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterClassByFormatOperationCompleted);
            }
            this.InvokeAsync("GetMasterClassByFormat", new object[] {
                        formatID}, this.GetMasterClassByFormatOperationCompleted, userState);
        }
        
        private void OnGetMasterClassByFormatOperationCompleted(object arg) {
            if ((this.GetMasterClassByFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterClassByFormatCompleted(this, new GetMasterClassByFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterClassByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.MasterClassDataTable GetMasterClassByCondition(System.Guid mediaAssetFormatID, string name, int isDefault) {
            object[] results = this.Invoke("GetMasterClassByCondition", new object[] {
                        mediaAssetFormatID,
                        name,
                        isDefault});
            return ((MediaAssetDS.MasterClassDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterClassByConditionAsync(System.Guid mediaAssetFormatID, string name, int isDefault) {
            this.GetMasterClassByConditionAsync(mediaAssetFormatID, name, isDefault, null);
        }
        
        /// <remarks/>
        public void GetMasterClassByConditionAsync(System.Guid mediaAssetFormatID, string name, int isDefault, object userState) {
            if ((this.GetMasterClassByConditionOperationCompleted == null)) {
                this.GetMasterClassByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterClassByConditionOperationCompleted);
            }
            this.InvokeAsync("GetMasterClassByCondition", new object[] {
                        mediaAssetFormatID,
                        name,
                        isDefault}, this.GetMasterClassByConditionOperationCompleted, userState);
        }
        
        private void OnGetMasterClassByConditionOperationCompleted(object arg) {
            if ((this.GetMasterClassByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterClassByConditionCompleted(this, new GetMasterClassByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistMasterClassNameByMAF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistMasterClassNameByMAF(System.Guid mediaAssetFormatID, string masterClassName, System.Guid masterClassID) {
            object[] results = this.Invoke("IsExistMasterClassNameByMAF", new object[] {
                        mediaAssetFormatID,
                        masterClassName,
                        masterClassID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistMasterClassNameByMAFAsync(System.Guid mediaAssetFormatID, string masterClassName, System.Guid masterClassID) {
            this.IsExistMasterClassNameByMAFAsync(mediaAssetFormatID, masterClassName, masterClassID, null);
        }
        
        /// <remarks/>
        public void IsExistMasterClassNameByMAFAsync(System.Guid mediaAssetFormatID, string masterClassName, System.Guid masterClassID, object userState) {
            if ((this.IsExistMasterClassNameByMAFOperationCompleted == null)) {
                this.IsExistMasterClassNameByMAFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistMasterClassNameByMAFOperationCompleted);
            }
            this.InvokeAsync("IsExistMasterClassNameByMAF", new object[] {
                        mediaAssetFormatID,
                        masterClassName,
                        masterClassID}, this.IsExistMasterClassNameByMAFOperationCompleted, userState);
        }
        
        private void OnIsExistMasterClassNameByMAFOperationCompleted(object arg) {
            if ((this.IsExistMasterClassNameByMAFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistMasterClassNameByMAFCompleted(this, new IsExistMasterClassNameByMAFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingMasterClassInMediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingMasterClassInMediaAsset(System.Guid ID) {
            object[] results = this.Invoke("IsUsingMasterClassInMediaAsset", new object[] {
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingMasterClassInMediaAssetAsync(System.Guid ID) {
            this.IsUsingMasterClassInMediaAssetAsync(ID, null);
        }
        
        /// <remarks/>
        public void IsUsingMasterClassInMediaAssetAsync(System.Guid ID, object userState) {
            if ((this.IsUsingMasterClassInMediaAssetOperationCompleted == null)) {
                this.IsUsingMasterClassInMediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingMasterClassInMediaAssetOperationCompleted);
            }
            this.InvokeAsync("IsUsingMasterClassInMediaAsset", new object[] {
                        ID}, this.IsUsingMasterClassInMediaAssetOperationCompleted, userState);
        }
        
        private void OnIsUsingMasterClassInMediaAssetOperationCompleted(object arg) {
            if ((this.IsUsingMasterClassInMediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingMasterClassInMediaAssetCompleted(this, new IsUsingMasterClassInMediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsParentMasterClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsParentMasterClass(System.Guid ID) {
            object[] results = this.Invoke("IsParentMasterClass", new object[] {
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsParentMasterClassAsync(System.Guid ID) {
            this.IsParentMasterClassAsync(ID, null);
        }
        
        /// <remarks/>
        public void IsParentMasterClassAsync(System.Guid ID, object userState) {
            if ((this.IsParentMasterClassOperationCompleted == null)) {
                this.IsParentMasterClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsParentMasterClassOperationCompleted);
            }
            this.InvokeAsync("IsParentMasterClass", new object[] {
                        ID}, this.IsParentMasterClassOperationCompleted, userState);
        }
        
        private void OnIsParentMasterClassOperationCompleted(object arg) {
            if ((this.IsParentMasterClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsParentMasterClassCompleted(this, new IsParentMasterClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMasterClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateMasterClass(System.Guid ID, System.Guid MediaAssetFormatID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, string MasterClassKey, string Remark, bool IsDefault, System.Guid createUserID, string createUserName) {
            object[] results = this.Invoke("CreateMasterClass", new object[] {
                        ID,
                        MediaAssetFormatID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        MasterClassKey,
                        Remark,
                        IsDefault,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMasterClassAsync(System.Guid ID, System.Guid MediaAssetFormatID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, string MasterClassKey, string Remark, bool IsDefault, System.Guid createUserID, string createUserName) {
            this.CreateMasterClassAsync(ID, MediaAssetFormatID, ParentID, Name, FastCode, AlternativeName, MasterClassKey, Remark, IsDefault, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateMasterClassAsync(System.Guid ID, System.Guid MediaAssetFormatID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, string MasterClassKey, string Remark, bool IsDefault, System.Guid createUserID, string createUserName, object userState) {
            if ((this.CreateMasterClassOperationCompleted == null)) {
                this.CreateMasterClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMasterClassOperationCompleted);
            }
            this.InvokeAsync("CreateMasterClass", new object[] {
                        ID,
                        MediaAssetFormatID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        MasterClassKey,
                        Remark,
                        IsDefault,
                        createUserID,
                        createUserName}, this.CreateMasterClassOperationCompleted, userState);
        }
        
        private void OnCreateMasterClassOperationCompleted(object arg) {
            if ((this.CreateMasterClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMasterClassCompleted(this, new CreateMasterClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMasterClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMasterClass(System.Guid ID, System.Guid MediaAssetFormatID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, string MasterClassKey, string Remark, bool IsDefault, System.Guid modifyUserID, string modifyUserName) {
            object[] results = this.Invoke("UpdateMasterClass", new object[] {
                        ID,
                        MediaAssetFormatID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        MasterClassKey,
                        Remark,
                        IsDefault,
                        modifyUserID,
                        modifyUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMasterClassAsync(System.Guid ID, System.Guid MediaAssetFormatID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, string MasterClassKey, string Remark, bool IsDefault, System.Guid modifyUserID, string modifyUserName) {
            this.UpdateMasterClassAsync(ID, MediaAssetFormatID, ParentID, Name, FastCode, AlternativeName, MasterClassKey, Remark, IsDefault, modifyUserID, modifyUserName, null);
        }
        
        /// <remarks/>
        public void UpdateMasterClassAsync(System.Guid ID, System.Guid MediaAssetFormatID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, string MasterClassKey, string Remark, bool IsDefault, System.Guid modifyUserID, string modifyUserName, object userState) {
            if ((this.UpdateMasterClassOperationCompleted == null)) {
                this.UpdateMasterClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMasterClassOperationCompleted);
            }
            this.InvokeAsync("UpdateMasterClass", new object[] {
                        ID,
                        MediaAssetFormatID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        MasterClassKey,
                        Remark,
                        IsDefault,
                        modifyUserID,
                        modifyUserName}, this.UpdateMasterClassOperationCompleted, userState);
        }
        
        private void OnUpdateMasterClassOperationCompleted(object arg) {
            if ((this.UpdateMasterClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMasterClassCompleted(this, new UpdateMasterClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMasterClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMasterClass(string IDs) {
            object[] results = this.Invoke("DeleteMasterClass", new object[] {
                        IDs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMasterClassAsync(string IDs) {
            this.DeleteMasterClassAsync(IDs, null);
        }
        
        /// <remarks/>
        public void DeleteMasterClassAsync(string IDs, object userState) {
            if ((this.DeleteMasterClassOperationCompleted == null)) {
                this.DeleteMasterClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMasterClassOperationCompleted);
            }
            this.InvokeAsync("DeleteMasterClass", new object[] {
                        IDs}, this.DeleteMasterClassOperationCompleted, userState);
        }
        
        private void OnDeleteMasterClassOperationCompleted(object arg) {
            if ((this.DeleteMasterClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMasterClassCompleted(this, new DeleteMasterClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMediaAssetFormat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.MediaAssetFormatDataTable GetMediaAssetFormat() {
            object[] results = this.Invoke("GetMediaAssetFormat", new object[0]);
            return ((MediaAssetDS.MediaAssetFormatDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaAssetFormatAsync() {
            this.GetMediaAssetFormatAsync(null);
        }
        
        /// <remarks/>
        public void GetMediaAssetFormatAsync(object userState) {
            if ((this.GetMediaAssetFormatOperationCompleted == null)) {
                this.GetMediaAssetFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaAssetFormatOperationCompleted);
            }
            this.InvokeAsync("GetMediaAssetFormat", new object[0], this.GetMediaAssetFormatOperationCompleted, userState);
        }
        
        private void OnGetMediaAssetFormatOperationCompleted(object arg) {
            if ((this.GetMediaAssetFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaAssetFormatCompleted(this, new GetMediaAssetFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMediaAssetFormatByFormat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.MediaAssetFormatDataTable GetMediaAssetFormatByFormat(string key) {
            object[] results = this.Invoke("GetMediaAssetFormatByFormat", new object[] {
                        key});
            return ((MediaAssetDS.MediaAssetFormatDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaAssetFormatByFormatAsync(string key) {
            this.GetMediaAssetFormatByFormatAsync(key, null);
        }
        
        /// <remarks/>
        public void GetMediaAssetFormatByFormatAsync(string key, object userState) {
            if ((this.GetMediaAssetFormatByFormatOperationCompleted == null)) {
                this.GetMediaAssetFormatByFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaAssetFormatByFormatOperationCompleted);
            }
            this.InvokeAsync("GetMediaAssetFormatByFormat", new object[] {
                        key}, this.GetMediaAssetFormatByFormatOperationCompleted, userState);
        }
        
        private void OnGetMediaAssetFormatByFormatOperationCompleted(object arg) {
            if ((this.GetMediaAssetFormatByFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaAssetFormatByFormatCompleted(this, new GetMediaAssetFormatByFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistWorkflowNameByType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistWorkflowNameByType(int type, string name, System.Guid ID) {
            object[] results = this.Invoke("IsExistWorkflowNameByType", new object[] {
                        type,
                        name,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistWorkflowNameByTypeAsync(int type, string name, System.Guid ID) {
            this.IsExistWorkflowNameByTypeAsync(type, name, ID, null);
        }
        
        /// <remarks/>
        public void IsExistWorkflowNameByTypeAsync(int type, string name, System.Guid ID, object userState) {
            if ((this.IsExistWorkflowNameByTypeOperationCompleted == null)) {
                this.IsExistWorkflowNameByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistWorkflowNameByTypeOperationCompleted);
            }
            this.InvokeAsync("IsExistWorkflowNameByType", new object[] {
                        type,
                        name,
                        ID}, this.IsExistWorkflowNameByTypeOperationCompleted, userState);
        }
        
        private void OnIsExistWorkflowNameByTypeOperationCompleted(object arg) {
            if ((this.IsExistWorkflowNameByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistWorkflowNameByTypeCompleted(this, new IsExistWorkflowNameByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingWorkflowInMediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingWorkflowInMediaAsset(System.Guid workflowID) {
            object[] results = this.Invoke("IsUsingWorkflowInMediaAsset", new object[] {
                        workflowID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingWorkflowInMediaAssetAsync(System.Guid workflowID) {
            this.IsUsingWorkflowInMediaAssetAsync(workflowID, null);
        }
        
        /// <remarks/>
        public void IsUsingWorkflowInMediaAssetAsync(System.Guid workflowID, object userState) {
            if ((this.IsUsingWorkflowInMediaAssetOperationCompleted == null)) {
                this.IsUsingWorkflowInMediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingWorkflowInMediaAssetOperationCompleted);
            }
            this.InvokeAsync("IsUsingWorkflowInMediaAsset", new object[] {
                        workflowID}, this.IsUsingWorkflowInMediaAssetOperationCompleted, userState);
        }
        
        private void OnIsUsingWorkflowInMediaAssetOperationCompleted(object arg) {
            if ((this.IsUsingWorkflowInMediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingWorkflowInMediaAssetCompleted(this, new IsUsingWorkflowInMediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkflowBySystemIDType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.IWFM_WorkflowDataTable GetWorkflowBySystemIDType(System.Guid systemID, int type, int isEnabled) {
            object[] results = this.Invoke("GetWorkflowBySystemIDType", new object[] {
                        systemID,
                        type,
                        isEnabled});
            return ((MediaAssetDS.IWFM_WorkflowDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowBySystemIDTypeAsync(System.Guid systemID, int type, int isEnabled) {
            this.GetWorkflowBySystemIDTypeAsync(systemID, type, isEnabled, null);
        }
        
        /// <remarks/>
        public void GetWorkflowBySystemIDTypeAsync(System.Guid systemID, int type, int isEnabled, object userState) {
            if ((this.GetWorkflowBySystemIDTypeOperationCompleted == null)) {
                this.GetWorkflowBySystemIDTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowBySystemIDTypeOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowBySystemIDType", new object[] {
                        systemID,
                        type,
                        isEnabled}, this.GetWorkflowBySystemIDTypeOperationCompleted, userState);
        }
        
        private void OnGetWorkflowBySystemIDTypeOperationCompleted(object arg) {
            if ((this.GetWorkflowBySystemIDTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowBySystemIDTypeCompleted(this, new GetWorkflowBySystemIDTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIWFM_WorkflowsByObjectType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.IWFM_WorkflowDataTable GetIWFM_WorkflowsByObjectType(System.Guid systemID, int objectType, int workflowType) {
            object[] results = this.Invoke("GetIWFM_WorkflowsByObjectType", new object[] {
                        systemID,
                        objectType,
                        workflowType});
            return ((MediaAssetDS.IWFM_WorkflowDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetIWFM_WorkflowsByObjectTypeAsync(System.Guid systemID, int objectType, int workflowType) {
            this.GetIWFM_WorkflowsByObjectTypeAsync(systemID, objectType, workflowType, null);
        }
        
        /// <remarks/>
        public void GetIWFM_WorkflowsByObjectTypeAsync(System.Guid systemID, int objectType, int workflowType, object userState) {
            if ((this.GetIWFM_WorkflowsByObjectTypeOperationCompleted == null)) {
                this.GetIWFM_WorkflowsByObjectTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIWFM_WorkflowsByObjectTypeOperationCompleted);
            }
            this.InvokeAsync("GetIWFM_WorkflowsByObjectType", new object[] {
                        systemID,
                        objectType,
                        workflowType}, this.GetIWFM_WorkflowsByObjectTypeOperationCompleted, userState);
        }
        
        private void OnGetIWFM_WorkflowsByObjectTypeOperationCompleted(object arg) {
            if ((this.GetIWFM_WorkflowsByObjectTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIWFM_WorkflowsByObjectTypeCompleted(this, new GetIWFM_WorkflowsByObjectTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateWorkflow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateWorkflow(System.Guid ID, string name, int type, bool signerOnlyOne, string handler, bool isEnable, string remark, System.Guid systemID, System.Guid createUserID, string createUserName) {
            object[] results = this.Invoke("CreateWorkflow", new object[] {
                        ID,
                        name,
                        type,
                        signerOnlyOne,
                        handler,
                        isEnable,
                        remark,
                        systemID,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWorkflowAsync(System.Guid ID, string name, int type, bool signerOnlyOne, string handler, bool isEnable, string remark, System.Guid systemID, System.Guid createUserID, string createUserName) {
            this.CreateWorkflowAsync(ID, name, type, signerOnlyOne, handler, isEnable, remark, systemID, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateWorkflowAsync(System.Guid ID, string name, int type, bool signerOnlyOne, string handler, bool isEnable, string remark, System.Guid systemID, System.Guid createUserID, string createUserName, object userState) {
            if ((this.CreateWorkflowOperationCompleted == null)) {
                this.CreateWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWorkflowOperationCompleted);
            }
            this.InvokeAsync("CreateWorkflow", new object[] {
                        ID,
                        name,
                        type,
                        signerOnlyOne,
                        handler,
                        isEnable,
                        remark,
                        systemID,
                        createUserID,
                        createUserName}, this.CreateWorkflowOperationCompleted, userState);
        }
        
        private void OnCreateWorkflowOperationCompleted(object arg) {
            if ((this.CreateWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWorkflowCompleted(this, new CreateWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkflow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWorkflow(System.Guid ID, string name, int type, bool signerOnlyOne, string handler, bool isEnable, string remark, System.Guid systemID, System.Guid modifyUserID, string modifyUserName) {
            object[] results = this.Invoke("UpdateWorkflow", new object[] {
                        ID,
                        name,
                        type,
                        signerOnlyOne,
                        handler,
                        isEnable,
                        remark,
                        systemID,
                        modifyUserID,
                        modifyUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkflowAsync(System.Guid ID, string name, int type, bool signerOnlyOne, string handler, bool isEnable, string remark, System.Guid systemID, System.Guid modifyUserID, string modifyUserName) {
            this.UpdateWorkflowAsync(ID, name, type, signerOnlyOne, handler, isEnable, remark, systemID, modifyUserID, modifyUserName, null);
        }
        
        /// <remarks/>
        public void UpdateWorkflowAsync(System.Guid ID, string name, int type, bool signerOnlyOne, string handler, bool isEnable, string remark, System.Guid systemID, System.Guid modifyUserID, string modifyUserName, object userState) {
            if ((this.UpdateWorkflowOperationCompleted == null)) {
                this.UpdateWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkflowOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkflow", new object[] {
                        ID,
                        name,
                        type,
                        signerOnlyOne,
                        handler,
                        isEnable,
                        remark,
                        systemID,
                        modifyUserID,
                        modifyUserName}, this.UpdateWorkflowOperationCompleted, userState);
        }
        
        private void OnUpdateWorkflowOperationCompleted(object arg) {
            if ((this.UpdateWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkflowCompleted(this, new UpdateWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteWorkflow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteWorkflow(System.Guid ID) {
            object[] results = this.Invoke("DeleteWorkflow", new object[] {
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkflowAsync(System.Guid ID) {
            this.DeleteWorkflowAsync(ID, null);
        }
        
        /// <remarks/>
        public void DeleteWorkflowAsync(System.Guid ID, object userState) {
            if ((this.DeleteWorkflowOperationCompleted == null)) {
                this.DeleteWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkflowOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkflow", new object[] {
                        ID}, this.DeleteWorkflowOperationCompleted, userState);
        }
        
        private void OnDeleteWorkflowOperationCompleted(object arg) {
            if ((this.DeleteWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkflowCompleted(this, new DeleteWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistNodeNameByWorkflow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistNodeNameByWorkflow(System.Guid systemID, string name, System.Guid ID) {
            object[] results = this.Invoke("IsExistNodeNameByWorkflow", new object[] {
                        systemID,
                        name,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistNodeNameByWorkflowAsync(System.Guid systemID, string name, System.Guid ID) {
            this.IsExistNodeNameByWorkflowAsync(systemID, name, ID, null);
        }
        
        /// <remarks/>
        public void IsExistNodeNameByWorkflowAsync(System.Guid systemID, string name, System.Guid ID, object userState) {
            if ((this.IsExistNodeNameByWorkflowOperationCompleted == null)) {
                this.IsExistNodeNameByWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistNodeNameByWorkflowOperationCompleted);
            }
            this.InvokeAsync("IsExistNodeNameByWorkflow", new object[] {
                        systemID,
                        name,
                        ID}, this.IsExistNodeNameByWorkflowOperationCompleted, userState);
        }
        
        private void OnIsExistNodeNameByWorkflowOperationCompleted(object arg) {
            if ((this.IsExistNodeNameByWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistNodeNameByWorkflowCompleted(this, new IsExistNodeNameByWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNodeByWorkflowID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.IWFM_NodeDataTable GetNodeByWorkflowID(System.Guid workflowID) {
            object[] results = this.Invoke("GetNodeByWorkflowID", new object[] {
                        workflowID});
            return ((MediaAssetDS.IWFM_NodeDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeByWorkflowIDAsync(System.Guid workflowID) {
            this.GetNodeByWorkflowIDAsync(workflowID, null);
        }
        
        /// <remarks/>
        public void GetNodeByWorkflowIDAsync(System.Guid workflowID, object userState) {
            if ((this.GetNodeByWorkflowIDOperationCompleted == null)) {
                this.GetNodeByWorkflowIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeByWorkflowIDOperationCompleted);
            }
            this.InvokeAsync("GetNodeByWorkflowID", new object[] {
                        workflowID}, this.GetNodeByWorkflowIDOperationCompleted, userState);
        }
        
        private void OnGetNodeByWorkflowIDOperationCompleted(object arg) {
            if ((this.GetNodeByWorkflowIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeByWorkflowIDCompleted(this, new GetNodeByWorkflowIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWFNodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWFNodes(System.Guid[] oldNodeIDs, MediaAssetDS.IWFM_NodeDataTable nodeDT, MediaAssetDS.IWFM_NodeSignerDataTable nodeSignerDT, System.Guid systemID, System.Guid modifyUserID, string modifyUserName) {
            object[] results = this.Invoke("UpdateWFNodes", new object[] {
                        oldNodeIDs,
                        nodeDT,
                        nodeSignerDT,
                        systemID,
                        modifyUserID,
                        modifyUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWFNodesAsync(System.Guid[] oldNodeIDs, MediaAssetDS.IWFM_NodeDataTable nodeDT, MediaAssetDS.IWFM_NodeSignerDataTable nodeSignerDT, System.Guid systemID, System.Guid modifyUserID, string modifyUserName) {
            this.UpdateWFNodesAsync(oldNodeIDs, nodeDT, nodeSignerDT, systemID, modifyUserID, modifyUserName, null);
        }
        
        /// <remarks/>
        public void UpdateWFNodesAsync(System.Guid[] oldNodeIDs, MediaAssetDS.IWFM_NodeDataTable nodeDT, MediaAssetDS.IWFM_NodeSignerDataTable nodeSignerDT, System.Guid systemID, System.Guid modifyUserID, string modifyUserName, object userState) {
            if ((this.UpdateWFNodesOperationCompleted == null)) {
                this.UpdateWFNodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWFNodesOperationCompleted);
            }
            this.InvokeAsync("UpdateWFNodes", new object[] {
                        oldNodeIDs,
                        nodeDT,
                        nodeSignerDT,
                        systemID,
                        modifyUserID,
                        modifyUserName}, this.UpdateWFNodesOperationCompleted, userState);
        }
        
        private void OnUpdateWFNodesOperationCompleted(object arg) {
            if ((this.UpdateWFNodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWFNodesCompleted(this, new UpdateWFNodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIWFM_NodeSignerByNodeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.IWFM_NodeSignerDataTable GetIWFM_NodeSignerByNodeID(System.Guid nodeID) {
            object[] results = this.Invoke("GetIWFM_NodeSignerByNodeID", new object[] {
                        nodeID});
            return ((MediaAssetDS.IWFM_NodeSignerDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetIWFM_NodeSignerByNodeIDAsync(System.Guid nodeID) {
            this.GetIWFM_NodeSignerByNodeIDAsync(nodeID, null);
        }
        
        /// <remarks/>
        public void GetIWFM_NodeSignerByNodeIDAsync(System.Guid nodeID, object userState) {
            if ((this.GetIWFM_NodeSignerByNodeIDOperationCompleted == null)) {
                this.GetIWFM_NodeSignerByNodeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIWFM_NodeSignerByNodeIDOperationCompleted);
            }
            this.InvokeAsync("GetIWFM_NodeSignerByNodeID", new object[] {
                        nodeID}, this.GetIWFM_NodeSignerByNodeIDOperationCompleted, userState);
        }
        
        private void OnGetIWFM_NodeSignerByNodeIDOperationCompleted(object arg) {
            if ((this.GetIWFM_NodeSignerByNodeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIWFM_NodeSignerByNodeIDCompleted(this, new GetIWFM_NodeSignerByNodeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIWFM_NodeSigner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateIWFM_NodeSigner(System.Guid nodeID, MediaAssetDS.IWFM_NodeSignerDataTable newNodeSignerDT) {
            object[] results = this.Invoke("UpdateIWFM_NodeSigner", new object[] {
                        nodeID,
                        newNodeSignerDT});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIWFM_NodeSignerAsync(System.Guid nodeID, MediaAssetDS.IWFM_NodeSignerDataTable newNodeSignerDT) {
            this.UpdateIWFM_NodeSignerAsync(nodeID, newNodeSignerDT, null);
        }
        
        /// <remarks/>
        public void UpdateIWFM_NodeSignerAsync(System.Guid nodeID, MediaAssetDS.IWFM_NodeSignerDataTable newNodeSignerDT, object userState) {
            if ((this.UpdateIWFM_NodeSignerOperationCompleted == null)) {
                this.UpdateIWFM_NodeSignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIWFM_NodeSignerOperationCompleted);
            }
            this.InvokeAsync("UpdateIWFM_NodeSigner", new object[] {
                        nodeID,
                        newNodeSignerDT}, this.UpdateIWFM_NodeSignerOperationCompleted, userState);
        }
        
        private void OnUpdateIWFM_NodeSignerOperationCompleted(object arg) {
            if ((this.UpdateIWFM_NodeSignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIWFM_NodeSignerCompleted(this, new UpdateIWFM_NodeSignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIWF_TypeMatchWF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateIWF_TypeMatchWF(System.Guid systemID, int systemType, System.Guid[] lstWorkflowID) {
            object[] results = this.Invoke("UpdateIWF_TypeMatchWF", new object[] {
                        systemID,
                        systemType,
                        lstWorkflowID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIWF_TypeMatchWFAsync(System.Guid systemID, int systemType, System.Guid[] lstWorkflowID) {
            this.UpdateIWF_TypeMatchWFAsync(systemID, systemType, lstWorkflowID, null);
        }
        
        /// <remarks/>
        public void UpdateIWF_TypeMatchWFAsync(System.Guid systemID, int systemType, System.Guid[] lstWorkflowID, object userState) {
            if ((this.UpdateIWF_TypeMatchWFOperationCompleted == null)) {
                this.UpdateIWF_TypeMatchWFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIWF_TypeMatchWFOperationCompleted);
            }
            this.InvokeAsync("UpdateIWF_TypeMatchWF", new object[] {
                        systemID,
                        systemType,
                        lstWorkflowID}, this.UpdateIWF_TypeMatchWFOperationCompleted, userState);
        }
        
        private void OnUpdateIWF_TypeMatchWFOperationCompleted(object arg) {
            if ((this.UpdateIWF_TypeMatchWFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIWF_TypeMatchWFCompleted(this, new UpdateIWF_TypeMatchWFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelator2Contributors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.Relator2ContributorDataTable GetRelator2Contributors(System.Guid relatorID) {
            object[] results = this.Invoke("GetRelator2Contributors", new object[] {
                        relatorID});
            return ((MediaAssetDS.Relator2ContributorDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelator2ContributorsAsync(System.Guid relatorID) {
            this.GetRelator2ContributorsAsync(relatorID, null);
        }
        
        /// <remarks/>
        public void GetRelator2ContributorsAsync(System.Guid relatorID, object userState) {
            if ((this.GetRelator2ContributorsOperationCompleted == null)) {
                this.GetRelator2ContributorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelator2ContributorsOperationCompleted);
            }
            this.InvokeAsync("GetRelator2Contributors", new object[] {
                        relatorID}, this.GetRelator2ContributorsOperationCompleted, userState);
        }
        
        private void OnGetRelator2ContributorsOperationCompleted(object arg) {
            if ((this.GetRelator2ContributorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelator2ContributorsCompleted(this, new GetRelator2ContributorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRelator2Contributor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRelator2Contributor(System.Guid relatorID, System.Guid[] contributorIDs) {
            object[] results = this.Invoke("UpdateRelator2Contributor", new object[] {
                        relatorID,
                        contributorIDs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRelator2ContributorAsync(System.Guid relatorID, System.Guid[] contributorIDs) {
            this.UpdateRelator2ContributorAsync(relatorID, contributorIDs, null);
        }
        
        /// <remarks/>
        public void UpdateRelator2ContributorAsync(System.Guid relatorID, System.Guid[] contributorIDs, object userState) {
            if ((this.UpdateRelator2ContributorOperationCompleted == null)) {
                this.UpdateRelator2ContributorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRelator2ContributorOperationCompleted);
            }
            this.InvokeAsync("UpdateRelator2Contributor", new object[] {
                        relatorID,
                        contributorIDs}, this.UpdateRelator2ContributorOperationCompleted, userState);
        }
        
        private void OnUpdateRelator2ContributorOperationCompleted(object arg) {
            if ((this.UpdateRelator2ContributorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRelator2ContributorCompleted(this, new UpdateRelator2ContributorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramInFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramInFolder(System.Guid folderID) {
            object[] results = this.Invoke("IsExistProgramInFolder", new object[] {
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramInFolderAsync(System.Guid folderID) {
            this.IsExistProgramInFolderAsync(folderID, null);
        }
        
        /// <remarks/>
        public void IsExistProgramInFolderAsync(System.Guid folderID, object userState) {
            if ((this.IsExistProgramInFolderOperationCompleted == null)) {
                this.IsExistProgramInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramInFolderOperationCompleted);
            }
            this.InvokeAsync("IsExistProgramInFolder", new object[] {
                        folderID}, this.IsExistProgramInFolderOperationCompleted, userState);
        }
        
        private void OnIsExistProgramInFolderOperationCompleted(object arg) {
            if ((this.IsExistProgramInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramInFolderCompleted(this, new IsExistProgramInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramMBInFolder4MT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetProgramMBInFolder4MT(System.Guid folderID) {
            object[] results = this.Invoke("GetProgramMBInFolder4MT", new object[] {
                        folderID});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramMBInFolder4MTAsync(System.Guid folderID) {
            this.GetProgramMBInFolder4MTAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetProgramMBInFolder4MTAsync(System.Guid folderID, object userState) {
            if ((this.GetProgramMBInFolder4MTOperationCompleted == null)) {
                this.GetProgramMBInFolder4MTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramMBInFolder4MTOperationCompleted);
            }
            this.InvokeAsync("GetProgramMBInFolder4MT", new object[] {
                        folderID}, this.GetProgramMBInFolder4MTOperationCompleted, userState);
        }
        
        private void OnGetProgramMBInFolder4MTOperationCompleted(object arg) {
            if ((this.GetProgramMBInFolder4MTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramMBInFolder4MTCompleted(this, new GetProgramMBInFolder4MTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramMBInFolder4Project", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetProgramMBInFolder4Project(System.Guid folderID) {
            object[] results = this.Invoke("GetProgramMBInFolder4Project", new object[] {
                        folderID});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramMBInFolder4ProjectAsync(System.Guid folderID) {
            this.GetProgramMBInFolder4ProjectAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetProgramMBInFolder4ProjectAsync(System.Guid folderID, object userState) {
            if ((this.GetProgramMBInFolder4ProjectOperationCompleted == null)) {
                this.GetProgramMBInFolder4ProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramMBInFolder4ProjectOperationCompleted);
            }
            this.InvokeAsync("GetProgramMBInFolder4Project", new object[] {
                        folderID}, this.GetProgramMBInFolder4ProjectOperationCompleted, userState);
        }
        
        private void OnGetProgramMBInFolder4ProjectOperationCompleted(object arg) {
            if ((this.GetProgramMBInFolder4ProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramMBInFolder4ProjectCompleted(this, new GetProgramMBInFolder4ProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibs1", RequestElementName="GetProgramLibs1", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibs1Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibs1Result")]
        public XStudioDS.ProgramLibDataTable GetProgramLibs() {
            object[] results = this.Invoke("GetProgramLibs", new object[0]);
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsAsync() {
            this.GetProgramLibsAsync(null);
        }
        
        /// <remarks/>
        public void GetProgramLibsAsync(object userState) {
            if ((this.GetProgramLibsOperationCompleted == null)) {
                this.GetProgramLibsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibs", new object[0], this.GetProgramLibsOperationCompleted, userState);
        }
        
        private void OnGetProgramLibsOperationCompleted(object arg) {
            if ((this.GetProgramLibsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsCompleted(this, new GetProgramLibsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetProgramLibs1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibs2", RequestElementName="GetProgramLibs2", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibs2Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibs2Result")]
        public XStudioDS.ProgramLibDataTable GetProgramLibs(out int nextProgramLibNumber) {
            object[] results = this.Invoke("GetProgramLibs1", new object[0]);
            nextProgramLibNumber = ((int)(results[1]));
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibs1Async() {
            this.GetProgramLibs1Async(null);
        }
        
        /// <remarks/>
        public void GetProgramLibs1Async(object userState) {
            if ((this.GetProgramLibs1OperationCompleted == null)) {
                this.GetProgramLibs1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibs1OperationCompleted);
            }
            this.InvokeAsync("GetProgramLibs1", new object[0], this.GetProgramLibs1OperationCompleted, userState);
        }
        
        private void OnGetProgramLibs1OperationCompleted(object arg) {
            if ((this.GetProgramLibs1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibs1Completed(this, new GetProgramLibs1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.ProgramLibDataTable GetProgramLibByID(System.Guid programLibID) {
            object[] results = this.Invoke("GetProgramLibByID", new object[] {
                        programLibID});
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibByIDAsync(System.Guid programLibID) {
            this.GetProgramLibByIDAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibByIDAsync(System.Guid programLibID, object userState) {
            if ((this.GetProgramLibByIDOperationCompleted == null)) {
                this.GetProgramLibByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibByIDOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibByID", new object[] {
                        programLibID}, this.GetProgramLibByIDOperationCompleted, userState);
        }
        
        private void OnGetProgramLibByIDOperationCompleted(object arg) {
            if ((this.GetProgramLibByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibByIDCompleted(this, new GetProgramLibByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByProgramLibType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.ProgramLibDataTable GetProgramLibsByProgramLibType(int programLibType) {
            object[] results = this.Invoke("GetProgramLibsByProgramLibType", new object[] {
                        programLibType});
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByProgramLibTypeAsync(int programLibType) {
            this.GetProgramLibsByProgramLibTypeAsync(programLibType, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByProgramLibTypeAsync(int programLibType, object userState) {
            if ((this.GetProgramLibsByProgramLibTypeOperationCompleted == null)) {
                this.GetProgramLibsByProgramLibTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByProgramLibTypeOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByProgramLibType", new object[] {
                        programLibType}, this.GetProgramLibsByProgramLibTypeOperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByProgramLibTypeOperationCompleted(object arg) {
            if ((this.GetProgramLibsByProgramLibTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByProgramLibTypeCompleted(this, new GetProgramLibsByProgramLibTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByUserIDProgramLibType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.ProgramLibDataTable GetProgramLibsByUserIDProgramLibType(System.Guid userID, int programLibType) {
            object[] results = this.Invoke("GetProgramLibsByUserIDProgramLibType", new object[] {
                        userID,
                        programLibType});
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDProgramLibTypeAsync(System.Guid userID, int programLibType) {
            this.GetProgramLibsByUserIDProgramLibTypeAsync(userID, programLibType, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDProgramLibTypeAsync(System.Guid userID, int programLibType, object userState) {
            if ((this.GetProgramLibsByUserIDProgramLibTypeOperationCompleted == null)) {
                this.GetProgramLibsByUserIDProgramLibTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByUserIDProgramLibTypeOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByUserIDProgramLibType", new object[] {
                        userID,
                        programLibType}, this.GetProgramLibsByUserIDProgramLibTypeOperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByUserIDProgramLibTypeOperationCompleted(object arg) {
            if ((this.GetProgramLibsByUserIDProgramLibTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByUserIDProgramLibTypeCompleted(this, new GetProgramLibsByUserIDProgramLibTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByUserID1", RequestElementName="GetProgramLibsByUserID1", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibsByUserID1Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibsByUserID1Result")]
        public XStudioDS.ProgramLibDataTable GetProgramLibsByUserID(System.Guid userID) {
            object[] results = this.Invoke("GetProgramLibsByUserID", new object[] {
                        userID});
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDAsync(System.Guid userID) {
            this.GetProgramLibsByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDAsync(System.Guid userID, object userState) {
            if ((this.GetProgramLibsByUserIDOperationCompleted == null)) {
                this.GetProgramLibsByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByUserID", new object[] {
                        userID}, this.GetProgramLibsByUserIDOperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByUserIDOperationCompleted(object arg) {
            if ((this.GetProgramLibsByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByUserIDCompleted(this, new GetProgramLibsByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetProgramLibsByUserID1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByUserID2", RequestElementName="GetProgramLibsByUserID2", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibsByUserID2Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibsByUserID2Result")]
        public XStudioDS.ProgramLibDataTable GetProgramLibsByUserID(System.Guid userID, out int nextProgramLibNumber) {
            object[] results = this.Invoke("GetProgramLibsByUserID1", new object[] {
                        userID});
            nextProgramLibNumber = ((int)(results[1]));
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserID1Async(System.Guid userID) {
            this.GetProgramLibsByUserID1Async(userID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserID1Async(System.Guid userID, object userState) {
            if ((this.GetProgramLibsByUserID1OperationCompleted == null)) {
                this.GetProgramLibsByUserID1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByUserID1OperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByUserID1", new object[] {
                        userID}, this.GetProgramLibsByUserID1OperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByUserID1OperationCompleted(object arg) {
            if ((this.GetProgramLibsByUserID1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByUserID1Completed(this, new GetProgramLibsByUserID1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByStorageID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.ProgramLibDataTable GetProgramLibsByStorageID(System.Guid storageID) {
            object[] results = this.Invoke("GetProgramLibsByStorageID", new object[] {
                        storageID});
            return ((XStudioDS.ProgramLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByStorageIDAsync(System.Guid storageID) {
            this.GetProgramLibsByStorageIDAsync(storageID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByStorageIDAsync(System.Guid storageID, object userState) {
            if ((this.GetProgramLibsByStorageIDOperationCompleted == null)) {
                this.GetProgramLibsByStorageIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByStorageIDOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByStorageID", new object[] {
                        storageID}, this.GetProgramLibsByStorageIDOperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByStorageIDOperationCompleted(object arg) {
            if ((this.GetProgramLibsByStorageIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByStorageIDCompleted(this, new GetProgramLibsByStorageIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibName(string programLibName) {
            object[] results = this.Invoke("IsExistProgramLibName", new object[] {
                        programLibName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibNameAsync(string programLibName) {
            this.IsExistProgramLibNameAsync(programLibName, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibNameAsync(string programLibName, object userState) {
            if ((this.IsExistProgramLibNameOperationCompleted == null)) {
                this.IsExistProgramLibNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibNameOperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibName", new object[] {
                        programLibName}, this.IsExistProgramLibNameOperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibNameOperationCompleted(object arg) {
            if ((this.IsExistProgramLibNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibNameCompleted(this, new IsExistProgramLibNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibTypeEqual1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibTypeEqual1() {
            object[] results = this.Invoke("IsExistProgramLibTypeEqual1", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibTypeEqual1Async() {
            this.IsExistProgramLibTypeEqual1Async(null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibTypeEqual1Async(object userState) {
            if ((this.IsExistProgramLibTypeEqual1OperationCompleted == null)) {
                this.IsExistProgramLibTypeEqual1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibTypeEqual1OperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibTypeEqual1", new object[0], this.IsExistProgramLibTypeEqual1OperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibTypeEqual1OperationCompleted(object arg) {
            if ((this.IsExistProgramLibTypeEqual1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibTypeEqual1Completed(this, new IsExistProgramLibTypeEqual1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibShortName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibShortName(string shortName, System.Guid programLibID) {
            object[] results = this.Invoke("IsExistProgramLibShortName", new object[] {
                        shortName,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibShortNameAsync(string shortName, System.Guid programLibID) {
            this.IsExistProgramLibShortNameAsync(shortName, programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibShortNameAsync(string shortName, System.Guid programLibID, object userState) {
            if ((this.IsExistProgramLibShortNameOperationCompleted == null)) {
                this.IsExistProgramLibShortNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibShortNameOperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibShortName", new object[] {
                        shortName,
                        programLibID}, this.IsExistProgramLibShortNameOperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibShortNameOperationCompleted(object arg) {
            if ((this.IsExistProgramLibShortNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibShortNameCompleted(this, new IsExistProgramLibShortNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibNumber(int programLibNumber) {
            object[] results = this.Invoke("IsExistProgramLibNumber", new object[] {
                        programLibNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibNumberAsync(int programLibNumber) {
            this.IsExistProgramLibNumberAsync(programLibNumber, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibNumberAsync(int programLibNumber, object userState) {
            if ((this.IsExistProgramLibNumberOperationCompleted == null)) {
                this.IsExistProgramLibNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibNumberOperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibNumber", new object[] {
                        programLibNumber}, this.IsExistProgramLibNumberOperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibNumberOperationCompleted(object arg) {
            if ((this.IsExistProgramLibNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibNumberCompleted(this, new IsExistProgramLibNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProgramLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateProgramLib(
                    System.Guid programLibID, 
                    string programLibName, 
                    string shortName, 
                    int programLibNum, 
                    System.Guid creatorID, 
                    string creatorName, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    int programLibType, 
                    System.Guid systemID, 
                    int resourceCategory, 
                    System.Guid createUserID, 
                    string createUserName) {
            object[] results = this.Invoke("CreateProgramLib", new object[] {
                        programLibID,
                        programLibName,
                        shortName,
                        programLibNum,
                        creatorID,
                        creatorName,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        programLibType,
                        systemID,
                        resourceCategory,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProgramLibAsync(
                    System.Guid programLibID, 
                    string programLibName, 
                    string shortName, 
                    int programLibNum, 
                    System.Guid creatorID, 
                    string creatorName, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    int programLibType, 
                    System.Guid systemID, 
                    int resourceCategory, 
                    System.Guid createUserID, 
                    string createUserName) {
            this.CreateProgramLibAsync(programLibID, programLibName, shortName, programLibNum, creatorID, creatorName, dbServer, dbServer_Bak, dbName, dbName_Bak, maxSpaceMB, freeSpaceMB, maxSpaceHour, freeSpaceHour, programLibType, systemID, resourceCategory, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateProgramLibAsync(
                    System.Guid programLibID, 
                    string programLibName, 
                    string shortName, 
                    int programLibNum, 
                    System.Guid creatorID, 
                    string creatorName, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    int programLibType, 
                    System.Guid systemID, 
                    int resourceCategory, 
                    System.Guid createUserID, 
                    string createUserName, 
                    object userState) {
            if ((this.CreateProgramLibOperationCompleted == null)) {
                this.CreateProgramLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProgramLibOperationCompleted);
            }
            this.InvokeAsync("CreateProgramLib", new object[] {
                        programLibID,
                        programLibName,
                        shortName,
                        programLibNum,
                        creatorID,
                        creatorName,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        programLibType,
                        systemID,
                        resourceCategory,
                        createUserID,
                        createUserName}, this.CreateProgramLibOperationCompleted, userState);
        }
        
        private void OnCreateProgramLibOperationCompleted(object arg) {
            if ((this.CreateProgramLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProgramLibCompleted(this, new CreateProgramLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProgramLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProgramLib(
                    System.Guid programLibID, 
                    string programLibNameNew, 
                    string programLibNameOld, 
                    string shortName, 
                    int programLibNum, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            object[] results = this.Invoke("UpdateProgramLib", new object[] {
                        programLibID,
                        programLibNameNew,
                        programLibNameOld,
                        shortName,
                        programLibNum,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgramLibAsync(
                    System.Guid programLibID, 
                    string programLibNameNew, 
                    string programLibNameOld, 
                    string shortName, 
                    int programLibNum, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            this.UpdateProgramLibAsync(programLibID, programLibNameNew, programLibNameOld, shortName, programLibNum, dbServer, dbServer_Bak, dbName, dbName_Bak, maxSpaceMB2, freeSpaceMB2, maxSpaceHour2, freeSpaceHour2, modifyUserID, modifyUserName, maxSpaceMB1, maxSpaceHour1, null);
        }
        
        /// <remarks/>
        public void UpdateProgramLibAsync(
                    System.Guid programLibID, 
                    string programLibNameNew, 
                    string programLibNameOld, 
                    string shortName, 
                    int programLibNum, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1, 
                    object userState) {
            if ((this.UpdateProgramLibOperationCompleted == null)) {
                this.UpdateProgramLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgramLibOperationCompleted);
            }
            this.InvokeAsync("UpdateProgramLib", new object[] {
                        programLibID,
                        programLibNameNew,
                        programLibNameOld,
                        shortName,
                        programLibNum,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1}, this.UpdateProgramLibOperationCompleted, userState);
        }
        
        private void OnUpdateProgramLibOperationCompleted(object arg) {
            if ((this.UpdateProgramLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgramLibCompleted(this, new UpdateProgramLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProgramLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProgramLib(System.Guid programLibID) {
            object[] results = this.Invoke("DeleteProgramLib", new object[] {
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramLibAsync(System.Guid programLibID) {
            this.DeleteProgramLibAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void DeleteProgramLibAsync(System.Guid programLibID, object userState) {
            if ((this.DeleteProgramLibOperationCompleted == null)) {
                this.DeleteProgramLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramLibOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramLib", new object[] {
                        programLibID}, this.DeleteProgramLibOperationCompleted, userState);
        }
        
        private void OnDeleteProgramLibOperationCompleted(object arg) {
            if ((this.DeleteProgramLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramLibCompleted(this, new DeleteProgramLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLib2Storages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProgramLib2StorageModel[] GetProgramLib2Storages(System.Guid programLibID) {
            object[] results = this.Invoke("GetProgramLib2Storages", new object[] {
                        programLibID});
            return ((ProgramLib2StorageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLib2StoragesAsync(System.Guid programLibID) {
            this.GetProgramLib2StoragesAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetProgramLib2StoragesAsync(System.Guid programLibID, object userState) {
            if ((this.GetProgramLib2StoragesOperationCompleted == null)) {
                this.GetProgramLib2StoragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLib2StoragesOperationCompleted);
            }
            this.InvokeAsync("GetProgramLib2Storages", new object[] {
                        programLibID}, this.GetProgramLib2StoragesOperationCompleted, userState);
        }
        
        private void OnGetProgramLib2StoragesOperationCompleted(object arg) {
            if ((this.GetProgramLib2StoragesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLib2StoragesCompleted(this, new GetProgramLib2StoragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProgramLib2Storages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProgramLib2Storages(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, bool isCutSpace) {
            object[] results = this.Invoke("UpdateProgramLib2Storages", new object[] {
                        newP2S,
                        programLibID,
                        isCutSpace});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgramLib2StoragesAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, bool isCutSpace) {
            this.UpdateProgramLib2StoragesAsync(newP2S, programLibID, isCutSpace, null);
        }
        
        /// <remarks/>
        public void UpdateProgramLib2StoragesAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, bool isCutSpace, object userState) {
            if ((this.UpdateProgramLib2StoragesOperationCompleted == null)) {
                this.UpdateProgramLib2StoragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgramLib2StoragesOperationCompleted);
            }
            this.InvokeAsync("UpdateProgramLib2Storages", new object[] {
                        newP2S,
                        programLibID,
                        isCutSpace}, this.UpdateProgramLib2StoragesOperationCompleted, userState);
        }
        
        private void OnUpdateProgramLib2StoragesOperationCompleted(object arg) {
            if ((this.UpdateProgramLib2StoragesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgramLib2StoragesCompleted(this, new UpdateProgramLib2StoragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProgramLib2Storages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProgramLib2Storages(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, int deleteIndex) {
            object[] results = this.Invoke("DeleteProgramLib2Storages", new object[] {
                        newP2S,
                        programLibID,
                        deleteIndex});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramLib2StoragesAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, int deleteIndex) {
            this.DeleteProgramLib2StoragesAsync(newP2S, programLibID, deleteIndex, null);
        }
        
        /// <remarks/>
        public void DeleteProgramLib2StoragesAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, int deleteIndex, object userState) {
            if ((this.DeleteProgramLib2StoragesOperationCompleted == null)) {
                this.DeleteProgramLib2StoragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramLib2StoragesOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramLib2Storages", new object[] {
                        newP2S,
                        programLibID,
                        deleteIndex}, this.DeleteProgramLib2StoragesOperationCompleted, userState);
        }
        
        private void OnDeleteProgramLib2StoragesOperationCompleted(object arg) {
            if ((this.DeleteProgramLib2StoragesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramLib2StoragesCompleted(this, new DeleteProgramLib2StoragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramIDInLibStorages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramIDInLibStorages(System.Guid programLibID) {
            object[] results = this.Invoke("IsExistProgramIDInLibStorages", new object[] {
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramIDInLibStoragesAsync(System.Guid programLibID) {
            this.IsExistProgramIDInLibStoragesAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistProgramIDInLibStoragesAsync(System.Guid programLibID, object userState) {
            if ((this.IsExistProgramIDInLibStoragesOperationCompleted == null)) {
                this.IsExistProgramIDInLibStoragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramIDInLibStoragesOperationCompleted);
            }
            this.InvokeAsync("IsExistProgramIDInLibStorages", new object[] {
                        programLibID}, this.IsExistProgramIDInLibStoragesOperationCompleted, userState);
        }
        
        private void OnIsExistProgramIDInLibStoragesOperationCompleted(object arg) {
            if ((this.IsExistProgramIDInLibStoragesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramIDInLibStoragesCompleted(this, new IsExistProgramIDInLibStoragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageIDInLibStorages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageIDInLibStorages(System.Guid storageID) {
            object[] results = this.Invoke("IsExistStorageIDInLibStorages", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageIDInLibStoragesAsync(System.Guid storageID) {
            this.IsExistStorageIDInLibStoragesAsync(storageID, null);
        }
        
        /// <remarks/>
        public void IsExistStorageIDInLibStoragesAsync(System.Guid storageID, object userState) {
            if ((this.IsExistStorageIDInLibStoragesOperationCompleted == null)) {
                this.IsExistStorageIDInLibStoragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageIDInLibStoragesOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageIDInLibStorages", new object[] {
                        storageID}, this.IsExistStorageIDInLibStoragesOperationCompleted, userState);
        }
        
        private void OnIsExistStorageIDInLibStoragesOperationCompleted(object arg) {
            if ((this.IsExistStorageIDInLibStoragesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageIDInLibStoragesCompleted(this, new IsExistStorageIDInLibStoragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFolders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.FolderDataTable GetFolders() {
            object[] results = this.Invoke("GetFolders", new object[0]);
            return ((XStudioDS.FolderDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersAsync() {
            this.GetFoldersAsync(null);
        }
        
        /// <remarks/>
        public void GetFoldersAsync(object userState) {
            if ((this.GetFoldersOperationCompleted == null)) {
                this.GetFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersOperationCompleted);
            }
            this.InvokeAsync("GetFolders", new object[0], this.GetFoldersOperationCompleted, userState);
        }
        
        private void OnGetFoldersOperationCompleted(object arg) {
            if ((this.GetFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersCompleted(this, new GetFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFolderByFolderID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.FolderDataTable GetFolderByFolderID(System.Guid folderID) {
            object[] results = this.Invoke("GetFolderByFolderID", new object[] {
                        folderID});
            return ((XStudioDS.FolderDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderByFolderIDAsync(System.Guid folderID) {
            this.GetFolderByFolderIDAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetFolderByFolderIDAsync(System.Guid folderID, object userState) {
            if ((this.GetFolderByFolderIDOperationCompleted == null)) {
                this.GetFolderByFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderByFolderIDOperationCompleted);
            }
            this.InvokeAsync("GetFolderByFolderID", new object[] {
                        folderID}, this.GetFolderByFolderIDOperationCompleted, userState);
        }
        
        private void OnGetFolderByFolderIDOperationCompleted(object arg) {
            if ((this.GetFolderByFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderByFolderIDCompleted(this, new GetFolderByFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFoldersByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.FolderDataTable GetFoldersByUserID(System.Guid userID) {
            object[] results = this.Invoke("GetFoldersByUserID", new object[] {
                        userID});
            return ((XStudioDS.FolderDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByUserIDAsync(System.Guid userID) {
            this.GetFoldersByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetFoldersByUserIDAsync(System.Guid userID, object userState) {
            if ((this.GetFoldersByUserIDOperationCompleted == null)) {
                this.GetFoldersByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByUserID", new object[] {
                        userID}, this.GetFoldersByUserIDOperationCompleted, userState);
        }
        
        private void OnGetFoldersByUserIDOperationCompleted(object arg) {
            if ((this.GetFoldersByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByUserIDCompleted(this, new GetFoldersByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFoldersByProgramLibID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.FolderDataTable GetFoldersByProgramLibID(System.Guid programLibID, int folderCategory) {
            object[] results = this.Invoke("GetFoldersByProgramLibID", new object[] {
                        programLibID,
                        folderCategory});
            return ((XStudioDS.FolderDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDAsync(System.Guid programLibID, int folderCategory) {
            this.GetFoldersByProgramLibIDAsync(programLibID, folderCategory, null);
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDAsync(System.Guid programLibID, int folderCategory, object userState) {
            if ((this.GetFoldersByProgramLibIDOperationCompleted == null)) {
                this.GetFoldersByProgramLibIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByProgramLibIDOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByProgramLibID", new object[] {
                        programLibID,
                        folderCategory}, this.GetFoldersByProgramLibIDOperationCompleted, userState);
        }
        
        private void OnGetFoldersByProgramLibIDOperationCompleted(object arg) {
            if ((this.GetFoldersByProgramLibIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByProgramLibIDCompleted(this, new GetFoldersByProgramLibIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFoldersByProgramLibIDUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.FolderDataTable GetFoldersByProgramLibIDUserID(System.Guid programLibID, System.Guid userID, int folderCategory) {
            object[] results = this.Invoke("GetFoldersByProgramLibIDUserID", new object[] {
                        programLibID,
                        userID,
                        folderCategory});
            return ((XStudioDS.FolderDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDUserIDAsync(System.Guid programLibID, System.Guid userID, int folderCategory) {
            this.GetFoldersByProgramLibIDUserIDAsync(programLibID, userID, folderCategory, null);
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDUserIDAsync(System.Guid programLibID, System.Guid userID, int folderCategory, object userState) {
            if ((this.GetFoldersByProgramLibIDUserIDOperationCompleted == null)) {
                this.GetFoldersByProgramLibIDUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByProgramLibIDUserIDOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByProgramLibIDUserID", new object[] {
                        programLibID,
                        userID,
                        folderCategory}, this.GetFoldersByProgramLibIDUserIDOperationCompleted, userState);
        }
        
        private void OnGetFoldersByProgramLibIDUserIDOperationCompleted(object arg) {
            if ((this.GetFoldersByProgramLibIDUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByProgramLibIDUserIDCompleted(this, new GetFoldersByProgramLibIDUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibIDInfolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibIDInfolder(System.Guid programLibID) {
            object[] results = this.Invoke("IsExistProgramLibIDInfolder", new object[] {
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibIDInfolderAsync(System.Guid programLibID) {
            this.IsExistProgramLibIDInfolderAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibIDInfolderAsync(System.Guid programLibID, object userState) {
            if ((this.IsExistProgramLibIDInfolderOperationCompleted == null)) {
                this.IsExistProgramLibIDInfolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibIDInfolderOperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibIDInfolder", new object[] {
                        programLibID}, this.IsExistProgramLibIDInfolderOperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibIDInfolderOperationCompleted(object arg) {
            if ((this.IsExistProgramLibIDInfolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibIDInfolderCompleted(this, new IsExistProgramLibIDInfolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistFolderName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistFolderName(string folderName, System.Guid programLibID) {
            object[] results = this.Invoke("IsExistFolderName", new object[] {
                        folderName,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistFolderNameAsync(string folderName, System.Guid programLibID) {
            this.IsExistFolderNameAsync(folderName, programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistFolderNameAsync(string folderName, System.Guid programLibID, object userState) {
            if ((this.IsExistFolderNameOperationCompleted == null)) {
                this.IsExistFolderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistFolderNameOperationCompleted);
            }
            this.InvokeAsync("IsExistFolderName", new object[] {
                        folderName,
                        programLibID}, this.IsExistFolderNameOperationCompleted, userState);
        }
        
        private void OnIsExistFolderNameOperationCompleted(object arg) {
            if ((this.IsExistFolderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistFolderNameCompleted(this, new IsExistFolderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistFolderShortName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistFolderShortName(string shortName, System.Guid folderID) {
            object[] results = this.Invoke("IsExistFolderShortName", new object[] {
                        shortName,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistFolderShortNameAsync(string shortName, System.Guid folderID) {
            this.IsExistFolderShortNameAsync(shortName, folderID, null);
        }
        
        /// <remarks/>
        public void IsExistFolderShortNameAsync(string shortName, System.Guid folderID, object userState) {
            if ((this.IsExistFolderShortNameOperationCompleted == null)) {
                this.IsExistFolderShortNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistFolderShortNameOperationCompleted);
            }
            this.InvokeAsync("IsExistFolderShortName", new object[] {
                        shortName,
                        folderID}, this.IsExistFolderShortNameOperationCompleted, userState);
        }
        
        private void OnIsExistFolderShortNameOperationCompleted(object arg) {
            if ((this.IsExistFolderShortNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistFolderShortNameCompleted(this, new IsExistFolderShortNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistFolderTelephoneNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistFolderTelephoneNumber(string telephoneNumber, System.Guid folderID) {
            object[] results = this.Invoke("IsExistFolderTelephoneNumber", new object[] {
                        telephoneNumber,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistFolderTelephoneNumberAsync(string telephoneNumber, System.Guid folderID) {
            this.IsExistFolderTelephoneNumberAsync(telephoneNumber, folderID, null);
        }
        
        /// <remarks/>
        public void IsExistFolderTelephoneNumberAsync(string telephoneNumber, System.Guid folderID, object userState) {
            if ((this.IsExistFolderTelephoneNumberOperationCompleted == null)) {
                this.IsExistFolderTelephoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistFolderTelephoneNumberOperationCompleted);
            }
            this.InvokeAsync("IsExistFolderTelephoneNumber", new object[] {
                        telephoneNumber,
                        folderID}, this.IsExistFolderTelephoneNumberOperationCompleted, userState);
        }
        
        private void OnIsExistFolderTelephoneNumberOperationCompleted(object arg) {
            if ((this.IsExistFolderTelephoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistFolderTelephoneNumberCompleted(this, new IsExistFolderTelephoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateFolder(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    System.Guid programLibID, 
                    short folderType, 
                    System.Guid parentID, 
                    System.Guid rootID, 
                    System.Guid creatorID, 
                    string creatorName, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid systemID, 
                    int resourceCategory1, 
                    int resourceCategory2, 
                    string resourceCategoryName2, 
                    System.Guid createUserID, 
                    string createUserName) {
            object[] results = this.Invoke("CreateFolder", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        programLibID,
                        folderType,
                        parentID,
                        rootID,
                        creatorID,
                        creatorName,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        systemID,
                        resourceCategory1,
                        resourceCategory2,
                        resourceCategoryName2,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFolderAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    System.Guid programLibID, 
                    short folderType, 
                    System.Guid parentID, 
                    System.Guid rootID, 
                    System.Guid creatorID, 
                    string creatorName, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid systemID, 
                    int resourceCategory1, 
                    int resourceCategory2, 
                    string resourceCategoryName2, 
                    System.Guid createUserID, 
                    string createUserName) {
            this.CreateFolderAsync(folderID, folderName, shortName, programLibID, folderType, parentID, rootID, creatorID, creatorName, maxSpaceMB, freeSpaceMB, maxSpaceHour, freeSpaceHour, shared, superviseLevel, materialAccess, materialMB, materialHour, projectAccess, projectMB, projectHour, telephoneAccess, telephoneMB, telephoneHour, telephoneNumber, isNeedExport, keepDays, systemID, resourceCategory1, resourceCategory2, resourceCategoryName2, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateFolderAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    System.Guid programLibID, 
                    short folderType, 
                    System.Guid parentID, 
                    System.Guid rootID, 
                    System.Guid creatorID, 
                    string creatorName, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid systemID, 
                    int resourceCategory1, 
                    int resourceCategory2, 
                    string resourceCategoryName2, 
                    System.Guid createUserID, 
                    string createUserName, 
                    object userState) {
            if ((this.CreateFolderOperationCompleted == null)) {
                this.CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("CreateFolder", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        programLibID,
                        folderType,
                        parentID,
                        rootID,
                        creatorID,
                        creatorName,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        systemID,
                        resourceCategory1,
                        resourceCategory2,
                        resourceCategoryName2,
                        createUserID,
                        createUserName}, this.CreateFolderOperationCompleted, userState);
        }
        
        private void OnCreateFolderOperationCompleted(object arg) {
            if ((this.CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderCompleted(this, new CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFolder(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    short folderType, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid parentID, 
                    System.Guid programLibID, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            object[] results = this.Invoke("UpdateFolder", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        folderType,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        parentID,
                        programLibID,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    short folderType, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid parentID, 
                    System.Guid programLibID, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            this.UpdateFolderAsync(folderID, folderName, shortName, folderType, maxSpaceMB2, freeSpaceMB2, maxSpaceHour2, freeSpaceHour2, parentID, programLibID, shared, superviseLevel, materialAccess, materialMB, materialHour, projectAccess, projectMB, projectHour, telephoneAccess, telephoneMB, telephoneHour, telephoneNumber, isNeedExport, keepDays, modifyUserID, modifyUserName, maxSpaceMB1, maxSpaceHour1, null);
        }
        
        /// <remarks/>
        public void UpdateFolderAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    short folderType, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid parentID, 
                    System.Guid programLibID, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1, 
                    object userState) {
            if ((this.UpdateFolderOperationCompleted == null)) {
                this.UpdateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderOperationCompleted);
            }
            this.InvokeAsync("UpdateFolder", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        folderType,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        parentID,
                        programLibID,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1}, this.UpdateFolderOperationCompleted, userState);
        }
        
        private void OnUpdateFolderOperationCompleted(object arg) {
            if ((this.UpdateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderCompleted(this, new UpdateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFolder(System.Guid folderID, System.Guid folderParentID, int folderMaxSpaceMB, int folderMaxSpaceHour, System.Guid programLibID) {
            object[] results = this.Invoke("DeleteFolder", new object[] {
                        folderID,
                        folderParentID,
                        folderMaxSpaceMB,
                        folderMaxSpaceHour,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(System.Guid folderID, System.Guid folderParentID, int folderMaxSpaceMB, int folderMaxSpaceHour, System.Guid programLibID) {
            this.DeleteFolderAsync(folderID, folderParentID, folderMaxSpaceMB, folderMaxSpaceHour, programLibID, null);
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(System.Guid folderID, System.Guid folderParentID, int folderMaxSpaceMB, int folderMaxSpaceHour, System.Guid programLibID, object userState) {
            if ((this.DeleteFolderOperationCompleted == null)) {
                this.DeleteFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteFolder", new object[] {
                        folderID,
                        folderParentID,
                        folderMaxSpaceMB,
                        folderMaxSpaceHour,
                        programLibID}, this.DeleteFolderOperationCompleted, userState);
        }
        
        private void OnDeleteFolderOperationCompleted(object arg) {
            if ((this.DeleteFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderCompleted(this, new DeleteFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorages4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.StoragesDataTable GetStorages4XStudio() {
            object[] results = this.Invoke("GetStorages4XStudio", new object[0]);
            return ((XStudioDS.StoragesDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorages4XStudioAsync() {
            this.GetStorages4XStudioAsync(null);
        }
        
        /// <remarks/>
        public void GetStorages4XStudioAsync(object userState) {
            if ((this.GetStorages4XStudioOperationCompleted == null)) {
                this.GetStorages4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorages4XStudioOperationCompleted);
            }
            this.InvokeAsync("GetStorages4XStudio", new object[0], this.GetStorages4XStudioOperationCompleted, userState);
        }
        
        private void OnGetStorages4XStudioOperationCompleted(object arg) {
            if ((this.GetStorages4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorages4XStudioCompleted(this, new GetStorages4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStoragesByProgramLibID4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.StoragesDataTable GetStoragesByProgramLibID4XStudio(System.Guid programLibID) {
            object[] results = this.Invoke("GetStoragesByProgramLibID4XStudio", new object[] {
                        programLibID});
            return ((XStudioDS.StoragesDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoragesByProgramLibID4XStudioAsync(System.Guid programLibID) {
            this.GetStoragesByProgramLibID4XStudioAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetStoragesByProgramLibID4XStudioAsync(System.Guid programLibID, object userState) {
            if ((this.GetStoragesByProgramLibID4XStudioOperationCompleted == null)) {
                this.GetStoragesByProgramLibID4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoragesByProgramLibID4XStudioOperationCompleted);
            }
            this.InvokeAsync("GetStoragesByProgramLibID4XStudio", new object[] {
                        programLibID}, this.GetStoragesByProgramLibID4XStudioOperationCompleted, userState);
        }
        
        private void OnGetStoragesByProgramLibID4XStudioOperationCompleted(object arg) {
            if ((this.GetStoragesByProgramLibID4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoragesByProgramLibID4XStudioCompleted(this, new GetStoragesByProgramLibID4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageName4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageName4XStudio(string storageName, System.Guid storageID) {
            object[] results = this.Invoke("IsExistStorageName4XStudio", new object[] {
                        storageName,
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageName4XStudioAsync(string storageName, System.Guid storageID) {
            this.IsExistStorageName4XStudioAsync(storageName, storageID, null);
        }
        
        /// <remarks/>
        public void IsExistStorageName4XStudioAsync(string storageName, System.Guid storageID, object userState) {
            if ((this.IsExistStorageName4XStudioOperationCompleted == null)) {
                this.IsExistStorageName4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageName4XStudioOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageName4XStudio", new object[] {
                        storageName,
                        storageID}, this.IsExistStorageName4XStudioOperationCompleted, userState);
        }
        
        private void OnIsExistStorageName4XStudioOperationCompleted(object arg) {
            if ((this.IsExistStorageName4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageName4XStudioCompleted(this, new IsExistStorageName4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStorage4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStorage4XStudio(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            object[] results = this.Invoke("CreateStorage4XStudio", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStorage4XStudioAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            this.CreateStorage4XStudioAsync(storageID, storageName, maxSpaceMB, maxSpaceHour, freeSpaceMB, freeSpaceHour, server, share, ftpServer, ftpPath, ftpUser, ftpPassword, ftpPort, publicServer, publicPort, publicUser, publicPassword, null);
        }
        
        /// <remarks/>
        public void CreateStorage4XStudioAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword, 
                    object userState) {
            if ((this.CreateStorage4XStudioOperationCompleted == null)) {
                this.CreateStorage4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStorage4XStudioOperationCompleted);
            }
            this.InvokeAsync("CreateStorage4XStudio", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword}, this.CreateStorage4XStudioOperationCompleted, userState);
        }
        
        private void OnCreateStorage4XStudioOperationCompleted(object arg) {
            if ((this.CreateStorage4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStorage4XStudioCompleted(this, new CreateStorage4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorage4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorage4XStudio(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            object[] results = this.Invoke("UpdateStorage4XStudio", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorage4XStudioAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            this.UpdateStorage4XStudioAsync(storageID, storageName, maxSpaceMB, maxSpaceHour, freeSpaceMB, freeSpaceHour, server, share, ftpServer, ftpPath, ftpUser, ftpPassword, ftpPort, publicServer, publicPort, publicUser, publicPassword, null);
        }
        
        /// <remarks/>
        public void UpdateStorage4XStudioAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword, 
                    object userState) {
            if ((this.UpdateStorage4XStudioOperationCompleted == null)) {
                this.UpdateStorage4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorage4XStudioOperationCompleted);
            }
            this.InvokeAsync("UpdateStorage4XStudio", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword}, this.UpdateStorage4XStudioOperationCompleted, userState);
        }
        
        private void OnUpdateStorage4XStudioOperationCompleted(object arg) {
            if ((this.UpdateStorage4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorage4XStudioCompleted(this, new UpdateStorage4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorage4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorage4XStudio(System.Guid storageID) {
            object[] results = this.Invoke("DeleteStorage4XStudio", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorage4XStudioAsync(System.Guid storageID) {
            this.DeleteStorage4XStudioAsync(storageID, null);
        }
        
        /// <remarks/>
        public void DeleteStorage4XStudioAsync(System.Guid storageID, object userState) {
            if ((this.DeleteStorage4XStudioOperationCompleted == null)) {
                this.DeleteStorage4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorage4XStudioOperationCompleted);
            }
            this.InvokeAsync("DeleteStorage4XStudio", new object[] {
                        storageID}, this.DeleteStorage4XStudioOperationCompleted, userState);
        }
        
        private void OnDeleteStorage4XStudioOperationCompleted(object arg) {
            if ((this.DeleteStorage4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorage4XStudioCompleted(this, new DeleteStorage4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZoneInfoByStorageID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XStudioDS.StorageZoneInfoDataTable GetStorageZoneInfoByStorageID(System.Guid storageID) {
            object[] results = this.Invoke("GetStorageZoneInfoByStorageID", new object[] {
                        storageID});
            return ((XStudioDS.StorageZoneInfoDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZoneInfoByStorageIDAsync(System.Guid storageID) {
            this.GetStorageZoneInfoByStorageIDAsync(storageID, null);
        }
        
        /// <remarks/>
        public void GetStorageZoneInfoByStorageIDAsync(System.Guid storageID, object userState) {
            if ((this.GetStorageZoneInfoByStorageIDOperationCompleted == null)) {
                this.GetStorageZoneInfoByStorageIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZoneInfoByStorageIDOperationCompleted);
            }
            this.InvokeAsync("GetStorageZoneInfoByStorageID", new object[] {
                        storageID}, this.GetStorageZoneInfoByStorageIDOperationCompleted, userState);
        }
        
        private void OnGetStorageZoneInfoByStorageIDOperationCompleted(object arg) {
            if ((this.GetStorageZoneInfoByStorageIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZoneInfoByStorageIDCompleted(this, new GetStorageZoneInfoByStorageIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingStorageZone4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingStorageZone4XStudio(System.Guid storageID, int storageZone) {
            object[] results = this.Invoke("IsUsingStorageZone4XStudio", new object[] {
                        storageID,
                        storageZone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingStorageZone4XStudioAsync(System.Guid storageID, int storageZone) {
            this.IsUsingStorageZone4XStudioAsync(storageID, storageZone, null);
        }
        
        /// <remarks/>
        public void IsUsingStorageZone4XStudioAsync(System.Guid storageID, int storageZone, object userState) {
            if ((this.IsUsingStorageZone4XStudioOperationCompleted == null)) {
                this.IsUsingStorageZone4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingStorageZone4XStudioOperationCompleted);
            }
            this.InvokeAsync("IsUsingStorageZone4XStudio", new object[] {
                        storageID,
                        storageZone}, this.IsUsingStorageZone4XStudioOperationCompleted, userState);
        }
        
        private void OnIsUsingStorageZone4XStudioOperationCompleted(object arg) {
            if ((this.IsUsingStorageZone4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingStorageZone4XStudioCompleted(this, new IsUsingStorageZone4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageID4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageID4XStudio(System.Guid storageID) {
            object[] results = this.Invoke("IsExistStorageID4XStudio", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageID4XStudioAsync(System.Guid storageID) {
            this.IsExistStorageID4XStudioAsync(storageID, null);
        }
        
        /// <remarks/>
        public void IsExistStorageID4XStudioAsync(System.Guid storageID, object userState) {
            if ((this.IsExistStorageID4XStudioOperationCompleted == null)) {
                this.IsExistStorageID4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageID4XStudioOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageID4XStudio", new object[] {
                        storageID}, this.IsExistStorageID4XStudioOperationCompleted, userState);
        }
        
        private void OnIsExistStorageID4XStudioOperationCompleted(object arg) {
            if ((this.IsExistStorageID4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageID4XStudioCompleted(this, new IsExistStorageID4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZoneNumber4XStudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetStorageZoneNumber4XStudio(System.Guid storageID) {
            object[] results = this.Invoke("GetStorageZoneNumber4XStudio", new object[] {
                        storageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZoneNumber4XStudioAsync(System.Guid storageID) {
            this.GetStorageZoneNumber4XStudioAsync(storageID, null);
        }
        
        /// <remarks/>
        public void GetStorageZoneNumber4XStudioAsync(System.Guid storageID, object userState) {
            if ((this.GetStorageZoneNumber4XStudioOperationCompleted == null)) {
                this.GetStorageZoneNumber4XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZoneNumber4XStudioOperationCompleted);
            }
            this.InvokeAsync("GetStorageZoneNumber4XStudio", new object[] {
                        storageID}, this.GetStorageZoneNumber4XStudioOperationCompleted, userState);
        }
        
        private void OnGetStorageZoneNumber4XStudioOperationCompleted(object arg) {
            if ((this.GetStorageZoneNumber4XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZoneNumber4XStudioCompleted(this, new GetStorageZoneNumber4XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStorageZoneInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStorageZoneInfo(
                    System.Guid storageID, 
                    int storageZone, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            object[] results = this.Invoke("CreateStorageZoneInfo", new object[] {
                        storageID,
                        storageZone,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStorageZoneInfoAsync(
                    System.Guid storageID, 
                    int storageZone, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            this.CreateStorageZoneInfoAsync(storageID, storageZone, name, ftpServer1, ftpPath1, ftpUser1, ftpPassword1, ftpPort1, server1, share1, fsPath1, fsPort1, ftpServer2, ftpPath2, ftpUser2, ftpPassword2, ftpPort2, server2, share2, fsPath2, fsPort2, ftpServer3, ftpPath3, ftpUser3, ftpPassword3, ftpPort3, server3, share3, fsPath3, fsPort3, ftpServer4, ftpPath4, ftpUser4, ftpPassword4, ftpPort4, server4, share4, fsPath4, fsPort4, null);
        }
        
        /// <remarks/>
        public void CreateStorageZoneInfoAsync(
                    System.Guid storageID, 
                    int storageZone, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4, 
                    object userState) {
            if ((this.CreateStorageZoneInfoOperationCompleted == null)) {
                this.CreateStorageZoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStorageZoneInfoOperationCompleted);
            }
            this.InvokeAsync("CreateStorageZoneInfo", new object[] {
                        storageID,
                        storageZone,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4}, this.CreateStorageZoneInfoOperationCompleted, userState);
        }
        
        private void OnCreateStorageZoneInfoOperationCompleted(object arg) {
            if ((this.CreateStorageZoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStorageZoneInfoCompleted(this, new CreateStorageZoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorageZoneInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorageZoneInfo(
                    System.Guid storageID, 
                    int storageZone1, 
                    int storageZone2, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            object[] results = this.Invoke("UpdateStorageZoneInfo", new object[] {
                        storageID,
                        storageZone1,
                        storageZone2,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorageZoneInfoAsync(
                    System.Guid storageID, 
                    int storageZone1, 
                    int storageZone2, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            this.UpdateStorageZoneInfoAsync(storageID, storageZone1, storageZone2, name, ftpServer1, ftpPath1, ftpUser1, ftpPassword1, ftpPort1, server1, share1, fsPath1, fsPort1, ftpServer2, ftpPath2, ftpUser2, ftpPassword2, ftpPort2, server2, share2, fsPath2, fsPort2, ftpServer3, ftpPath3, ftpUser3, ftpPassword3, ftpPort3, server3, share3, fsPath3, fsPort3, ftpServer4, ftpPath4, ftpUser4, ftpPassword4, ftpPort4, server4, share4, fsPath4, fsPort4, null);
        }
        
        /// <remarks/>
        public void UpdateStorageZoneInfoAsync(
                    System.Guid storageID, 
                    int storageZone1, 
                    int storageZone2, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4, 
                    object userState) {
            if ((this.UpdateStorageZoneInfoOperationCompleted == null)) {
                this.UpdateStorageZoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorageZoneInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateStorageZoneInfo", new object[] {
                        storageID,
                        storageZone1,
                        storageZone2,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4}, this.UpdateStorageZoneInfoOperationCompleted, userState);
        }
        
        private void OnUpdateStorageZoneInfoOperationCompleted(object arg) {
            if ((this.UpdateStorageZoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorageZoneInfoCompleted(this, new UpdateStorageZoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorageZoneInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorageZoneInfo(System.Guid storageID, int storageZone) {
            object[] results = this.Invoke("DeleteStorageZoneInfo", new object[] {
                        storageID,
                        storageZone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorageZoneInfoAsync(System.Guid storageID, int storageZone) {
            this.DeleteStorageZoneInfoAsync(storageID, storageZone, null);
        }
        
        /// <remarks/>
        public void DeleteStorageZoneInfoAsync(System.Guid storageID, int storageZone, object userState) {
            if ((this.DeleteStorageZoneInfoOperationCompleted == null)) {
                this.DeleteStorageZoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorageZoneInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteStorageZoneInfo", new object[] {
                        storageID,
                        storageZone}, this.DeleteStorageZoneInfoOperationCompleted, userState);
        }
        
        private void OnDeleteStorageZoneInfoOperationCompleted(object arg) {
            if ((this.DeleteStorageZoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorageZoneInfoCompleted(this, new DeleteStorageZoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserSpaceInObjByObjectID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserSpaceModel[] GetUserSpaceInObjByObjectID(System.Guid resourceID) {
            object[] results = this.Invoke("GetUserSpaceInObjByObjectID", new object[] {
                        resourceID});
            return ((UserSpaceModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSpaceInObjByObjectIDAsync(System.Guid resourceID) {
            this.GetUserSpaceInObjByObjectIDAsync(resourceID, null);
        }
        
        /// <remarks/>
        public void GetUserSpaceInObjByObjectIDAsync(System.Guid resourceID, object userState) {
            if ((this.GetUserSpaceInObjByObjectIDOperationCompleted == null)) {
                this.GetUserSpaceInObjByObjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSpaceInObjByObjectIDOperationCompleted);
            }
            this.InvokeAsync("GetUserSpaceInObjByObjectID", new object[] {
                        resourceID}, this.GetUserSpaceInObjByObjectIDOperationCompleted, userState);
        }
        
        private void OnGetUserSpaceInObjByObjectIDOperationCompleted(object arg) {
            if ((this.GetUserSpaceInObjByObjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSpaceInObjByObjectIDCompleted(this, new GetUserSpaceInObjByObjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserSpaceInObjByProgramLibID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserSpaceInObjByProgramLibID(System.Guid programLibID) {
            object[] results = this.Invoke("GetUserSpaceInObjByProgramLibID", new object[] {
                        programLibID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSpaceInObjByProgramLibIDAsync(System.Guid programLibID) {
            this.GetUserSpaceInObjByProgramLibIDAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetUserSpaceInObjByProgramLibIDAsync(System.Guid programLibID, object userState) {
            if ((this.GetUserSpaceInObjByProgramLibIDOperationCompleted == null)) {
                this.GetUserSpaceInObjByProgramLibIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSpaceInObjByProgramLibIDOperationCompleted);
            }
            this.InvokeAsync("GetUserSpaceInObjByProgramLibID", new object[] {
                        programLibID}, this.GetUserSpaceInObjByProgramLibIDOperationCompleted, userState);
        }
        
        private void OnGetUserSpaceInObjByProgramLibIDOperationCompleted(object arg) {
            if ((this.GetUserSpaceInObjByProgramLibIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSpaceInObjByProgramLibIDCompleted(this, new GetUserSpaceInObjByProgramLibIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUserSpaceInObj", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveUserSpaceInObj(UserSpaceModel[] userSpaceRemove, int type) {
            object[] results = this.Invoke("RemoveUserSpaceInObj", new object[] {
                        userSpaceRemove,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserSpaceInObjAsync(UserSpaceModel[] userSpaceRemove, int type) {
            this.RemoveUserSpaceInObjAsync(userSpaceRemove, type, null);
        }
        
        /// <remarks/>
        public void RemoveUserSpaceInObjAsync(UserSpaceModel[] userSpaceRemove, int type, object userState) {
            if ((this.RemoveUserSpaceInObjOperationCompleted == null)) {
                this.RemoveUserSpaceInObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserSpaceInObjOperationCompleted);
            }
            this.InvokeAsync("RemoveUserSpaceInObj", new object[] {
                        userSpaceRemove,
                        type}, this.RemoveUserSpaceInObjOperationCompleted, userState);
        }
        
        private void OnRemoveUserSpaceInObjOperationCompleted(object arg) {
            if ((this.RemoveUserSpaceInObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserSpaceInObjCompleted(this, new RemoveUserSpaceInObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserSpaceInObj", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserSpaceInObj(System.Guid resourceID, System.Guid[] userIDs, int freeSpaceMB, int freeSpaceHour, int type) {
            object[] results = this.Invoke("AddUserSpaceInObj", new object[] {
                        resourceID,
                        userIDs,
                        freeSpaceMB,
                        freeSpaceHour,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserSpaceInObjAsync(System.Guid resourceID, System.Guid[] userIDs, int freeSpaceMB, int freeSpaceHour, int type) {
            this.AddUserSpaceInObjAsync(resourceID, userIDs, freeSpaceMB, freeSpaceHour, type, null);
        }
        
        /// <remarks/>
        public void AddUserSpaceInObjAsync(System.Guid resourceID, System.Guid[] userIDs, int freeSpaceMB, int freeSpaceHour, int type, object userState) {
            if ((this.AddUserSpaceInObjOperationCompleted == null)) {
                this.AddUserSpaceInObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserSpaceInObjOperationCompleted);
            }
            this.InvokeAsync("AddUserSpaceInObj", new object[] {
                        resourceID,
                        userIDs,
                        freeSpaceMB,
                        freeSpaceHour,
                        type}, this.AddUserSpaceInObjOperationCompleted, userState);
        }
        
        private void OnAddUserSpaceInObjOperationCompleted(object arg) {
            if ((this.AddUserSpaceInObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserSpaceInObjCompleted(this, new AddUserSpaceInObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.CategoriesDataTable GetCategories(string systemKey) {
            object[] results = this.Invoke("GetCategories", new object[] {
                        systemKey});
            return ((BroadcastDS.CategoriesDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(string systemKey) {
            this.GetCategoriesAsync(systemKey, null);
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(string systemKey, object userState) {
            if ((this.GetCategoriesOperationCompleted == null)) {
                this.GetCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetCategories", new object[] {
                        systemKey}, this.GetCategoriesOperationCompleted, userState);
        }
        
        private void OnGetCategoriesOperationCompleted(object arg) {
            if ((this.GetCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategoryByCategoryID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BroadcastDS.CategoriesDataTable GetCategoryByCategoryID(System.Guid resourceID, string systemKey) {
            object[] results = this.Invoke("GetCategoryByCategoryID", new object[] {
                        resourceID,
                        systemKey});
            return ((BroadcastDS.CategoriesDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryByCategoryIDAsync(System.Guid resourceID, string systemKey) {
            this.GetCategoryByCategoryIDAsync(resourceID, systemKey, null);
        }
        
        /// <remarks/>
        public void GetCategoryByCategoryIDAsync(System.Guid resourceID, string systemKey, object userState) {
            if ((this.GetCategoryByCategoryIDOperationCompleted == null)) {
                this.GetCategoryByCategoryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryByCategoryIDOperationCompleted);
            }
            this.InvokeAsync("GetCategoryByCategoryID", new object[] {
                        resourceID,
                        systemKey}, this.GetCategoryByCategoryIDOperationCompleted, userState);
        }
        
        private void OnGetCategoryByCategoryIDOperationCompleted(object arg) {
            if ((this.GetCategoryByCategoryIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryByCategoryIDCompleted(this, new GetCategoryByCategoryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategoryPassSuperviseLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCategoryPassSuperviseLevel(System.Guid[] categoryIDs, int passSuperviseLevel, string systemKey) {
            object[] results = this.Invoke("UpdateCategoryPassSuperviseLevel", new object[] {
                        categoryIDs,
                        passSuperviseLevel,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryPassSuperviseLevelAsync(System.Guid[] categoryIDs, int passSuperviseLevel, string systemKey) {
            this.UpdateCategoryPassSuperviseLevelAsync(categoryIDs, passSuperviseLevel, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryPassSuperviseLevelAsync(System.Guid[] categoryIDs, int passSuperviseLevel, string systemKey, object userState) {
            if ((this.UpdateCategoryPassSuperviseLevelOperationCompleted == null)) {
                this.UpdateCategoryPassSuperviseLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryPassSuperviseLevelOperationCompleted);
            }
            this.InvokeAsync("UpdateCategoryPassSuperviseLevel", new object[] {
                        categoryIDs,
                        passSuperviseLevel,
                        systemKey}, this.UpdateCategoryPassSuperviseLevelOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryPassSuperviseLevelOperationCompleted(object arg) {
            if ((this.UpdateCategoryPassSuperviseLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryPassSuperviseLevelCompleted(this, new UpdateCategoryPassSuperviseLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategoryCopyToMam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCategoryCopyToMam(System.Guid[] categoryIDs, int copyToMam, string systemKey) {
            object[] results = this.Invoke("UpdateCategoryCopyToMam", new object[] {
                        categoryIDs,
                        copyToMam,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryCopyToMamAsync(System.Guid[] categoryIDs, int copyToMam, string systemKey) {
            this.UpdateCategoryCopyToMamAsync(categoryIDs, copyToMam, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryCopyToMamAsync(System.Guid[] categoryIDs, int copyToMam, string systemKey, object userState) {
            if ((this.UpdateCategoryCopyToMamOperationCompleted == null)) {
                this.UpdateCategoryCopyToMamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryCopyToMamOperationCompleted);
            }
            this.InvokeAsync("UpdateCategoryCopyToMam", new object[] {
                        categoryIDs,
                        copyToMam,
                        systemKey}, this.UpdateCategoryCopyToMamOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryCopyToMamOperationCompleted(object arg) {
            if ((this.UpdateCategoryCopyToMamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryCopyToMamCompleted(this, new UpdateCategoryCopyToMamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategoryPriority", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCategoryPriority(System.Guid[] categoryIDs, int priority, string systemKey) {
            object[] results = this.Invoke("UpdateCategoryPriority", new object[] {
                        categoryIDs,
                        priority,
                        systemKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryPriorityAsync(System.Guid[] categoryIDs, int priority, string systemKey) {
            this.UpdateCategoryPriorityAsync(categoryIDs, priority, systemKey, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryPriorityAsync(System.Guid[] categoryIDs, int priority, string systemKey, object userState) {
            if ((this.UpdateCategoryPriorityOperationCompleted == null)) {
                this.UpdateCategoryPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryPriorityOperationCompleted);
            }
            this.InvokeAsync("UpdateCategoryPriority", new object[] {
                        categoryIDs,
                        priority,
                        systemKey}, this.UpdateCategoryPriorityOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryPriorityOperationCompleted(object arg) {
            if ((this.UpdateCategoryPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryPriorityCompleted(this, new UpdateCategoryPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsNR1", RequestElementName="GetProgramLibsNR1", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibsNR1Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibsNR1Result")]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibsNR() {
            object[] results = this.Invoke("GetProgramLibsNR", new object[0]);
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsNRAsync() {
            this.GetProgramLibsNRAsync(null);
        }
        
        /// <remarks/>
        public void GetProgramLibsNRAsync(object userState) {
            if ((this.GetProgramLibsNROperationCompleted == null)) {
                this.GetProgramLibsNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsNROperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsNR", new object[0], this.GetProgramLibsNROperationCompleted, userState);
        }
        
        private void OnGetProgramLibsNROperationCompleted(object arg) {
            if ((this.GetProgramLibsNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsNRCompleted(this, new GetProgramLibsNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetProgramLibsNR1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsNR2", RequestElementName="GetProgramLibsNR2", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibsNR2Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibsNR2Result")]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibsNR(out int nextProgramLibNumber) {
            object[] results = this.Invoke("GetProgramLibsNR1", new object[0]);
            nextProgramLibNumber = ((int)(results[1]));
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsNR1Async() {
            this.GetProgramLibsNR1Async(null);
        }
        
        /// <remarks/>
        public void GetProgramLibsNR1Async(object userState) {
            if ((this.GetProgramLibsNR1OperationCompleted == null)) {
                this.GetProgramLibsNR1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsNR1OperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsNR1", new object[0], this.GetProgramLibsNR1OperationCompleted, userState);
        }
        
        private void OnGetProgramLibsNR1OperationCompleted(object arg) {
            if ((this.GetProgramLibsNR1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsNR1Completed(this, new GetProgramLibsNR1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibByIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibByIDNR(System.Guid programLibID) {
            object[] results = this.Invoke("GetProgramLibByIDNR", new object[] {
                        programLibID});
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibByIDNRAsync(System.Guid programLibID) {
            this.GetProgramLibByIDNRAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibByIDNRAsync(System.Guid programLibID, object userState) {
            if ((this.GetProgramLibByIDNROperationCompleted == null)) {
                this.GetProgramLibByIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibByIDNROperationCompleted);
            }
            this.InvokeAsync("GetProgramLibByIDNR", new object[] {
                        programLibID}, this.GetProgramLibByIDNROperationCompleted, userState);
        }
        
        private void OnGetProgramLibByIDNROperationCompleted(object arg) {
            if ((this.GetProgramLibByIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibByIDNRCompleted(this, new GetProgramLibByIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByProgramLibTypeNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibsByProgramLibTypeNR(int programLibType) {
            object[] results = this.Invoke("GetProgramLibsByProgramLibTypeNR", new object[] {
                        programLibType});
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByProgramLibTypeNRAsync(int programLibType) {
            this.GetProgramLibsByProgramLibTypeNRAsync(programLibType, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByProgramLibTypeNRAsync(int programLibType, object userState) {
            if ((this.GetProgramLibsByProgramLibTypeNROperationCompleted == null)) {
                this.GetProgramLibsByProgramLibTypeNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByProgramLibTypeNROperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByProgramLibTypeNR", new object[] {
                        programLibType}, this.GetProgramLibsByProgramLibTypeNROperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByProgramLibTypeNROperationCompleted(object arg) {
            if ((this.GetProgramLibsByProgramLibTypeNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByProgramLibTypeNRCompleted(this, new GetProgramLibsByProgramLibTypeNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByUserIDProgramLibTypeNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibsByUserIDProgramLibTypeNR(System.Guid userID, int programLibType) {
            object[] results = this.Invoke("GetProgramLibsByUserIDProgramLibTypeNR", new object[] {
                        userID,
                        programLibType});
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDProgramLibTypeNRAsync(System.Guid userID, int programLibType) {
            this.GetProgramLibsByUserIDProgramLibTypeNRAsync(userID, programLibType, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDProgramLibTypeNRAsync(System.Guid userID, int programLibType, object userState) {
            if ((this.GetProgramLibsByUserIDProgramLibTypeNROperationCompleted == null)) {
                this.GetProgramLibsByUserIDProgramLibTypeNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByUserIDProgramLibTypeNROperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByUserIDProgramLibTypeNR", new object[] {
                        userID,
                        programLibType}, this.GetProgramLibsByUserIDProgramLibTypeNROperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByUserIDProgramLibTypeNROperationCompleted(object arg) {
            if ((this.GetProgramLibsByUserIDProgramLibTypeNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByUserIDProgramLibTypeNRCompleted(this, new GetProgramLibsByUserIDProgramLibTypeNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByUserIDNR1", RequestElementName="GetProgramLibsByUserIDNR1", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibsByUserIDNR1Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibsByUserIDNR1Result")]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibsByUserIDNR(System.Guid userID) {
            object[] results = this.Invoke("GetProgramLibsByUserIDNR", new object[] {
                        userID});
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDNRAsync(System.Guid userID) {
            this.GetProgramLibsByUserIDNRAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDNRAsync(System.Guid userID, object userState) {
            if ((this.GetProgramLibsByUserIDNROperationCompleted == null)) {
                this.GetProgramLibsByUserIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByUserIDNROperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByUserIDNR", new object[] {
                        userID}, this.GetProgramLibsByUserIDNROperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByUserIDNROperationCompleted(object arg) {
            if ((this.GetProgramLibsByUserIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByUserIDNRCompleted(this, new GetProgramLibsByUserIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetProgramLibsByUserIDNR1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByUserIDNR2", RequestElementName="GetProgramLibsByUserIDNR2", RequestNamespace="http://tempuri.org/", ResponseElementName="GetProgramLibsByUserIDNR2Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetProgramLibsByUserIDNR2Result")]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibsByUserIDNR(System.Guid userID, out int nextProgramLibNumber) {
            object[] results = this.Invoke("GetProgramLibsByUserIDNR1", new object[] {
                        userID});
            nextProgramLibNumber = ((int)(results[1]));
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDNR1Async(System.Guid userID) {
            this.GetProgramLibsByUserIDNR1Async(userID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByUserIDNR1Async(System.Guid userID, object userState) {
            if ((this.GetProgramLibsByUserIDNR1OperationCompleted == null)) {
                this.GetProgramLibsByUserIDNR1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByUserIDNR1OperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByUserIDNR1", new object[] {
                        userID}, this.GetProgramLibsByUserIDNR1OperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByUserIDNR1OperationCompleted(object arg) {
            if ((this.GetProgramLibsByUserIDNR1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByUserIDNR1Completed(this, new GetProgramLibsByUserIDNR1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLibsByStorageIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.ProgramLibNRDataTable GetProgramLibsByStorageIDNR(System.Guid storageID) {
            object[] results = this.Invoke("GetProgramLibsByStorageIDNR", new object[] {
                        storageID});
            return ((NewsRoomDS.ProgramLibNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibsByStorageIDNRAsync(System.Guid storageID) {
            this.GetProgramLibsByStorageIDNRAsync(storageID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibsByStorageIDNRAsync(System.Guid storageID, object userState) {
            if ((this.GetProgramLibsByStorageIDNROperationCompleted == null)) {
                this.GetProgramLibsByStorageIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibsByStorageIDNROperationCompleted);
            }
            this.InvokeAsync("GetProgramLibsByStorageIDNR", new object[] {
                        storageID}, this.GetProgramLibsByStorageIDNROperationCompleted, userState);
        }
        
        private void OnGetProgramLibsByStorageIDNROperationCompleted(object arg) {
            if ((this.GetProgramLibsByStorageIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibsByStorageIDNRCompleted(this, new GetProgramLibsByStorageIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibNameNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibNameNR(string programLibName) {
            object[] results = this.Invoke("IsExistProgramLibNameNR", new object[] {
                        programLibName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibNameNRAsync(string programLibName) {
            this.IsExistProgramLibNameNRAsync(programLibName, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibNameNRAsync(string programLibName, object userState) {
            if ((this.IsExistProgramLibNameNROperationCompleted == null)) {
                this.IsExistProgramLibNameNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibNameNROperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibNameNR", new object[] {
                        programLibName}, this.IsExistProgramLibNameNROperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibNameNROperationCompleted(object arg) {
            if ((this.IsExistProgramLibNameNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibNameNRCompleted(this, new IsExistProgramLibNameNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibTypeEqualNR1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibTypeEqualNR1() {
            object[] results = this.Invoke("IsExistProgramLibTypeEqualNR1", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibTypeEqualNR1Async() {
            this.IsExistProgramLibTypeEqualNR1Async(null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibTypeEqualNR1Async(object userState) {
            if ((this.IsExistProgramLibTypeEqualNR1OperationCompleted == null)) {
                this.IsExistProgramLibTypeEqualNR1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibTypeEqualNR1OperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibTypeEqualNR1", new object[0], this.IsExistProgramLibTypeEqualNR1OperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibTypeEqualNR1OperationCompleted(object arg) {
            if ((this.IsExistProgramLibTypeEqualNR1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibTypeEqualNR1Completed(this, new IsExistProgramLibTypeEqualNR1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibShortNameNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibShortNameNR(string shortName, System.Guid programLibID) {
            object[] results = this.Invoke("IsExistProgramLibShortNameNR", new object[] {
                        shortName,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibShortNameNRAsync(string shortName, System.Guid programLibID) {
            this.IsExistProgramLibShortNameNRAsync(shortName, programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibShortNameNRAsync(string shortName, System.Guid programLibID, object userState) {
            if ((this.IsExistProgramLibShortNameNROperationCompleted == null)) {
                this.IsExistProgramLibShortNameNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibShortNameNROperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibShortNameNR", new object[] {
                        shortName,
                        programLibID}, this.IsExistProgramLibShortNameNROperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibShortNameNROperationCompleted(object arg) {
            if ((this.IsExistProgramLibShortNameNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibShortNameNRCompleted(this, new IsExistProgramLibShortNameNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibNumberNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibNumberNR(int programLibNumber) {
            object[] results = this.Invoke("IsExistProgramLibNumberNR", new object[] {
                        programLibNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibNumberNRAsync(int programLibNumber) {
            this.IsExistProgramLibNumberNRAsync(programLibNumber, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibNumberNRAsync(int programLibNumber, object userState) {
            if ((this.IsExistProgramLibNumberNROperationCompleted == null)) {
                this.IsExistProgramLibNumberNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibNumberNROperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibNumberNR", new object[] {
                        programLibNumber}, this.IsExistProgramLibNumberNROperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibNumberNROperationCompleted(object arg) {
            if ((this.IsExistProgramLibNumberNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibNumberNRCompleted(this, new IsExistProgramLibNumberNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProgramLibNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateProgramLibNR(
                    System.Guid programLibID, 
                    string programLibName, 
                    string shortName, 
                    int programLibNum, 
                    System.Guid creatorID, 
                    string creatorName, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    int programLibType, 
                    System.Guid systemID, 
                    int resourceCategory, 
                    System.Guid createUserID, 
                    string createUserName) {
            object[] results = this.Invoke("CreateProgramLibNR", new object[] {
                        programLibID,
                        programLibName,
                        shortName,
                        programLibNum,
                        creatorID,
                        creatorName,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        programLibType,
                        systemID,
                        resourceCategory,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProgramLibNRAsync(
                    System.Guid programLibID, 
                    string programLibName, 
                    string shortName, 
                    int programLibNum, 
                    System.Guid creatorID, 
                    string creatorName, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    int programLibType, 
                    System.Guid systemID, 
                    int resourceCategory, 
                    System.Guid createUserID, 
                    string createUserName) {
            this.CreateProgramLibNRAsync(programLibID, programLibName, shortName, programLibNum, creatorID, creatorName, dbServer, dbServer_Bak, dbName, dbName_Bak, maxSpaceMB, freeSpaceMB, maxSpaceHour, freeSpaceHour, programLibType, systemID, resourceCategory, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateProgramLibNRAsync(
                    System.Guid programLibID, 
                    string programLibName, 
                    string shortName, 
                    int programLibNum, 
                    System.Guid creatorID, 
                    string creatorName, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    int programLibType, 
                    System.Guid systemID, 
                    int resourceCategory, 
                    System.Guid createUserID, 
                    string createUserName, 
                    object userState) {
            if ((this.CreateProgramLibNROperationCompleted == null)) {
                this.CreateProgramLibNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProgramLibNROperationCompleted);
            }
            this.InvokeAsync("CreateProgramLibNR", new object[] {
                        programLibID,
                        programLibName,
                        shortName,
                        programLibNum,
                        creatorID,
                        creatorName,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        programLibType,
                        systemID,
                        resourceCategory,
                        createUserID,
                        createUserName}, this.CreateProgramLibNROperationCompleted, userState);
        }
        
        private void OnCreateProgramLibNROperationCompleted(object arg) {
            if ((this.CreateProgramLibNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProgramLibNRCompleted(this, new CreateProgramLibNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProgramLibNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProgramLibNR(
                    System.Guid programLibID, 
                    string programLibNameNew, 
                    string programLibNameOld, 
                    string shortName, 
                    int programLibNum, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            object[] results = this.Invoke("UpdateProgramLibNR", new object[] {
                        programLibID,
                        programLibNameNew,
                        programLibNameOld,
                        shortName,
                        programLibNum,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgramLibNRAsync(
                    System.Guid programLibID, 
                    string programLibNameNew, 
                    string programLibNameOld, 
                    string shortName, 
                    int programLibNum, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            this.UpdateProgramLibNRAsync(programLibID, programLibNameNew, programLibNameOld, shortName, programLibNum, dbServer, dbServer_Bak, dbName, dbName_Bak, maxSpaceMB2, freeSpaceMB2, maxSpaceHour2, freeSpaceHour2, modifyUserID, modifyUserName, maxSpaceMB1, maxSpaceHour1, null);
        }
        
        /// <remarks/>
        public void UpdateProgramLibNRAsync(
                    System.Guid programLibID, 
                    string programLibNameNew, 
                    string programLibNameOld, 
                    string shortName, 
                    int programLibNum, 
                    string dbServer, 
                    string dbServer_Bak, 
                    string dbName, 
                    string dbName_Bak, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1, 
                    object userState) {
            if ((this.UpdateProgramLibNROperationCompleted == null)) {
                this.UpdateProgramLibNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgramLibNROperationCompleted);
            }
            this.InvokeAsync("UpdateProgramLibNR", new object[] {
                        programLibID,
                        programLibNameNew,
                        programLibNameOld,
                        shortName,
                        programLibNum,
                        dbServer,
                        dbServer_Bak,
                        dbName,
                        dbName_Bak,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1}, this.UpdateProgramLibNROperationCompleted, userState);
        }
        
        private void OnUpdateProgramLibNROperationCompleted(object arg) {
            if ((this.UpdateProgramLibNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgramLibNRCompleted(this, new UpdateProgramLibNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProgramLibNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProgramLibNR(System.Guid programLibID) {
            object[] results = this.Invoke("DeleteProgramLibNR", new object[] {
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramLibNRAsync(System.Guid programLibID) {
            this.DeleteProgramLibNRAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void DeleteProgramLibNRAsync(System.Guid programLibID, object userState) {
            if ((this.DeleteProgramLibNROperationCompleted == null)) {
                this.DeleteProgramLibNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramLibNROperationCompleted);
            }
            this.InvokeAsync("DeleteProgramLibNR", new object[] {
                        programLibID}, this.DeleteProgramLibNROperationCompleted, userState);
        }
        
        private void OnDeleteProgramLibNROperationCompleted(object arg) {
            if ((this.DeleteProgramLibNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramLibNRCompleted(this, new DeleteProgramLibNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramLib2StoragesNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProgramLib2StorageModel[] GetProgramLib2StoragesNR(System.Guid programLibID) {
            object[] results = this.Invoke("GetProgramLib2StoragesNR", new object[] {
                        programLibID});
            return ((ProgramLib2StorageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLib2StoragesNRAsync(System.Guid programLibID) {
            this.GetProgramLib2StoragesNRAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetProgramLib2StoragesNRAsync(System.Guid programLibID, object userState) {
            if ((this.GetProgramLib2StoragesNROperationCompleted == null)) {
                this.GetProgramLib2StoragesNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLib2StoragesNROperationCompleted);
            }
            this.InvokeAsync("GetProgramLib2StoragesNR", new object[] {
                        programLibID}, this.GetProgramLib2StoragesNROperationCompleted, userState);
        }
        
        private void OnGetProgramLib2StoragesNROperationCompleted(object arg) {
            if ((this.GetProgramLib2StoragesNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLib2StoragesNRCompleted(this, new GetProgramLib2StoragesNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProgramLib2StoragesNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProgramLib2StoragesNR(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, bool isCutSpace) {
            object[] results = this.Invoke("UpdateProgramLib2StoragesNR", new object[] {
                        newP2S,
                        programLibID,
                        isCutSpace});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgramLib2StoragesNRAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, bool isCutSpace) {
            this.UpdateProgramLib2StoragesNRAsync(newP2S, programLibID, isCutSpace, null);
        }
        
        /// <remarks/>
        public void UpdateProgramLib2StoragesNRAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, bool isCutSpace, object userState) {
            if ((this.UpdateProgramLib2StoragesNROperationCompleted == null)) {
                this.UpdateProgramLib2StoragesNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgramLib2StoragesNROperationCompleted);
            }
            this.InvokeAsync("UpdateProgramLib2StoragesNR", new object[] {
                        newP2S,
                        programLibID,
                        isCutSpace}, this.UpdateProgramLib2StoragesNROperationCompleted, userState);
        }
        
        private void OnUpdateProgramLib2StoragesNROperationCompleted(object arg) {
            if ((this.UpdateProgramLib2StoragesNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgramLib2StoragesNRCompleted(this, new UpdateProgramLib2StoragesNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProgramLib2StoragesNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProgramLib2StoragesNR(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, int deleteIndex) {
            object[] results = this.Invoke("DeleteProgramLib2StoragesNR", new object[] {
                        newP2S,
                        programLibID,
                        deleteIndex});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramLib2StoragesNRAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, int deleteIndex) {
            this.DeleteProgramLib2StoragesNRAsync(newP2S, programLibID, deleteIndex, null);
        }
        
        /// <remarks/>
        public void DeleteProgramLib2StoragesNRAsync(ProgramLib2StorageModel[] newP2S, System.Guid programLibID, int deleteIndex, object userState) {
            if ((this.DeleteProgramLib2StoragesNROperationCompleted == null)) {
                this.DeleteProgramLib2StoragesNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramLib2StoragesNROperationCompleted);
            }
            this.InvokeAsync("DeleteProgramLib2StoragesNR", new object[] {
                        newP2S,
                        programLibID,
                        deleteIndex}, this.DeleteProgramLib2StoragesNROperationCompleted, userState);
        }
        
        private void OnDeleteProgramLib2StoragesNROperationCompleted(object arg) {
            if ((this.DeleteProgramLib2StoragesNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramLib2StoragesNRCompleted(this, new DeleteProgramLib2StoragesNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramIDInLibStoragesNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramIDInLibStoragesNR(System.Guid programLibID) {
            object[] results = this.Invoke("IsExistProgramIDInLibStoragesNR", new object[] {
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramIDInLibStoragesNRAsync(System.Guid programLibID) {
            this.IsExistProgramIDInLibStoragesNRAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistProgramIDInLibStoragesNRAsync(System.Guid programLibID, object userState) {
            if ((this.IsExistProgramIDInLibStoragesNROperationCompleted == null)) {
                this.IsExistProgramIDInLibStoragesNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramIDInLibStoragesNROperationCompleted);
            }
            this.InvokeAsync("IsExistProgramIDInLibStoragesNR", new object[] {
                        programLibID}, this.IsExistProgramIDInLibStoragesNROperationCompleted, userState);
        }
        
        private void OnIsExistProgramIDInLibStoragesNROperationCompleted(object arg) {
            if ((this.IsExistProgramIDInLibStoragesNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramIDInLibStoragesNRCompleted(this, new IsExistProgramIDInLibStoragesNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageIDInLibStoragesNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageIDInLibStoragesNR(System.Guid storageID) {
            object[] results = this.Invoke("IsExistStorageIDInLibStoragesNR", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageIDInLibStoragesNRAsync(System.Guid storageID) {
            this.IsExistStorageIDInLibStoragesNRAsync(storageID, null);
        }
        
        /// <remarks/>
        public void IsExistStorageIDInLibStoragesNRAsync(System.Guid storageID, object userState) {
            if ((this.IsExistStorageIDInLibStoragesNROperationCompleted == null)) {
                this.IsExistStorageIDInLibStoragesNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageIDInLibStoragesNROperationCompleted);
            }
            this.InvokeAsync("IsExistStorageIDInLibStoragesNR", new object[] {
                        storageID}, this.IsExistStorageIDInLibStoragesNROperationCompleted, userState);
        }
        
        private void OnIsExistStorageIDInLibStoragesNROperationCompleted(object arg) {
            if ((this.IsExistStorageIDInLibStoragesNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageIDInLibStoragesNRCompleted(this, new IsExistStorageIDInLibStoragesNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFoldersNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.FolderNRDataTable GetFoldersNR() {
            object[] results = this.Invoke("GetFoldersNR", new object[0]);
            return ((NewsRoomDS.FolderNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersNRAsync() {
            this.GetFoldersNRAsync(null);
        }
        
        /// <remarks/>
        public void GetFoldersNRAsync(object userState) {
            if ((this.GetFoldersNROperationCompleted == null)) {
                this.GetFoldersNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersNROperationCompleted);
            }
            this.InvokeAsync("GetFoldersNR", new object[0], this.GetFoldersNROperationCompleted, userState);
        }
        
        private void OnGetFoldersNROperationCompleted(object arg) {
            if ((this.GetFoldersNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersNRCompleted(this, new GetFoldersNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFolderByFolderIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.FolderNRDataTable GetFolderByFolderIDNR(System.Guid folderID) {
            object[] results = this.Invoke("GetFolderByFolderIDNR", new object[] {
                        folderID});
            return ((NewsRoomDS.FolderNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderByFolderIDNRAsync(System.Guid folderID) {
            this.GetFolderByFolderIDNRAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetFolderByFolderIDNRAsync(System.Guid folderID, object userState) {
            if ((this.GetFolderByFolderIDNROperationCompleted == null)) {
                this.GetFolderByFolderIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderByFolderIDNROperationCompleted);
            }
            this.InvokeAsync("GetFolderByFolderIDNR", new object[] {
                        folderID}, this.GetFolderByFolderIDNROperationCompleted, userState);
        }
        
        private void OnGetFolderByFolderIDNROperationCompleted(object arg) {
            if ((this.GetFolderByFolderIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderByFolderIDNRCompleted(this, new GetFolderByFolderIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFoldersByUserIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.FolderNRDataTable GetFoldersByUserIDNR(System.Guid userID) {
            object[] results = this.Invoke("GetFoldersByUserIDNR", new object[] {
                        userID});
            return ((NewsRoomDS.FolderNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByUserIDNRAsync(System.Guid userID) {
            this.GetFoldersByUserIDNRAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetFoldersByUserIDNRAsync(System.Guid userID, object userState) {
            if ((this.GetFoldersByUserIDNROperationCompleted == null)) {
                this.GetFoldersByUserIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByUserIDNROperationCompleted);
            }
            this.InvokeAsync("GetFoldersByUserIDNR", new object[] {
                        userID}, this.GetFoldersByUserIDNROperationCompleted, userState);
        }
        
        private void OnGetFoldersByUserIDNROperationCompleted(object arg) {
            if ((this.GetFoldersByUserIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByUserIDNRCompleted(this, new GetFoldersByUserIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFoldersByProgramLibIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.FolderNRDataTable GetFoldersByProgramLibIDNR(System.Guid programLibID, int folderCategory) {
            object[] results = this.Invoke("GetFoldersByProgramLibIDNR", new object[] {
                        programLibID,
                        folderCategory});
            return ((NewsRoomDS.FolderNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDNRAsync(System.Guid programLibID, int folderCategory) {
            this.GetFoldersByProgramLibIDNRAsync(programLibID, folderCategory, null);
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDNRAsync(System.Guid programLibID, int folderCategory, object userState) {
            if ((this.GetFoldersByProgramLibIDNROperationCompleted == null)) {
                this.GetFoldersByProgramLibIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByProgramLibIDNROperationCompleted);
            }
            this.InvokeAsync("GetFoldersByProgramLibIDNR", new object[] {
                        programLibID,
                        folderCategory}, this.GetFoldersByProgramLibIDNROperationCompleted, userState);
        }
        
        private void OnGetFoldersByProgramLibIDNROperationCompleted(object arg) {
            if ((this.GetFoldersByProgramLibIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByProgramLibIDNRCompleted(this, new GetFoldersByProgramLibIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFoldersByProgramLibIDUserIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.FolderNRDataTable GetFoldersByProgramLibIDUserIDNR(System.Guid programLibID, System.Guid userID, int folderCategory) {
            object[] results = this.Invoke("GetFoldersByProgramLibIDUserIDNR", new object[] {
                        programLibID,
                        userID,
                        folderCategory});
            return ((NewsRoomDS.FolderNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDUserIDNRAsync(System.Guid programLibID, System.Guid userID, int folderCategory) {
            this.GetFoldersByProgramLibIDUserIDNRAsync(programLibID, userID, folderCategory, null);
        }
        
        /// <remarks/>
        public void GetFoldersByProgramLibIDUserIDNRAsync(System.Guid programLibID, System.Guid userID, int folderCategory, object userState) {
            if ((this.GetFoldersByProgramLibIDUserIDNROperationCompleted == null)) {
                this.GetFoldersByProgramLibIDUserIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByProgramLibIDUserIDNROperationCompleted);
            }
            this.InvokeAsync("GetFoldersByProgramLibIDUserIDNR", new object[] {
                        programLibID,
                        userID,
                        folderCategory}, this.GetFoldersByProgramLibIDUserIDNROperationCompleted, userState);
        }
        
        private void OnGetFoldersByProgramLibIDUserIDNROperationCompleted(object arg) {
            if ((this.GetFoldersByProgramLibIDUserIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByProgramLibIDUserIDNRCompleted(this, new GetFoldersByProgramLibIDUserIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistProgramLibIDInfolderNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistProgramLibIDInfolderNR(System.Guid programLibID) {
            object[] results = this.Invoke("IsExistProgramLibIDInfolderNR", new object[] {
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistProgramLibIDInfolderNRAsync(System.Guid programLibID) {
            this.IsExistProgramLibIDInfolderNRAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistProgramLibIDInfolderNRAsync(System.Guid programLibID, object userState) {
            if ((this.IsExistProgramLibIDInfolderNROperationCompleted == null)) {
                this.IsExistProgramLibIDInfolderNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistProgramLibIDInfolderNROperationCompleted);
            }
            this.InvokeAsync("IsExistProgramLibIDInfolderNR", new object[] {
                        programLibID}, this.IsExistProgramLibIDInfolderNROperationCompleted, userState);
        }
        
        private void OnIsExistProgramLibIDInfolderNROperationCompleted(object arg) {
            if ((this.IsExistProgramLibIDInfolderNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistProgramLibIDInfolderNRCompleted(this, new IsExistProgramLibIDInfolderNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistFolderNameNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistFolderNameNR(string folderName, System.Guid programLibID) {
            object[] results = this.Invoke("IsExistFolderNameNR", new object[] {
                        folderName,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistFolderNameNRAsync(string folderName, System.Guid programLibID) {
            this.IsExistFolderNameNRAsync(folderName, programLibID, null);
        }
        
        /// <remarks/>
        public void IsExistFolderNameNRAsync(string folderName, System.Guid programLibID, object userState) {
            if ((this.IsExistFolderNameNROperationCompleted == null)) {
                this.IsExistFolderNameNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistFolderNameNROperationCompleted);
            }
            this.InvokeAsync("IsExistFolderNameNR", new object[] {
                        folderName,
                        programLibID}, this.IsExistFolderNameNROperationCompleted, userState);
        }
        
        private void OnIsExistFolderNameNROperationCompleted(object arg) {
            if ((this.IsExistFolderNameNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistFolderNameNRCompleted(this, new IsExistFolderNameNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistFolderShortNameNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistFolderShortNameNR(string shortName, System.Guid folderID) {
            object[] results = this.Invoke("IsExistFolderShortNameNR", new object[] {
                        shortName,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistFolderShortNameNRAsync(string shortName, System.Guid folderID) {
            this.IsExistFolderShortNameNRAsync(shortName, folderID, null);
        }
        
        /// <remarks/>
        public void IsExistFolderShortNameNRAsync(string shortName, System.Guid folderID, object userState) {
            if ((this.IsExistFolderShortNameNROperationCompleted == null)) {
                this.IsExistFolderShortNameNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistFolderShortNameNROperationCompleted);
            }
            this.InvokeAsync("IsExistFolderShortNameNR", new object[] {
                        shortName,
                        folderID}, this.IsExistFolderShortNameNROperationCompleted, userState);
        }
        
        private void OnIsExistFolderShortNameNROperationCompleted(object arg) {
            if ((this.IsExistFolderShortNameNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistFolderShortNameNRCompleted(this, new IsExistFolderShortNameNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistFolderTelephoneNumberNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistFolderTelephoneNumberNR(string telephoneNumber, System.Guid folderID) {
            object[] results = this.Invoke("IsExistFolderTelephoneNumberNR", new object[] {
                        telephoneNumber,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistFolderTelephoneNumberNRAsync(string telephoneNumber, System.Guid folderID) {
            this.IsExistFolderTelephoneNumberNRAsync(telephoneNumber, folderID, null);
        }
        
        /// <remarks/>
        public void IsExistFolderTelephoneNumberNRAsync(string telephoneNumber, System.Guid folderID, object userState) {
            if ((this.IsExistFolderTelephoneNumberNROperationCompleted == null)) {
                this.IsExistFolderTelephoneNumberNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistFolderTelephoneNumberNROperationCompleted);
            }
            this.InvokeAsync("IsExistFolderTelephoneNumberNR", new object[] {
                        telephoneNumber,
                        folderID}, this.IsExistFolderTelephoneNumberNROperationCompleted, userState);
        }
        
        private void OnIsExistFolderTelephoneNumberNROperationCompleted(object arg) {
            if ((this.IsExistFolderTelephoneNumberNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistFolderTelephoneNumberNRCompleted(this, new IsExistFolderTelephoneNumberNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateFolderNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateFolderNR(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    System.Guid programLibID, 
                    short folderType, 
                    System.Guid parentID, 
                    System.Guid rootID, 
                    System.Guid creatorID, 
                    string creatorName, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid systemID, 
                    int resourceCategory1, 
                    int resourceCategory2, 
                    string resourceCategoryName2, 
                    System.Guid createUserID, 
                    string createUserName) {
            object[] results = this.Invoke("CreateFolderNR", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        programLibID,
                        folderType,
                        parentID,
                        rootID,
                        creatorID,
                        creatorName,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        systemID,
                        resourceCategory1,
                        resourceCategory2,
                        resourceCategoryName2,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFolderNRAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    System.Guid programLibID, 
                    short folderType, 
                    System.Guid parentID, 
                    System.Guid rootID, 
                    System.Guid creatorID, 
                    string creatorName, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid systemID, 
                    int resourceCategory1, 
                    int resourceCategory2, 
                    string resourceCategoryName2, 
                    System.Guid createUserID, 
                    string createUserName) {
            this.CreateFolderNRAsync(folderID, folderName, shortName, programLibID, folderType, parentID, rootID, creatorID, creatorName, maxSpaceMB, freeSpaceMB, maxSpaceHour, freeSpaceHour, shared, superviseLevel, materialAccess, materialMB, materialHour, projectAccess, projectMB, projectHour, telephoneAccess, telephoneMB, telephoneHour, telephoneNumber, isNeedExport, keepDays, systemID, resourceCategory1, resourceCategory2, resourceCategoryName2, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateFolderNRAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    System.Guid programLibID, 
                    short folderType, 
                    System.Guid parentID, 
                    System.Guid rootID, 
                    System.Guid creatorID, 
                    string creatorName, 
                    int maxSpaceMB, 
                    int freeSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceHour, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid systemID, 
                    int resourceCategory1, 
                    int resourceCategory2, 
                    string resourceCategoryName2, 
                    System.Guid createUserID, 
                    string createUserName, 
                    object userState) {
            if ((this.CreateFolderNROperationCompleted == null)) {
                this.CreateFolderNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderNROperationCompleted);
            }
            this.InvokeAsync("CreateFolderNR", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        programLibID,
                        folderType,
                        parentID,
                        rootID,
                        creatorID,
                        creatorName,
                        maxSpaceMB,
                        freeSpaceMB,
                        maxSpaceHour,
                        freeSpaceHour,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        systemID,
                        resourceCategory1,
                        resourceCategory2,
                        resourceCategoryName2,
                        createUserID,
                        createUserName}, this.CreateFolderNROperationCompleted, userState);
        }
        
        private void OnCreateFolderNROperationCompleted(object arg) {
            if ((this.CreateFolderNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderNRCompleted(this, new CreateFolderNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFolderNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFolderNR(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    short folderType, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid parentID, 
                    System.Guid programLibID, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            object[] results = this.Invoke("UpdateFolderNR", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        folderType,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        parentID,
                        programLibID,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderNRAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    short folderType, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid parentID, 
                    System.Guid programLibID, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1) {
            this.UpdateFolderNRAsync(folderID, folderName, shortName, folderType, maxSpaceMB2, freeSpaceMB2, maxSpaceHour2, freeSpaceHour2, parentID, programLibID, shared, superviseLevel, materialAccess, materialMB, materialHour, projectAccess, projectMB, projectHour, telephoneAccess, telephoneMB, telephoneHour, telephoneNumber, isNeedExport, keepDays, modifyUserID, modifyUserName, maxSpaceMB1, maxSpaceHour1, null);
        }
        
        /// <remarks/>
        public void UpdateFolderNRAsync(
                    System.Guid folderID, 
                    string folderName, 
                    string shortName, 
                    short folderType, 
                    int maxSpaceMB2, 
                    int freeSpaceMB2, 
                    int maxSpaceHour2, 
                    int freeSpaceHour2, 
                    System.Guid parentID, 
                    System.Guid programLibID, 
                    bool shared, 
                    short superviseLevel, 
                    bool materialAccess, 
                    int materialMB, 
                    int materialHour, 
                    bool projectAccess, 
                    int projectMB, 
                    int projectHour, 
                    bool telephoneAccess, 
                    int telephoneMB, 
                    int telephoneHour, 
                    string telephoneNumber, 
                    bool isNeedExport, 
                    int keepDays, 
                    System.Guid modifyUserID, 
                    string modifyUserName, 
                    int maxSpaceMB1, 
                    int maxSpaceHour1, 
                    object userState) {
            if ((this.UpdateFolderNROperationCompleted == null)) {
                this.UpdateFolderNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderNROperationCompleted);
            }
            this.InvokeAsync("UpdateFolderNR", new object[] {
                        folderID,
                        folderName,
                        shortName,
                        folderType,
                        maxSpaceMB2,
                        freeSpaceMB2,
                        maxSpaceHour2,
                        freeSpaceHour2,
                        parentID,
                        programLibID,
                        shared,
                        superviseLevel,
                        materialAccess,
                        materialMB,
                        materialHour,
                        projectAccess,
                        projectMB,
                        projectHour,
                        telephoneAccess,
                        telephoneMB,
                        telephoneHour,
                        telephoneNumber,
                        isNeedExport,
                        keepDays,
                        modifyUserID,
                        modifyUserName,
                        maxSpaceMB1,
                        maxSpaceHour1}, this.UpdateFolderNROperationCompleted, userState);
        }
        
        private void OnUpdateFolderNROperationCompleted(object arg) {
            if ((this.UpdateFolderNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderNRCompleted(this, new UpdateFolderNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFolderNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFolderNR(System.Guid folderID, System.Guid folderParentID, int folderMaxSpaceMB, int folderMaxSpaceHour, System.Guid programLibID) {
            object[] results = this.Invoke("DeleteFolderNR", new object[] {
                        folderID,
                        folderParentID,
                        folderMaxSpaceMB,
                        folderMaxSpaceHour,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFolderNRAsync(System.Guid folderID, System.Guid folderParentID, int folderMaxSpaceMB, int folderMaxSpaceHour, System.Guid programLibID) {
            this.DeleteFolderNRAsync(folderID, folderParentID, folderMaxSpaceMB, folderMaxSpaceHour, programLibID, null);
        }
        
        /// <remarks/>
        public void DeleteFolderNRAsync(System.Guid folderID, System.Guid folderParentID, int folderMaxSpaceMB, int folderMaxSpaceHour, System.Guid programLibID, object userState) {
            if ((this.DeleteFolderNROperationCompleted == null)) {
                this.DeleteFolderNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderNROperationCompleted);
            }
            this.InvokeAsync("DeleteFolderNR", new object[] {
                        folderID,
                        folderParentID,
                        folderMaxSpaceMB,
                        folderMaxSpaceHour,
                        programLibID}, this.DeleteFolderNROperationCompleted, userState);
        }
        
        private void OnDeleteFolderNROperationCompleted(object arg) {
            if ((this.DeleteFolderNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderNRCompleted(this, new DeleteFolderNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorages4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.StoragesNRDataTable GetStorages4NewsRoom() {
            object[] results = this.Invoke("GetStorages4NewsRoom", new object[0]);
            return ((NewsRoomDS.StoragesNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorages4NewsRoomAsync() {
            this.GetStorages4NewsRoomAsync(null);
        }
        
        /// <remarks/>
        public void GetStorages4NewsRoomAsync(object userState) {
            if ((this.GetStorages4NewsRoomOperationCompleted == null)) {
                this.GetStorages4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorages4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("GetStorages4NewsRoom", new object[0], this.GetStorages4NewsRoomOperationCompleted, userState);
        }
        
        private void OnGetStorages4NewsRoomOperationCompleted(object arg) {
            if ((this.GetStorages4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorages4NewsRoomCompleted(this, new GetStorages4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStoragesByProgramLibID4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.StoragesNRDataTable GetStoragesByProgramLibID4NewsRoom(System.Guid programLibID) {
            object[] results = this.Invoke("GetStoragesByProgramLibID4NewsRoom", new object[] {
                        programLibID});
            return ((NewsRoomDS.StoragesNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoragesByProgramLibID4NewsRoomAsync(System.Guid programLibID) {
            this.GetStoragesByProgramLibID4NewsRoomAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetStoragesByProgramLibID4NewsRoomAsync(System.Guid programLibID, object userState) {
            if ((this.GetStoragesByProgramLibID4NewsRoomOperationCompleted == null)) {
                this.GetStoragesByProgramLibID4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoragesByProgramLibID4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("GetStoragesByProgramLibID4NewsRoom", new object[] {
                        programLibID}, this.GetStoragesByProgramLibID4NewsRoomOperationCompleted, userState);
        }
        
        private void OnGetStoragesByProgramLibID4NewsRoomOperationCompleted(object arg) {
            if ((this.GetStoragesByProgramLibID4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoragesByProgramLibID4NewsRoomCompleted(this, new GetStoragesByProgramLibID4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageName4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageName4NewsRoom(string storageName, System.Guid storageID) {
            object[] results = this.Invoke("IsExistStorageName4NewsRoom", new object[] {
                        storageName,
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageName4NewsRoomAsync(string storageName, System.Guid storageID) {
            this.IsExistStorageName4NewsRoomAsync(storageName, storageID, null);
        }
        
        /// <remarks/>
        public void IsExistStorageName4NewsRoomAsync(string storageName, System.Guid storageID, object userState) {
            if ((this.IsExistStorageName4NewsRoomOperationCompleted == null)) {
                this.IsExistStorageName4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageName4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageName4NewsRoom", new object[] {
                        storageName,
                        storageID}, this.IsExistStorageName4NewsRoomOperationCompleted, userState);
        }
        
        private void OnIsExistStorageName4NewsRoomOperationCompleted(object arg) {
            if ((this.IsExistStorageName4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageName4NewsRoomCompleted(this, new IsExistStorageName4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStorage4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStorage4NewsRoom(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            object[] results = this.Invoke("CreateStorage4NewsRoom", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStorage4NewsRoomAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            this.CreateStorage4NewsRoomAsync(storageID, storageName, maxSpaceMB, maxSpaceHour, freeSpaceMB, freeSpaceHour, server, share, ftpServer, ftpPath, ftpUser, ftpPassword, ftpPort, publicServer, publicPort, publicUser, publicPassword, null);
        }
        
        /// <remarks/>
        public void CreateStorage4NewsRoomAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword, 
                    object userState) {
            if ((this.CreateStorage4NewsRoomOperationCompleted == null)) {
                this.CreateStorage4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStorage4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("CreateStorage4NewsRoom", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword}, this.CreateStorage4NewsRoomOperationCompleted, userState);
        }
        
        private void OnCreateStorage4NewsRoomOperationCompleted(object arg) {
            if ((this.CreateStorage4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStorage4NewsRoomCompleted(this, new CreateStorage4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorage4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorage4NewsRoom(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            object[] results = this.Invoke("UpdateStorage4NewsRoom", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorage4NewsRoomAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword) {
            this.UpdateStorage4NewsRoomAsync(storageID, storageName, maxSpaceMB, maxSpaceHour, freeSpaceMB, freeSpaceHour, server, share, ftpServer, ftpPath, ftpUser, ftpPassword, ftpPort, publicServer, publicPort, publicUser, publicPassword, null);
        }
        
        /// <remarks/>
        public void UpdateStorage4NewsRoomAsync(
                    System.Guid storageID, 
                    string storageName, 
                    int maxSpaceMB, 
                    int maxSpaceHour, 
                    int freeSpaceMB, 
                    int freeSpaceHour, 
                    string server, 
                    string share, 
                    string ftpServer, 
                    string ftpPath, 
                    string ftpUser, 
                    string ftpPassword, 
                    int ftpPort, 
                    string publicServer, 
                    int publicPort, 
                    string publicUser, 
                    string publicPassword, 
                    object userState) {
            if ((this.UpdateStorage4NewsRoomOperationCompleted == null)) {
                this.UpdateStorage4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorage4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("UpdateStorage4NewsRoom", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        maxSpaceHour,
                        freeSpaceMB,
                        freeSpaceHour,
                        server,
                        share,
                        ftpServer,
                        ftpPath,
                        ftpUser,
                        ftpPassword,
                        ftpPort,
                        publicServer,
                        publicPort,
                        publicUser,
                        publicPassword}, this.UpdateStorage4NewsRoomOperationCompleted, userState);
        }
        
        private void OnUpdateStorage4NewsRoomOperationCompleted(object arg) {
            if ((this.UpdateStorage4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorage4NewsRoomCompleted(this, new UpdateStorage4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorage4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorage4NewsRoom(System.Guid storageID) {
            object[] results = this.Invoke("DeleteStorage4NewsRoom", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorage4NewsRoomAsync(System.Guid storageID) {
            this.DeleteStorage4NewsRoomAsync(storageID, null);
        }
        
        /// <remarks/>
        public void DeleteStorage4NewsRoomAsync(System.Guid storageID, object userState) {
            if ((this.DeleteStorage4NewsRoomOperationCompleted == null)) {
                this.DeleteStorage4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorage4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("DeleteStorage4NewsRoom", new object[] {
                        storageID}, this.DeleteStorage4NewsRoomOperationCompleted, userState);
        }
        
        private void OnDeleteStorage4NewsRoomOperationCompleted(object arg) {
            if ((this.DeleteStorage4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorage4NewsRoomCompleted(this, new DeleteStorage4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZoneInfoByStorageIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsRoomDS.StorageZoneInfoNRDataTable GetStorageZoneInfoByStorageIDNR(System.Guid storageID) {
            object[] results = this.Invoke("GetStorageZoneInfoByStorageIDNR", new object[] {
                        storageID});
            return ((NewsRoomDS.StorageZoneInfoNRDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZoneInfoByStorageIDNRAsync(System.Guid storageID) {
            this.GetStorageZoneInfoByStorageIDNRAsync(storageID, null);
        }
        
        /// <remarks/>
        public void GetStorageZoneInfoByStorageIDNRAsync(System.Guid storageID, object userState) {
            if ((this.GetStorageZoneInfoByStorageIDNROperationCompleted == null)) {
                this.GetStorageZoneInfoByStorageIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZoneInfoByStorageIDNROperationCompleted);
            }
            this.InvokeAsync("GetStorageZoneInfoByStorageIDNR", new object[] {
                        storageID}, this.GetStorageZoneInfoByStorageIDNROperationCompleted, userState);
        }
        
        private void OnGetStorageZoneInfoByStorageIDNROperationCompleted(object arg) {
            if ((this.GetStorageZoneInfoByStorageIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZoneInfoByStorageIDNRCompleted(this, new GetStorageZoneInfoByStorageIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingStorageZone4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingStorageZone4NewsRoom(System.Guid storageID, int storageZone) {
            object[] results = this.Invoke("IsUsingStorageZone4NewsRoom", new object[] {
                        storageID,
                        storageZone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingStorageZone4NewsRoomAsync(System.Guid storageID, int storageZone) {
            this.IsUsingStorageZone4NewsRoomAsync(storageID, storageZone, null);
        }
        
        /// <remarks/>
        public void IsUsingStorageZone4NewsRoomAsync(System.Guid storageID, int storageZone, object userState) {
            if ((this.IsUsingStorageZone4NewsRoomOperationCompleted == null)) {
                this.IsUsingStorageZone4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingStorageZone4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("IsUsingStorageZone4NewsRoom", new object[] {
                        storageID,
                        storageZone}, this.IsUsingStorageZone4NewsRoomOperationCompleted, userState);
        }
        
        private void OnIsUsingStorageZone4NewsRoomOperationCompleted(object arg) {
            if ((this.IsUsingStorageZone4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingStorageZone4NewsRoomCompleted(this, new IsUsingStorageZone4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageID4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageID4NewsRoom(System.Guid storageID) {
            object[] results = this.Invoke("IsExistStorageID4NewsRoom", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageID4NewsRoomAsync(System.Guid storageID) {
            this.IsExistStorageID4NewsRoomAsync(storageID, null);
        }
        
        /// <remarks/>
        public void IsExistStorageID4NewsRoomAsync(System.Guid storageID, object userState) {
            if ((this.IsExistStorageID4NewsRoomOperationCompleted == null)) {
                this.IsExistStorageID4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageID4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageID4NewsRoom", new object[] {
                        storageID}, this.IsExistStorageID4NewsRoomOperationCompleted, userState);
        }
        
        private void OnIsExistStorageID4NewsRoomOperationCompleted(object arg) {
            if ((this.IsExistStorageID4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageID4NewsRoomCompleted(this, new IsExistStorageID4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZoneNumber4NewsRoom", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetStorageZoneNumber4NewsRoom(System.Guid storageID) {
            object[] results = this.Invoke("GetStorageZoneNumber4NewsRoom", new object[] {
                        storageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZoneNumber4NewsRoomAsync(System.Guid storageID) {
            this.GetStorageZoneNumber4NewsRoomAsync(storageID, null);
        }
        
        /// <remarks/>
        public void GetStorageZoneNumber4NewsRoomAsync(System.Guid storageID, object userState) {
            if ((this.GetStorageZoneNumber4NewsRoomOperationCompleted == null)) {
                this.GetStorageZoneNumber4NewsRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZoneNumber4NewsRoomOperationCompleted);
            }
            this.InvokeAsync("GetStorageZoneNumber4NewsRoom", new object[] {
                        storageID}, this.GetStorageZoneNumber4NewsRoomOperationCompleted, userState);
        }
        
        private void OnGetStorageZoneNumber4NewsRoomOperationCompleted(object arg) {
            if ((this.GetStorageZoneNumber4NewsRoomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZoneNumber4NewsRoomCompleted(this, new GetStorageZoneNumber4NewsRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStorageZoneInfoNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStorageZoneInfoNR(
                    System.Guid storageID, 
                    int storageZone, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            object[] results = this.Invoke("CreateStorageZoneInfoNR", new object[] {
                        storageID,
                        storageZone,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStorageZoneInfoNRAsync(
                    System.Guid storageID, 
                    int storageZone, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            this.CreateStorageZoneInfoNRAsync(storageID, storageZone, name, ftpServer1, ftpPath1, ftpUser1, ftpPassword1, ftpPort1, server1, share1, fsPath1, fsPort1, ftpServer2, ftpPath2, ftpUser2, ftpPassword2, ftpPort2, server2, share2, fsPath2, fsPort2, ftpServer3, ftpPath3, ftpUser3, ftpPassword3, ftpPort3, server3, share3, fsPath3, fsPort3, ftpServer4, ftpPath4, ftpUser4, ftpPassword4, ftpPort4, server4, share4, fsPath4, fsPort4, null);
        }
        
        /// <remarks/>
        public void CreateStorageZoneInfoNRAsync(
                    System.Guid storageID, 
                    int storageZone, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4, 
                    object userState) {
            if ((this.CreateStorageZoneInfoNROperationCompleted == null)) {
                this.CreateStorageZoneInfoNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStorageZoneInfoNROperationCompleted);
            }
            this.InvokeAsync("CreateStorageZoneInfoNR", new object[] {
                        storageID,
                        storageZone,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4}, this.CreateStorageZoneInfoNROperationCompleted, userState);
        }
        
        private void OnCreateStorageZoneInfoNROperationCompleted(object arg) {
            if ((this.CreateStorageZoneInfoNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStorageZoneInfoNRCompleted(this, new CreateStorageZoneInfoNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorageZoneInfoNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorageZoneInfoNR(
                    System.Guid storageID, 
                    int storageZone1, 
                    int storageZone2, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            object[] results = this.Invoke("UpdateStorageZoneInfoNR", new object[] {
                        storageID,
                        storageZone1,
                        storageZone2,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorageZoneInfoNRAsync(
                    System.Guid storageID, 
                    int storageZone1, 
                    int storageZone2, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4) {
            this.UpdateStorageZoneInfoNRAsync(storageID, storageZone1, storageZone2, name, ftpServer1, ftpPath1, ftpUser1, ftpPassword1, ftpPort1, server1, share1, fsPath1, fsPort1, ftpServer2, ftpPath2, ftpUser2, ftpPassword2, ftpPort2, server2, share2, fsPath2, fsPort2, ftpServer3, ftpPath3, ftpUser3, ftpPassword3, ftpPort3, server3, share3, fsPath3, fsPort3, ftpServer4, ftpPath4, ftpUser4, ftpPassword4, ftpPort4, server4, share4, fsPath4, fsPort4, null);
        }
        
        /// <remarks/>
        public void UpdateStorageZoneInfoNRAsync(
                    System.Guid storageID, 
                    int storageZone1, 
                    int storageZone2, 
                    string name, 
                    string ftpServer1, 
                    string ftpPath1, 
                    string ftpUser1, 
                    string ftpPassword1, 
                    int ftpPort1, 
                    string server1, 
                    string share1, 
                    string fsPath1, 
                    int fsPort1, 
                    string ftpServer2, 
                    string ftpPath2, 
                    string ftpUser2, 
                    string ftpPassword2, 
                    int ftpPort2, 
                    string server2, 
                    string share2, 
                    string fsPath2, 
                    int fsPort2, 
                    string ftpServer3, 
                    string ftpPath3, 
                    string ftpUser3, 
                    string ftpPassword3, 
                    int ftpPort3, 
                    string server3, 
                    string share3, 
                    string fsPath3, 
                    int fsPort3, 
                    string ftpServer4, 
                    string ftpPath4, 
                    string ftpUser4, 
                    string ftpPassword4, 
                    int ftpPort4, 
                    string server4, 
                    string share4, 
                    string fsPath4, 
                    int fsPort4, 
                    object userState) {
            if ((this.UpdateStorageZoneInfoNROperationCompleted == null)) {
                this.UpdateStorageZoneInfoNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorageZoneInfoNROperationCompleted);
            }
            this.InvokeAsync("UpdateStorageZoneInfoNR", new object[] {
                        storageID,
                        storageZone1,
                        storageZone2,
                        name,
                        ftpServer1,
                        ftpPath1,
                        ftpUser1,
                        ftpPassword1,
                        ftpPort1,
                        server1,
                        share1,
                        fsPath1,
                        fsPort1,
                        ftpServer2,
                        ftpPath2,
                        ftpUser2,
                        ftpPassword2,
                        ftpPort2,
                        server2,
                        share2,
                        fsPath2,
                        fsPort2,
                        ftpServer3,
                        ftpPath3,
                        ftpUser3,
                        ftpPassword3,
                        ftpPort3,
                        server3,
                        share3,
                        fsPath3,
                        fsPort3,
                        ftpServer4,
                        ftpPath4,
                        ftpUser4,
                        ftpPassword4,
                        ftpPort4,
                        server4,
                        share4,
                        fsPath4,
                        fsPort4}, this.UpdateStorageZoneInfoNROperationCompleted, userState);
        }
        
        private void OnUpdateStorageZoneInfoNROperationCompleted(object arg) {
            if ((this.UpdateStorageZoneInfoNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorageZoneInfoNRCompleted(this, new UpdateStorageZoneInfoNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorageZoneInfoNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorageZoneInfoNR(System.Guid storageID, int storageZone) {
            object[] results = this.Invoke("DeleteStorageZoneInfoNR", new object[] {
                        storageID,
                        storageZone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorageZoneInfoNRAsync(System.Guid storageID, int storageZone) {
            this.DeleteStorageZoneInfoNRAsync(storageID, storageZone, null);
        }
        
        /// <remarks/>
        public void DeleteStorageZoneInfoNRAsync(System.Guid storageID, int storageZone, object userState) {
            if ((this.DeleteStorageZoneInfoNROperationCompleted == null)) {
                this.DeleteStorageZoneInfoNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorageZoneInfoNROperationCompleted);
            }
            this.InvokeAsync("DeleteStorageZoneInfoNR", new object[] {
                        storageID,
                        storageZone}, this.DeleteStorageZoneInfoNROperationCompleted, userState);
        }
        
        private void OnDeleteStorageZoneInfoNROperationCompleted(object arg) {
            if ((this.DeleteStorageZoneInfoNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorageZoneInfoNRCompleted(this, new DeleteStorageZoneInfoNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserSpaceInObjByObjectIDNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserSpaceModel[] GetUserSpaceInObjByObjectIDNR(System.Guid resourceID) {
            object[] results = this.Invoke("GetUserSpaceInObjByObjectIDNR", new object[] {
                        resourceID});
            return ((UserSpaceModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSpaceInObjByObjectIDNRAsync(System.Guid resourceID) {
            this.GetUserSpaceInObjByObjectIDNRAsync(resourceID, null);
        }
        
        /// <remarks/>
        public void GetUserSpaceInObjByObjectIDNRAsync(System.Guid resourceID, object userState) {
            if ((this.GetUserSpaceInObjByObjectIDNROperationCompleted == null)) {
                this.GetUserSpaceInObjByObjectIDNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSpaceInObjByObjectIDNROperationCompleted);
            }
            this.InvokeAsync("GetUserSpaceInObjByObjectIDNR", new object[] {
                        resourceID}, this.GetUserSpaceInObjByObjectIDNROperationCompleted, userState);
        }
        
        private void OnGetUserSpaceInObjByObjectIDNROperationCompleted(object arg) {
            if ((this.GetUserSpaceInObjByObjectIDNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSpaceInObjByObjectIDNRCompleted(this, new GetUserSpaceInObjByObjectIDNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUserSpaceInObjNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveUserSpaceInObjNR(UserSpaceModel[] userSpaceRemove, int type) {
            object[] results = this.Invoke("RemoveUserSpaceInObjNR", new object[] {
                        userSpaceRemove,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserSpaceInObjNRAsync(UserSpaceModel[] userSpaceRemove, int type) {
            this.RemoveUserSpaceInObjNRAsync(userSpaceRemove, type, null);
        }
        
        /// <remarks/>
        public void RemoveUserSpaceInObjNRAsync(UserSpaceModel[] userSpaceRemove, int type, object userState) {
            if ((this.RemoveUserSpaceInObjNROperationCompleted == null)) {
                this.RemoveUserSpaceInObjNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserSpaceInObjNROperationCompleted);
            }
            this.InvokeAsync("RemoveUserSpaceInObjNR", new object[] {
                        userSpaceRemove,
                        type}, this.RemoveUserSpaceInObjNROperationCompleted, userState);
        }
        
        private void OnRemoveUserSpaceInObjNROperationCompleted(object arg) {
            if ((this.RemoveUserSpaceInObjNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserSpaceInObjNRCompleted(this, new RemoveUserSpaceInObjNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserSpaceInObjNR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserSpaceInObjNR(System.Guid resourceID, System.Guid[] userIDs, int freeSpaceMB, int freeSpaceHour, int type) {
            object[] results = this.Invoke("AddUserSpaceInObjNR", new object[] {
                        resourceID,
                        userIDs,
                        freeSpaceMB,
                        freeSpaceHour,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserSpaceInObjNRAsync(System.Guid resourceID, System.Guid[] userIDs, int freeSpaceMB, int freeSpaceHour, int type) {
            this.AddUserSpaceInObjNRAsync(resourceID, userIDs, freeSpaceMB, freeSpaceHour, type, null);
        }
        
        /// <remarks/>
        public void AddUserSpaceInObjNRAsync(System.Guid resourceID, System.Guid[] userIDs, int freeSpaceMB, int freeSpaceHour, int type, object userState) {
            if ((this.AddUserSpaceInObjNROperationCompleted == null)) {
                this.AddUserSpaceInObjNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserSpaceInObjNROperationCompleted);
            }
            this.InvokeAsync("AddUserSpaceInObjNR", new object[] {
                        resourceID,
                        userIDs,
                        freeSpaceMB,
                        freeSpaceHour,
                        type}, this.AddUserSpaceInObjNROperationCompleted, userState);
        }
        
        private void OnAddUserSpaceInObjNROperationCompleted(object arg) {
            if ((this.AddUserSpaceInObjNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserSpaceInObjNRCompleted(this, new AddUserSpaceInObjNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWord() {
            object[] results = this.Invoke("HelloWord", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWordAsync() {
            this.HelloWordAsync(null);
        }
        
        /// <remarks/>
        public void HelloWordAsync(object userState) {
            if ((this.HelloWordOperationCompleted == null)) {
                this.HelloWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWordOperationCompleted);
            }
            this.InvokeAsync("HelloWord", new object[0], this.HelloWordOperationCompleted, userState);
        }
        
        private void OnHelloWordOperationCompleted(object arg) {
            if ((this.HelloWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWordCompleted(this, new HelloWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLogicLibs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.LogicLibDataTable GetLogicLibs() {
            object[] results = this.Invoke("GetLogicLibs", new object[0]);
            return ((MediaAssetDS.LogicLibDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogicLibsAsync() {
            this.GetLogicLibsAsync(null);
        }
        
        /// <remarks/>
        public void GetLogicLibsAsync(object userState) {
            if ((this.GetLogicLibsOperationCompleted == null)) {
                this.GetLogicLibsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogicLibsOperationCompleted);
            }
            this.InvokeAsync("GetLogicLibs", new object[0], this.GetLogicLibsOperationCompleted, userState);
        }
        
        private void OnGetLogicLibsOperationCompleted(object arg) {
            if ((this.GetLogicLibsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogicLibsCompleted(this, new GetLogicLibsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistLogicLibName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistLogicLibName(string logicLibName, System.Guid logicLibID) {
            object[] results = this.Invoke("IsExistLogicLibName", new object[] {
                        logicLibName,
                        logicLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistLogicLibNameAsync(string logicLibName, System.Guid logicLibID) {
            this.IsExistLogicLibNameAsync(logicLibName, logicLibID, null);
        }
        
        /// <remarks/>
        public void IsExistLogicLibNameAsync(string logicLibName, System.Guid logicLibID, object userState) {
            if ((this.IsExistLogicLibNameOperationCompleted == null)) {
                this.IsExistLogicLibNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistLogicLibNameOperationCompleted);
            }
            this.InvokeAsync("IsExistLogicLibName", new object[] {
                        logicLibName,
                        logicLibID}, this.IsExistLogicLibNameOperationCompleted, userState);
        }
        
        private void OnIsExistLogicLibNameOperationCompleted(object arg) {
            if ((this.IsExistLogicLibNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistLogicLibNameCompleted(this, new IsExistLogicLibNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingLogicLibInMediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingLogicLibInMediaAsset(System.Guid logicLibID) {
            object[] results = this.Invoke("IsUsingLogicLibInMediaAsset", new object[] {
                        logicLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingLogicLibInMediaAssetAsync(System.Guid logicLibID) {
            this.IsUsingLogicLibInMediaAssetAsync(logicLibID, null);
        }
        
        /// <remarks/>
        public void IsUsingLogicLibInMediaAssetAsync(System.Guid logicLibID, object userState) {
            if ((this.IsUsingLogicLibInMediaAssetOperationCompleted == null)) {
                this.IsUsingLogicLibInMediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingLogicLibInMediaAssetOperationCompleted);
            }
            this.InvokeAsync("IsUsingLogicLibInMediaAsset", new object[] {
                        logicLibID}, this.IsUsingLogicLibInMediaAssetOperationCompleted, userState);
        }
        
        private void OnIsUsingLogicLibInMediaAssetOperationCompleted(object arg) {
            if ((this.IsUsingLogicLibInMediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingLogicLibInMediaAssetCompleted(this, new IsUsingLogicLibInMediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingLogicLibInMediaAssetSeries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingLogicLibInMediaAssetSeries(System.Guid logicLibID) {
            object[] results = this.Invoke("IsUsingLogicLibInMediaAssetSeries", new object[] {
                        logicLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingLogicLibInMediaAssetSeriesAsync(System.Guid logicLibID) {
            this.IsUsingLogicLibInMediaAssetSeriesAsync(logicLibID, null);
        }
        
        /// <remarks/>
        public void IsUsingLogicLibInMediaAssetSeriesAsync(System.Guid logicLibID, object userState) {
            if ((this.IsUsingLogicLibInMediaAssetSeriesOperationCompleted == null)) {
                this.IsUsingLogicLibInMediaAssetSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingLogicLibInMediaAssetSeriesOperationCompleted);
            }
            this.InvokeAsync("IsUsingLogicLibInMediaAssetSeries", new object[] {
                        logicLibID}, this.IsUsingLogicLibInMediaAssetSeriesOperationCompleted, userState);
        }
        
        private void OnIsUsingLogicLibInMediaAssetSeriesOperationCompleted(object arg) {
            if ((this.IsUsingLogicLibInMediaAssetSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingLogicLibInMediaAssetSeriesCompleted(this, new IsUsingLogicLibInMediaAssetSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistLogicLib2StorageByLogicLibID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistLogicLib2StorageByLogicLibID(System.Guid logicLibID) {
            object[] results = this.Invoke("IsExistLogicLib2StorageByLogicLibID", new object[] {
                        logicLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistLogicLib2StorageByLogicLibIDAsync(System.Guid logicLibID) {
            this.IsExistLogicLib2StorageByLogicLibIDAsync(logicLibID, null);
        }
        
        /// <remarks/>
        public void IsExistLogicLib2StorageByLogicLibIDAsync(System.Guid logicLibID, object userState) {
            if ((this.IsExistLogicLib2StorageByLogicLibIDOperationCompleted == null)) {
                this.IsExistLogicLib2StorageByLogicLibIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistLogicLib2StorageByLogicLibIDOperationCompleted);
            }
            this.InvokeAsync("IsExistLogicLib2StorageByLogicLibID", new object[] {
                        logicLibID}, this.IsExistLogicLib2StorageByLogicLibIDOperationCompleted, userState);
        }
        
        private void OnIsExistLogicLib2StorageByLogicLibIDOperationCompleted(object arg) {
            if ((this.IsExistLogicLib2StorageByLogicLibIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistLogicLib2StorageByLogicLibIDCompleted(this, new IsExistLogicLib2StorageByLogicLibIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateLogicLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateLogicLib(System.Guid logicLibID, string name, int type, string remark, System.Guid systemID, System.Guid createUserID, string createUserName) {
            object[] results = this.Invoke("CreateLogicLib", new object[] {
                        logicLibID,
                        name,
                        type,
                        remark,
                        systemID,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLogicLibAsync(System.Guid logicLibID, string name, int type, string remark, System.Guid systemID, System.Guid createUserID, string createUserName) {
            this.CreateLogicLibAsync(logicLibID, name, type, remark, systemID, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateLogicLibAsync(System.Guid logicLibID, string name, int type, string remark, System.Guid systemID, System.Guid createUserID, string createUserName, object userState) {
            if ((this.CreateLogicLibOperationCompleted == null)) {
                this.CreateLogicLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLogicLibOperationCompleted);
            }
            this.InvokeAsync("CreateLogicLib", new object[] {
                        logicLibID,
                        name,
                        type,
                        remark,
                        systemID,
                        createUserID,
                        createUserName}, this.CreateLogicLibOperationCompleted, userState);
        }
        
        private void OnCreateLogicLibOperationCompleted(object arg) {
            if ((this.CreateLogicLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLogicLibCompleted(this, new CreateLogicLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLogicLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLogicLib(System.Guid logicLibID, string name, int type, string remark, System.Guid systemID, System.Guid createUserID, string createUserName) {
            object[] results = this.Invoke("UpdateLogicLib", new object[] {
                        logicLibID,
                        name,
                        type,
                        remark,
                        systemID,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLogicLibAsync(System.Guid logicLibID, string name, int type, string remark, System.Guid systemID, System.Guid createUserID, string createUserName) {
            this.UpdateLogicLibAsync(logicLibID, name, type, remark, systemID, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void UpdateLogicLibAsync(System.Guid logicLibID, string name, int type, string remark, System.Guid systemID, System.Guid createUserID, string createUserName, object userState) {
            if ((this.UpdateLogicLibOperationCompleted == null)) {
                this.UpdateLogicLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogicLibOperationCompleted);
            }
            this.InvokeAsync("UpdateLogicLib", new object[] {
                        logicLibID,
                        name,
                        type,
                        remark,
                        systemID,
                        createUserID,
                        createUserName}, this.UpdateLogicLibOperationCompleted, userState);
        }
        
        private void OnUpdateLogicLibOperationCompleted(object arg) {
            if ((this.UpdateLogicLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogicLibCompleted(this, new UpdateLogicLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLogicLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogicLib(System.Guid logicLibID) {
            object[] results = this.Invoke("DeleteLogicLib", new object[] {
                        logicLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogicLibAsync(System.Guid logicLibID) {
            this.DeleteLogicLibAsync(logicLibID, null);
        }
        
        /// <remarks/>
        public void DeleteLogicLibAsync(System.Guid logicLibID, object userState) {
            if ((this.DeleteLogicLibOperationCompleted == null)) {
                this.DeleteLogicLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogicLibOperationCompleted);
            }
            this.InvokeAsync("DeleteLogicLib", new object[] {
                        logicLibID}, this.DeleteLogicLibOperationCompleted, userState);
        }
        
        private void OnDeleteLogicLibOperationCompleted(object arg) {
            if ((this.DeleteLogicLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogicLibCompleted(this, new DeleteLogicLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLogicLib2StoragesByLogicLibID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LogicLib2StorageModel[] GetLogicLib2StoragesByLogicLibID(System.Guid logicLibID) {
            object[] results = this.Invoke("GetLogicLib2StoragesByLogicLibID", new object[] {
                        logicLibID});
            return ((LogicLib2StorageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLogicLib2StoragesByLogicLibIDAsync(System.Guid logicLibID) {
            this.GetLogicLib2StoragesByLogicLibIDAsync(logicLibID, null);
        }
        
        /// <remarks/>
        public void GetLogicLib2StoragesByLogicLibIDAsync(System.Guid logicLibID, object userState) {
            if ((this.GetLogicLib2StoragesByLogicLibIDOperationCompleted == null)) {
                this.GetLogicLib2StoragesByLogicLibIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogicLib2StoragesByLogicLibIDOperationCompleted);
            }
            this.InvokeAsync("GetLogicLib2StoragesByLogicLibID", new object[] {
                        logicLibID}, this.GetLogicLib2StoragesByLogicLibIDOperationCompleted, userState);
        }
        
        private void OnGetLogicLib2StoragesByLogicLibIDOperationCompleted(object arg) {
            if ((this.GetLogicLib2StoragesByLogicLibIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogicLib2StoragesByLogicLibIDCompleted(this, new GetLogicLib2StoragesByLogicLibIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLogicLib2Storage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLogicLib2Storage(LogicLib2StorageModel[] lstLogicLib2Storage, System.Guid logicLibID) {
            object[] results = this.Invoke("UpdateLogicLib2Storage", new object[] {
                        lstLogicLib2Storage,
                        logicLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLogicLib2StorageAsync(LogicLib2StorageModel[] lstLogicLib2Storage, System.Guid logicLibID) {
            this.UpdateLogicLib2StorageAsync(lstLogicLib2Storage, logicLibID, null);
        }
        
        /// <remarks/>
        public void UpdateLogicLib2StorageAsync(LogicLib2StorageModel[] lstLogicLib2Storage, System.Guid logicLibID, object userState) {
            if ((this.UpdateLogicLib2StorageOperationCompleted == null)) {
                this.UpdateLogicLib2StorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogicLib2StorageOperationCompleted);
            }
            this.InvokeAsync("UpdateLogicLib2Storage", new object[] {
                        lstLogicLib2Storage,
                        logicLibID}, this.UpdateLogicLib2StorageOperationCompleted, userState);
        }
        
        private void OnUpdateLogicLib2StorageOperationCompleted(object arg) {
            if ((this.UpdateLogicLib2StorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogicLib2StorageCompleted(this, new UpdateLogicLib2StorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorages4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.StorageDataTable GetStorages4MediaAsset() {
            object[] results = this.Invoke("GetStorages4MediaAsset", new object[0]);
            return ((MediaAssetDS.StorageDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorages4MediaAssetAsync() {
            this.GetStorages4MediaAssetAsync(null);
        }
        
        /// <remarks/>
        public void GetStorages4MediaAssetAsync(object userState) {
            if ((this.GetStorages4MediaAssetOperationCompleted == null)) {
                this.GetStorages4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorages4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("GetStorages4MediaAsset", new object[0], this.GetStorages4MediaAssetOperationCompleted, userState);
        }
        
        private void OnGetStorages4MediaAssetOperationCompleted(object arg) {
            if ((this.GetStorages4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorages4MediaAssetCompleted(this, new GetStorages4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistStorageName4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistStorageName4MediaAsset(string storageName, System.Guid storageID) {
            object[] results = this.Invoke("IsExistStorageName4MediaAsset", new object[] {
                        storageName,
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistStorageName4MediaAssetAsync(string storageName, System.Guid storageID) {
            this.IsExistStorageName4MediaAssetAsync(storageName, storageID, null);
        }
        
        /// <remarks/>
        public void IsExistStorageName4MediaAssetAsync(string storageName, System.Guid storageID, object userState) {
            if ((this.IsExistStorageName4MediaAssetOperationCompleted == null)) {
                this.IsExistStorageName4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistStorageName4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("IsExistStorageName4MediaAsset", new object[] {
                        storageName,
                        storageID}, this.IsExistStorageName4MediaAssetOperationCompleted, userState);
        }
        
        private void OnIsExistStorageName4MediaAssetOperationCompleted(object arg) {
            if ((this.IsExistStorageName4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistStorageName4MediaAssetCompleted(this, new IsExistStorageName4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingStorageInL2S", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingStorageInL2S(System.Guid storageID) {
            object[] results = this.Invoke("IsUsingStorageInL2S", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingStorageInL2SAsync(System.Guid storageID) {
            this.IsUsingStorageInL2SAsync(storageID, null);
        }
        
        /// <remarks/>
        public void IsUsingStorageInL2SAsync(System.Guid storageID, object userState) {
            if ((this.IsUsingStorageInL2SOperationCompleted == null)) {
                this.IsUsingStorageInL2SOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingStorageInL2SOperationCompleted);
            }
            this.InvokeAsync("IsUsingStorageInL2S", new object[] {
                        storageID}, this.IsUsingStorageInL2SOperationCompleted, userState);
        }
        
        private void OnIsUsingStorageInL2SOperationCompleted(object arg) {
            if ((this.IsUsingStorageInL2SCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingStorageInL2SCompleted(this, new IsUsingStorageInL2SCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingStorageInMediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingStorageInMediaAsset(System.Guid storageID) {
            object[] results = this.Invoke("IsUsingStorageInMediaAsset", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingStorageInMediaAssetAsync(System.Guid storageID) {
            this.IsUsingStorageInMediaAssetAsync(storageID, null);
        }
        
        /// <remarks/>
        public void IsUsingStorageInMediaAssetAsync(System.Guid storageID, object userState) {
            if ((this.IsUsingStorageInMediaAssetOperationCompleted == null)) {
                this.IsUsingStorageInMediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingStorageInMediaAssetOperationCompleted);
            }
            this.InvokeAsync("IsUsingStorageInMediaAsset", new object[] {
                        storageID}, this.IsUsingStorageInMediaAssetOperationCompleted, userState);
        }
        
        private void OnIsUsingStorageInMediaAssetOperationCompleted(object arg) {
            if ((this.IsUsingStorageInMediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingStorageInMediaAssetCompleted(this, new IsUsingStorageInMediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateStorage4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStorage4MediaAsset(System.Guid storageID, string storageName, int maxSpaceMB, int freeSpaceMB, string remark) {
            object[] results = this.Invoke("CreateStorage4MediaAsset", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        freeSpaceMB,
                        remark});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStorage4MediaAssetAsync(System.Guid storageID, string storageName, int maxSpaceMB, int freeSpaceMB, string remark) {
            this.CreateStorage4MediaAssetAsync(storageID, storageName, maxSpaceMB, freeSpaceMB, remark, null);
        }
        
        /// <remarks/>
        public void CreateStorage4MediaAssetAsync(System.Guid storageID, string storageName, int maxSpaceMB, int freeSpaceMB, string remark, object userState) {
            if ((this.CreateStorage4MediaAssetOperationCompleted == null)) {
                this.CreateStorage4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStorage4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("CreateStorage4MediaAsset", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        freeSpaceMB,
                        remark}, this.CreateStorage4MediaAssetOperationCompleted, userState);
        }
        
        private void OnCreateStorage4MediaAssetOperationCompleted(object arg) {
            if ((this.CreateStorage4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStorage4MediaAssetCompleted(this, new CreateStorage4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorage4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorage4MediaAsset(System.Guid storageID, string storageName, int maxSpaceMB, int freeSpaceMB, string remark) {
            object[] results = this.Invoke("UpdateStorage4MediaAsset", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        freeSpaceMB,
                        remark});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorage4MediaAssetAsync(System.Guid storageID, string storageName, int maxSpaceMB, int freeSpaceMB, string remark) {
            this.UpdateStorage4MediaAssetAsync(storageID, storageName, maxSpaceMB, freeSpaceMB, remark, null);
        }
        
        /// <remarks/>
        public void UpdateStorage4MediaAssetAsync(System.Guid storageID, string storageName, int maxSpaceMB, int freeSpaceMB, string remark, object userState) {
            if ((this.UpdateStorage4MediaAssetOperationCompleted == null)) {
                this.UpdateStorage4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorage4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("UpdateStorage4MediaAsset", new object[] {
                        storageID,
                        storageName,
                        maxSpaceMB,
                        freeSpaceMB,
                        remark}, this.UpdateStorage4MediaAssetOperationCompleted, userState);
        }
        
        private void OnUpdateStorage4MediaAssetOperationCompleted(object arg) {
            if ((this.UpdateStorage4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorage4MediaAssetCompleted(this, new UpdateStorage4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorage4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorage4MediaAsset(System.Guid storageID) {
            object[] results = this.Invoke("DeleteStorage4MediaAsset", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorage4MediaAssetAsync(System.Guid storageID) {
            this.DeleteStorage4MediaAssetAsync(storageID, null);
        }
        
        /// <remarks/>
        public void DeleteStorage4MediaAssetAsync(System.Guid storageID, object userState) {
            if ((this.DeleteStorage4MediaAssetOperationCompleted == null)) {
                this.DeleteStorage4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorage4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("DeleteStorage4MediaAsset", new object[] {
                        storageID}, this.DeleteStorage4MediaAssetOperationCompleted, userState);
        }
        
        private void OnDeleteStorage4MediaAssetOperationCompleted(object arg) {
            if ((this.DeleteStorage4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorage4MediaAssetCompleted(this, new DeleteStorage4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageZoneInfoByStorageID4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaAssetDS.StorageZoneInfoDataTable GetStorageZoneInfoByStorageID4MediaAsset(System.Guid storageID) {
            object[] results = this.Invoke("GetStorageZoneInfoByStorageID4MediaAsset", new object[] {
                        storageID});
            return ((MediaAssetDS.StorageZoneInfoDataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageZoneInfoByStorageID4MediaAssetAsync(System.Guid storageID) {
            this.GetStorageZoneInfoByStorageID4MediaAssetAsync(storageID, null);
        }
        
        /// <remarks/>
        public void GetStorageZoneInfoByStorageID4MediaAssetAsync(System.Guid storageID, object userState) {
            if ((this.GetStorageZoneInfoByStorageID4MediaAssetOperationCompleted == null)) {
                this.GetStorageZoneInfoByStorageID4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageZoneInfoByStorageID4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("GetStorageZoneInfoByStorageID4MediaAsset", new object[] {
                        storageID}, this.GetStorageZoneInfoByStorageID4MediaAssetOperationCompleted, userState);
        }
        
        private void OnGetStorageZoneInfoByStorageID4MediaAssetOperationCompleted(object arg) {
            if ((this.GetStorageZoneInfoByStorageID4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageZoneInfoByStorageID4MediaAssetCompleted(this, new GetStorageZoneInfoByStorageID4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorageZoneInfo4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStorageZoneInfo4MediaAsset(MediaAssetDS.StorageZoneInfoDataTable storageZoneInfoDT, System.Guid storageID) {
            object[] results = this.Invoke("UpdateStorageZoneInfo4MediaAsset", new object[] {
                        storageZoneInfoDT,
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStorageZoneInfo4MediaAssetAsync(MediaAssetDS.StorageZoneInfoDataTable storageZoneInfoDT, System.Guid storageID) {
            this.UpdateStorageZoneInfo4MediaAssetAsync(storageZoneInfoDT, storageID, null);
        }
        
        /// <remarks/>
        public void UpdateStorageZoneInfo4MediaAssetAsync(MediaAssetDS.StorageZoneInfoDataTable storageZoneInfoDT, System.Guid storageID, object userState) {
            if ((this.UpdateStorageZoneInfo4MediaAssetOperationCompleted == null)) {
                this.UpdateStorageZoneInfo4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorageZoneInfo4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("UpdateStorageZoneInfo4MediaAsset", new object[] {
                        storageZoneInfoDT,
                        storageID}, this.UpdateStorageZoneInfo4MediaAssetOperationCompleted, userState);
        }
        
        private void OnUpdateStorageZoneInfo4MediaAssetOperationCompleted(object arg) {
            if ((this.UpdateStorageZoneInfo4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorageZoneInfo4MediaAssetCompleted(this, new UpdateStorageZoneInfo4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStorageZoneInfo4MediaAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteStorageZoneInfo4MediaAsset(System.Guid storageID) {
            object[] results = this.Invoke("DeleteStorageZoneInfo4MediaAsset", new object[] {
                        storageID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStorageZoneInfo4MediaAssetAsync(System.Guid storageID) {
            this.DeleteStorageZoneInfo4MediaAssetAsync(storageID, null);
        }
        
        /// <remarks/>
        public void DeleteStorageZoneInfo4MediaAssetAsync(System.Guid storageID, object userState) {
            if ((this.DeleteStorageZoneInfo4MediaAssetOperationCompleted == null)) {
                this.DeleteStorageZoneInfo4MediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStorageZoneInfo4MediaAssetOperationCompleted);
            }
            this.InvokeAsync("DeleteStorageZoneInfo4MediaAsset", new object[] {
                        storageID}, this.DeleteStorageZoneInfo4MediaAssetOperationCompleted, userState);
        }
        
        private void OnDeleteStorageZoneInfo4MediaAssetOperationCompleted(object arg) {
            if ((this.DeleteStorageZoneInfo4MediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStorageZoneInfo4MediaAssetCompleted(this, new DeleteStorageZoneInfo4MediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDictionaryByTableName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DictionaryCommonModel[] GetDictionaryByTableName(string tableName) {
            object[] results = this.Invoke("GetDictionaryByTableName", new object[] {
                        tableName});
            return ((DictionaryCommonModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryByTableNameAsync(string tableName) {
            this.GetDictionaryByTableNameAsync(tableName, null);
        }
        
        /// <remarks/>
        public void GetDictionaryByTableNameAsync(string tableName, object userState) {
            if ((this.GetDictionaryByTableNameOperationCompleted == null)) {
                this.GetDictionaryByTableNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryByTableNameOperationCompleted);
            }
            this.InvokeAsync("GetDictionaryByTableName", new object[] {
                        tableName}, this.GetDictionaryByTableNameOperationCompleted, userState);
        }
        
        private void OnGetDictionaryByTableNameOperationCompleted(object arg) {
            if ((this.GetDictionaryByTableNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryByTableNameCompleted(this, new GetDictionaryByTableNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDictionaryDistinctByTableName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDictionaryDistinctByTableName(string tableName) {
            object[] results = this.Invoke("GetDictionaryDistinctByTableName", new object[] {
                        tableName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryDistinctByTableNameAsync(string tableName) {
            this.GetDictionaryDistinctByTableNameAsync(tableName, null);
        }
        
        /// <remarks/>
        public void GetDictionaryDistinctByTableNameAsync(string tableName, object userState) {
            if ((this.GetDictionaryDistinctByTableNameOperationCompleted == null)) {
                this.GetDictionaryDistinctByTableNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryDistinctByTableNameOperationCompleted);
            }
            this.InvokeAsync("GetDictionaryDistinctByTableName", new object[] {
                        tableName}, this.GetDictionaryDistinctByTableNameOperationCompleted, userState);
        }
        
        private void OnGetDictionaryDistinctByTableNameOperationCompleted(object arg) {
            if ((this.GetDictionaryDistinctByTableNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryDistinctByTableNameCompleted(this, new GetDictionaryDistinctByTableNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDictionaryDistinctByTableNameMC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DictionaryIDNameModel[] GetDictionaryDistinctByTableNameMC(string tableName, System.Guid masterClassID) {
            object[] results = this.Invoke("GetDictionaryDistinctByTableNameMC", new object[] {
                        tableName,
                        masterClassID});
            return ((DictionaryIDNameModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryDistinctByTableNameMCAsync(string tableName, System.Guid masterClassID) {
            this.GetDictionaryDistinctByTableNameMCAsync(tableName, masterClassID, null);
        }
        
        /// <remarks/>
        public void GetDictionaryDistinctByTableNameMCAsync(string tableName, System.Guid masterClassID, object userState) {
            if ((this.GetDictionaryDistinctByTableNameMCOperationCompleted == null)) {
                this.GetDictionaryDistinctByTableNameMCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryDistinctByTableNameMCOperationCompleted);
            }
            this.InvokeAsync("GetDictionaryDistinctByTableNameMC", new object[] {
                        tableName,
                        masterClassID}, this.GetDictionaryDistinctByTableNameMCOperationCompleted, userState);
        }
        
        private void OnGetDictionaryDistinctByTableNameMCOperationCompleted(object arg) {
            if ((this.GetDictionaryDistinctByTableNameMCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryDistinctByTableNameMCCompleted(this, new GetDictionaryDistinctByTableNameMCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDictionaryByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DictionaryCommonModel[] GetDictionaryByCondition(string tableName, System.Guid[] masterClassIDs, string name, int isDefault) {
            object[] results = this.Invoke("GetDictionaryByCondition", new object[] {
                        tableName,
                        masterClassIDs,
                        name,
                        isDefault});
            return ((DictionaryCommonModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryByConditionAsync(string tableName, System.Guid[] masterClassIDs, string name, int isDefault) {
            this.GetDictionaryByConditionAsync(tableName, masterClassIDs, name, isDefault, null);
        }
        
        /// <remarks/>
        public void GetDictionaryByConditionAsync(string tableName, System.Guid[] masterClassIDs, string name, int isDefault, object userState) {
            if ((this.GetDictionaryByConditionOperationCompleted == null)) {
                this.GetDictionaryByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryByConditionOperationCompleted);
            }
            this.InvokeAsync("GetDictionaryByCondition", new object[] {
                        tableName,
                        masterClassIDs,
                        name,
                        isDefault}, this.GetDictionaryByConditionOperationCompleted, userState);
        }
        
        private void OnGetDictionaryByConditionOperationCompleted(object arg) {
            if ((this.GetDictionaryByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryByConditionCompleted(this, new GetDictionaryByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingDictionaryInMediaAsset2Dictionary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingDictionaryInMediaAsset2Dictionary(System.Guid dictID) {
            object[] results = this.Invoke("IsUsingDictionaryInMediaAsset2Dictionary", new object[] {
                        dictID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingDictionaryInMediaAsset2DictionaryAsync(System.Guid dictID) {
            this.IsUsingDictionaryInMediaAsset2DictionaryAsync(dictID, null);
        }
        
        /// <remarks/>
        public void IsUsingDictionaryInMediaAsset2DictionaryAsync(System.Guid dictID, object userState) {
            if ((this.IsUsingDictionaryInMediaAsset2DictionaryOperationCompleted == null)) {
                this.IsUsingDictionaryInMediaAsset2DictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingDictionaryInMediaAsset2DictionaryOperationCompleted);
            }
            this.InvokeAsync("IsUsingDictionaryInMediaAsset2Dictionary", new object[] {
                        dictID}, this.IsUsingDictionaryInMediaAsset2DictionaryOperationCompleted, userState);
        }
        
        private void OnIsUsingDictionaryInMediaAsset2DictionaryOperationCompleted(object arg) {
            if ((this.IsUsingDictionaryInMediaAsset2DictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingDictionaryInMediaAsset2DictionaryCompleted(this, new IsUsingDictionaryInMediaAsset2DictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistDictionaryName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistDictionaryName(string tableName, string dictName, System.Guid dictID) {
            object[] results = this.Invoke("IsExistDictionaryName", new object[] {
                        tableName,
                        dictName,
                        dictID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistDictionaryNameAsync(string tableName, string dictName, System.Guid dictID) {
            this.IsExistDictionaryNameAsync(tableName, dictName, dictID, null);
        }
        
        /// <remarks/>
        public void IsExistDictionaryNameAsync(string tableName, string dictName, System.Guid dictID, object userState) {
            if ((this.IsExistDictionaryNameOperationCompleted == null)) {
                this.IsExistDictionaryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistDictionaryNameOperationCompleted);
            }
            this.InvokeAsync("IsExistDictionaryName", new object[] {
                        tableName,
                        dictName,
                        dictID}, this.IsExistDictionaryNameOperationCompleted, userState);
        }
        
        private void OnIsExistDictionaryNameOperationCompleted(object arg) {
            if ((this.IsExistDictionaryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistDictionaryNameCompleted(this, new IsExistDictionaryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsParentDictionary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsParentDictionary(string columnName, System.Guid dictID) {
            object[] results = this.Invoke("IsParentDictionary", new object[] {
                        columnName,
                        dictID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsParentDictionaryAsync(string columnName, System.Guid dictID) {
            this.IsParentDictionaryAsync(columnName, dictID, null);
        }
        
        /// <remarks/>
        public void IsParentDictionaryAsync(string columnName, System.Guid dictID, object userState) {
            if ((this.IsParentDictionaryOperationCompleted == null)) {
                this.IsParentDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsParentDictionaryOperationCompleted);
            }
            this.InvokeAsync("IsParentDictionary", new object[] {
                        columnName,
                        dictID}, this.IsParentDictionaryOperationCompleted, userState);
        }
        
        private void OnIsParentDictionaryOperationCompleted(object arg) {
            if ((this.IsParentDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsParentDictionaryCompleted(this, new IsParentDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDictionary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateDictionary(string tableName, System.Guid ID, System.Guid MasterClassID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, int CurrentState, string Remark, int ValueNumber, bool IsDefault, System.Guid createUserID, string createUserName) {
            object[] results = this.Invoke("CreateDictionary", new object[] {
                        tableName,
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDictionaryAsync(string tableName, System.Guid ID, System.Guid MasterClassID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, int CurrentState, string Remark, int ValueNumber, bool IsDefault, System.Guid createUserID, string createUserName) {
            this.CreateDictionaryAsync(tableName, ID, MasterClassID, ParentID, Name, FastCode, AlternativeName, CurrentState, Remark, ValueNumber, IsDefault, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateDictionaryAsync(string tableName, System.Guid ID, System.Guid MasterClassID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, int CurrentState, string Remark, int ValueNumber, bool IsDefault, System.Guid createUserID, string createUserName, object userState) {
            if ((this.CreateDictionaryOperationCompleted == null)) {
                this.CreateDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDictionaryOperationCompleted);
            }
            this.InvokeAsync("CreateDictionary", new object[] {
                        tableName,
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        createUserID,
                        createUserName}, this.CreateDictionaryOperationCompleted, userState);
        }
        
        private void OnCreateDictionaryOperationCompleted(object arg) {
            if ((this.CreateDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDictionaryCompleted(this, new CreateDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDictionary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDictionary(string tableName, System.Guid ID, System.Guid MasterClassID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, int CurrentState, string Remark, int ValueNumber, bool IsDefault, System.Guid modifyUserID, string modifyUserName) {
            object[] results = this.Invoke("UpdateDictionary", new object[] {
                        tableName,
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        modifyUserID,
                        modifyUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDictionaryAsync(string tableName, System.Guid ID, System.Guid MasterClassID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, int CurrentState, string Remark, int ValueNumber, bool IsDefault, System.Guid modifyUserID, string modifyUserName) {
            this.UpdateDictionaryAsync(tableName, ID, MasterClassID, ParentID, Name, FastCode, AlternativeName, CurrentState, Remark, ValueNumber, IsDefault, modifyUserID, modifyUserName, null);
        }
        
        /// <remarks/>
        public void UpdateDictionaryAsync(string tableName, System.Guid ID, System.Guid MasterClassID, System.Guid ParentID, string Name, string FastCode, string AlternativeName, int CurrentState, string Remark, int ValueNumber, bool IsDefault, System.Guid modifyUserID, string modifyUserName, object userState) {
            if ((this.UpdateDictionaryOperationCompleted == null)) {
                this.UpdateDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDictionaryOperationCompleted);
            }
            this.InvokeAsync("UpdateDictionary", new object[] {
                        tableName,
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        FastCode,
                        AlternativeName,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        modifyUserID,
                        modifyUserName}, this.UpdateDictionaryOperationCompleted, userState);
        }
        
        private void OnUpdateDictionaryOperationCompleted(object arg) {
            if ((this.UpdateDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDictionaryCompleted(this, new UpdateDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDictionary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteDictionary(string tableName, string IDs) {
            object[] results = this.Invoke("DeleteDictionary", new object[] {
                        tableName,
                        IDs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDictionaryAsync(string tableName, string IDs) {
            this.DeleteDictionaryAsync(tableName, IDs, null);
        }
        
        /// <remarks/>
        public void DeleteDictionaryAsync(string tableName, string IDs, object userState) {
            if ((this.DeleteDictionaryOperationCompleted == null)) {
                this.DeleteDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDictionaryOperationCompleted);
            }
            this.InvokeAsync("DeleteDictionary", new object[] {
                        tableName,
                        IDs}, this.DeleteDictionaryOperationCompleted, userState);
        }
        
        private void OnDeleteDictionaryOperationCompleted(object arg) {
            if ((this.DeleteDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDictionaryCompleted(this, new DeleteDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConfigDictionary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode[] GetConfigDictionary(string format) {
            object[] results = this.Invoke("GetConfigDictionary", new object[] {
                        format});
            return ((System.Xml.XmlNode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigDictionaryAsync(string format) {
            this.GetConfigDictionaryAsync(format, null);
        }
        
        /// <remarks/>
        public void GetConfigDictionaryAsync(string format, object userState) {
            if ((this.GetConfigDictionaryOperationCompleted == null)) {
                this.GetConfigDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigDictionaryOperationCompleted);
            }
            this.InvokeAsync("GetConfigDictionary", new object[] {
                        format}, this.GetConfigDictionaryOperationCompleted, userState);
        }
        
        private void OnGetConfigDictionaryOperationCompleted(object arg) {
            if ((this.GetConfigDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigDictionaryCompleted(this, new GetConfigDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContributorByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DictContributorModel[] GetContributorByCondition(System.Guid[] masterClassIDs, string name, int gender, System.Guid[] nationalityIDs, System.Guid[] langugaeIDs, System.Guid[] eraIDs, System.Guid[] combinationIDs, System.Guid[] ethnicIDs, System.Guid[] professionIDs, int isDefault) {
            object[] results = this.Invoke("GetContributorByCondition", new object[] {
                        masterClassIDs,
                        name,
                        gender,
                        nationalityIDs,
                        langugaeIDs,
                        eraIDs,
                        combinationIDs,
                        ethnicIDs,
                        professionIDs,
                        isDefault});
            return ((DictContributorModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContributorByConditionAsync(System.Guid[] masterClassIDs, string name, int gender, System.Guid[] nationalityIDs, System.Guid[] langugaeIDs, System.Guid[] eraIDs, System.Guid[] combinationIDs, System.Guid[] ethnicIDs, System.Guid[] professionIDs, int isDefault) {
            this.GetContributorByConditionAsync(masterClassIDs, name, gender, nationalityIDs, langugaeIDs, eraIDs, combinationIDs, ethnicIDs, professionIDs, isDefault, null);
        }
        
        /// <remarks/>
        public void GetContributorByConditionAsync(System.Guid[] masterClassIDs, string name, int gender, System.Guid[] nationalityIDs, System.Guid[] langugaeIDs, System.Guid[] eraIDs, System.Guid[] combinationIDs, System.Guid[] ethnicIDs, System.Guid[] professionIDs, int isDefault, object userState) {
            if ((this.GetContributorByConditionOperationCompleted == null)) {
                this.GetContributorByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContributorByConditionOperationCompleted);
            }
            this.InvokeAsync("GetContributorByCondition", new object[] {
                        masterClassIDs,
                        name,
                        gender,
                        nationalityIDs,
                        langugaeIDs,
                        eraIDs,
                        combinationIDs,
                        ethnicIDs,
                        professionIDs,
                        isDefault}, this.GetContributorByConditionOperationCompleted, userState);
        }
        
        private void OnGetContributorByConditionOperationCompleted(object arg) {
            if ((this.GetContributorByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContributorByConditionCompleted(this, new GetContributorByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContributorByRelatorID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DictContributorModel[] GetContributorByRelatorID(System.Guid relatorID) {
            object[] results = this.Invoke("GetContributorByRelatorID", new object[] {
                        relatorID});
            return ((DictContributorModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContributorByRelatorIDAsync(System.Guid relatorID) {
            this.GetContributorByRelatorIDAsync(relatorID, null);
        }
        
        /// <remarks/>
        public void GetContributorByRelatorIDAsync(System.Guid relatorID, object userState) {
            if ((this.GetContributorByRelatorIDOperationCompleted == null)) {
                this.GetContributorByRelatorIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContributorByRelatorIDOperationCompleted);
            }
            this.InvokeAsync("GetContributorByRelatorID", new object[] {
                        relatorID}, this.GetContributorByRelatorIDOperationCompleted, userState);
        }
        
        private void OnGetContributorByRelatorIDOperationCompleted(object arg) {
            if ((this.GetContributorByRelatorIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContributorByRelatorIDCompleted(this, new GetContributorByRelatorIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUsingDictionaryInContributor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUsingDictionaryInContributor(string columnName, System.Guid dictID) {
            object[] results = this.Invoke("IsUsingDictionaryInContributor", new object[] {
                        columnName,
                        dictID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingDictionaryInContributorAsync(string columnName, System.Guid dictID) {
            this.IsUsingDictionaryInContributorAsync(columnName, dictID, null);
        }
        
        /// <remarks/>
        public void IsUsingDictionaryInContributorAsync(string columnName, System.Guid dictID, object userState) {
            if ((this.IsUsingDictionaryInContributorOperationCompleted == null)) {
                this.IsUsingDictionaryInContributorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingDictionaryInContributorOperationCompleted);
            }
            this.InvokeAsync("IsUsingDictionaryInContributor", new object[] {
                        columnName,
                        dictID}, this.IsUsingDictionaryInContributorOperationCompleted, userState);
        }
        
        private void OnIsUsingDictionaryInContributorOperationCompleted(object arg) {
            if ((this.IsUsingDictionaryInContributorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingDictionaryInContributorCompleted(this, new IsUsingDictionaryInContributorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateContributor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateContributor(
                    System.Guid ID, 
                    System.Guid MasterClassID, 
                    System.Guid ParentID, 
                    string Name, 
                    bool Gender, 
                    System.DateTime BirthDate, 
                    string BirthPlace, 
                    string ForeignName, 
                    string FastCode, 
                    string AlternativeName, 
                    System.Guid NationalityID, 
                    System.Guid AreaID, 
                    System.Guid LanguageID, 
                    System.Guid EraID, 
                    System.Guid CombinationID, 
                    System.Guid EthnicID, 
                    System.Guid ProfessionID, 
                    int Popularity, 
                    int CurrentState, 
                    string Remark, 
                    int ValueNumber, 
                    bool IsDefault, 
                    System.Guid createUserID, 
                    string createUserName) {
            object[] results = this.Invoke("CreateContributor", new object[] {
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        Gender,
                        BirthDate,
                        BirthPlace,
                        ForeignName,
                        FastCode,
                        AlternativeName,
                        NationalityID,
                        AreaID,
                        LanguageID,
                        EraID,
                        CombinationID,
                        EthnicID,
                        ProfessionID,
                        Popularity,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        createUserID,
                        createUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContributorAsync(
                    System.Guid ID, 
                    System.Guid MasterClassID, 
                    System.Guid ParentID, 
                    string Name, 
                    bool Gender, 
                    System.DateTime BirthDate, 
                    string BirthPlace, 
                    string ForeignName, 
                    string FastCode, 
                    string AlternativeName, 
                    System.Guid NationalityID, 
                    System.Guid AreaID, 
                    System.Guid LanguageID, 
                    System.Guid EraID, 
                    System.Guid CombinationID, 
                    System.Guid EthnicID, 
                    System.Guid ProfessionID, 
                    int Popularity, 
                    int CurrentState, 
                    string Remark, 
                    int ValueNumber, 
                    bool IsDefault, 
                    System.Guid createUserID, 
                    string createUserName) {
            this.CreateContributorAsync(ID, MasterClassID, ParentID, Name, Gender, BirthDate, BirthPlace, ForeignName, FastCode, AlternativeName, NationalityID, AreaID, LanguageID, EraID, CombinationID, EthnicID, ProfessionID, Popularity, CurrentState, Remark, ValueNumber, IsDefault, createUserID, createUserName, null);
        }
        
        /// <remarks/>
        public void CreateContributorAsync(
                    System.Guid ID, 
                    System.Guid MasterClassID, 
                    System.Guid ParentID, 
                    string Name, 
                    bool Gender, 
                    System.DateTime BirthDate, 
                    string BirthPlace, 
                    string ForeignName, 
                    string FastCode, 
                    string AlternativeName, 
                    System.Guid NationalityID, 
                    System.Guid AreaID, 
                    System.Guid LanguageID, 
                    System.Guid EraID, 
                    System.Guid CombinationID, 
                    System.Guid EthnicID, 
                    System.Guid ProfessionID, 
                    int Popularity, 
                    int CurrentState, 
                    string Remark, 
                    int ValueNumber, 
                    bool IsDefault, 
                    System.Guid createUserID, 
                    string createUserName, 
                    object userState) {
            if ((this.CreateContributorOperationCompleted == null)) {
                this.CreateContributorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContributorOperationCompleted);
            }
            this.InvokeAsync("CreateContributor", new object[] {
                        ID,
                        MasterClassID,
                        ParentID,
                        Name,
                        Gender,
                        BirthDate,
                        BirthPlace,
                        ForeignName,
                        FastCode,
                        AlternativeName,
                        NationalityID,
                        AreaID,
                        LanguageID,
                        EraID,
                        CombinationID,
                        EthnicID,
                        ProfessionID,
                        Popularity,
                        CurrentState,
                        Remark,
                        ValueNumber,
                        IsDefault,
                        createUserID,
                        createUserName}, this.CreateContributorOperationCompleted, userState);
        }
        
        private void OnCreateContributorOperationCompleted(object arg) {
            if ((this.CreateContributorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContributorCompleted(this, new CreateContributorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BroadcastDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BroadcastDS : global::System.Data.DataSet {
        
        private CategoriesDataTable tableCategories;
        
        private StoragesDataTable tableStorages;
        
        private StorageZoneDataTable tableStorageZone;
        
        private StationsDataTable tableStations;
        
        private Workgroup2StationsDataTable tableWorkgroup2Stations;
        
        private TempleteBlocksDataTable tableTempleteBlocks;
        
        private WorkgroupsDataTable tableWorkgroups;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BroadcastDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BroadcastDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Categories"] != null)) {
                    base.Tables.Add(new CategoriesDataTable(ds.Tables["Categories"]));
                }
                if ((ds.Tables["Storages"] != null)) {
                    base.Tables.Add(new StoragesDataTable(ds.Tables["Storages"]));
                }
                if ((ds.Tables["StorageZone"] != null)) {
                    base.Tables.Add(new StorageZoneDataTable(ds.Tables["StorageZone"]));
                }
                if ((ds.Tables["Stations"] != null)) {
                    base.Tables.Add(new StationsDataTable(ds.Tables["Stations"]));
                }
                if ((ds.Tables["Workgroup2Stations"] != null)) {
                    base.Tables.Add(new Workgroup2StationsDataTable(ds.Tables["Workgroup2Stations"]));
                }
                if ((ds.Tables["TempleteBlocks"] != null)) {
                    base.Tables.Add(new TempleteBlocksDataTable(ds.Tables["TempleteBlocks"]));
                }
                if ((ds.Tables["Workgroups"] != null)) {
                    base.Tables.Add(new WorkgroupsDataTable(ds.Tables["Workgroups"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CategoriesDataTable Categories {
            get {
                return this.tableCategories;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StoragesDataTable Storages {
            get {
                return this.tableStorages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StorageZoneDataTable StorageZone {
            get {
                return this.tableStorageZone;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StationsDataTable Stations {
            get {
                return this.tableStations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Workgroup2StationsDataTable Workgroup2Stations {
            get {
                return this.tableWorkgroup2Stations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TempleteBlocksDataTable TempleteBlocks {
            get {
                return this.tableTempleteBlocks;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkgroupsDataTable Workgroups {
            get {
                return this.tableWorkgroups;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BroadcastDS cln = ((BroadcastDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Categories"] != null)) {
                    base.Tables.Add(new CategoriesDataTable(ds.Tables["Categories"]));
                }
                if ((ds.Tables["Storages"] != null)) {
                    base.Tables.Add(new StoragesDataTable(ds.Tables["Storages"]));
                }
                if ((ds.Tables["StorageZone"] != null)) {
                    base.Tables.Add(new StorageZoneDataTable(ds.Tables["StorageZone"]));
                }
                if ((ds.Tables["Stations"] != null)) {
                    base.Tables.Add(new StationsDataTable(ds.Tables["Stations"]));
                }
                if ((ds.Tables["Workgroup2Stations"] != null)) {
                    base.Tables.Add(new Workgroup2StationsDataTable(ds.Tables["Workgroup2Stations"]));
                }
                if ((ds.Tables["TempleteBlocks"] != null)) {
                    base.Tables.Add(new TempleteBlocksDataTable(ds.Tables["TempleteBlocks"]));
                }
                if ((ds.Tables["Workgroups"] != null)) {
                    base.Tables.Add(new WorkgroupsDataTable(ds.Tables["Workgroups"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCategories = ((CategoriesDataTable)(base.Tables["Categories"]));
            if ((initTable == true)) {
                if ((this.tableCategories != null)) {
                    this.tableCategories.InitVars();
                }
            }
            this.tableStorages = ((StoragesDataTable)(base.Tables["Storages"]));
            if ((initTable == true)) {
                if ((this.tableStorages != null)) {
                    this.tableStorages.InitVars();
                }
            }
            this.tableStorageZone = ((StorageZoneDataTable)(base.Tables["StorageZone"]));
            if ((initTable == true)) {
                if ((this.tableStorageZone != null)) {
                    this.tableStorageZone.InitVars();
                }
            }
            this.tableStations = ((StationsDataTable)(base.Tables["Stations"]));
            if ((initTable == true)) {
                if ((this.tableStations != null)) {
                    this.tableStations.InitVars();
                }
            }
            this.tableWorkgroup2Stations = ((Workgroup2StationsDataTable)(base.Tables["Workgroup2Stations"]));
            if ((initTable == true)) {
                if ((this.tableWorkgroup2Stations != null)) {
                    this.tableWorkgroup2Stations.InitVars();
                }
            }
            this.tableTempleteBlocks = ((TempleteBlocksDataTable)(base.Tables["TempleteBlocks"]));
            if ((initTable == true)) {
                if ((this.tableTempleteBlocks != null)) {
                    this.tableTempleteBlocks.InitVars();
                }
            }
            this.tableWorkgroups = ((WorkgroupsDataTable)(base.Tables["Workgroups"]));
            if ((initTable == true)) {
                if ((this.tableWorkgroups != null)) {
                    this.tableWorkgroups.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BroadcastDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BroadcastDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCategories = new CategoriesDataTable();
            base.Tables.Add(this.tableCategories);
            this.tableStorages = new StoragesDataTable();
            base.Tables.Add(this.tableStorages);
            this.tableStorageZone = new StorageZoneDataTable();
            base.Tables.Add(this.tableStorageZone);
            this.tableStations = new StationsDataTable();
            base.Tables.Add(this.tableStations);
            this.tableWorkgroup2Stations = new Workgroup2StationsDataTable();
            base.Tables.Add(this.tableWorkgroup2Stations);
            this.tableTempleteBlocks = new TempleteBlocksDataTable();
            base.Tables.Add(this.tableTempleteBlocks);
            this.tableWorkgroups = new WorkgroupsDataTable();
            base.Tables.Add(this.tableWorkgroups);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCategories() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStorages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStorageZone() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWorkgroup2Stations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTempleteBlocks() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWorkgroups() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BroadcastDS ds = new BroadcastDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CategoriesRowChangeEventHandler(object sender, CategoriesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StoragesRowChangeEventHandler(object sender, StoragesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StorageZoneRowChangeEventHandler(object sender, StorageZoneRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StationsRowChangeEventHandler(object sender, StationsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Workgroup2StationsRowChangeEventHandler(object sender, Workgroup2StationsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TempleteBlocksRowChangeEventHandler(object sender, TempleteBlocksRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WorkgroupsRowChangeEventHandler(object sender, WorkgroupsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CategoriesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCategoryID;
            
            private global::System.Data.DataColumn columnParentID;
            
            private global::System.Data.DataColumn columnWorkgroupID;
            
            private global::System.Data.DataColumn columnCategoryNumber;
            
            private global::System.Data.DataColumn columnCategoryCode;
            
            private global::System.Data.DataColumn columnCategoryType;
            
            private global::System.Data.DataColumn columnCategoryLevel;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnCountOfAudio;
            
            private global::System.Data.DataColumn columnDuration;
            
            private global::System.Data.DataColumn columnPassOrder;
            
            private global::System.Data.DataColumn columnCategoryColor;
            
            private global::System.Data.DataColumn columnProportion;
            
            private global::System.Data.DataColumn columnProportionType;
            
            private global::System.Data.DataColumn columnDigDepth;
            
            private global::System.Data.DataColumn columnDigType;
            
            private global::System.Data.DataColumn columnCategoryEdited;
            
            private global::System.Data.DataColumn columnStackType;
            
            private global::System.Data.DataColumn columnDaypartHandling;
            
            private global::System.Data.DataColumn columnDaypartPercentage;
            
            private global::System.Data.DataColumn columnAlternateDaypart;
            
            private global::System.Data.DataColumn columnAlternateDaypartPercentage;
            
            private global::System.Data.DataColumn columnClass1;
            
            private global::System.Data.DataColumn columnClass2;
            
            private global::System.Data.DataColumn columnClass3;
            
            private global::System.Data.DataColumn columnClass4;
            
            private global::System.Data.DataColumn columnClass5;
            
            private global::System.Data.DataColumn columnClass6;
            
            private global::System.Data.DataColumn columnClass7;
            
            private global::System.Data.DataColumn columnClass8;
            
            private global::System.Data.DataColumn columnMinChart;
            
            private global::System.Data.DataColumn columnChartEdited;
            
            private global::System.Data.DataColumn columnKickCountMon;
            
            private global::System.Data.DataColumn columnKickCountTue;
            
            private global::System.Data.DataColumn columnKickCountWed;
            
            private global::System.Data.DataColumn columnKickCountThu;
            
            private global::System.Data.DataColumn columnKickCountFri;
            
            private global::System.Data.DataColumn columnKickCountSat;
            
            private global::System.Data.DataColumn columnKickCountSun;
            
            private global::System.Data.DataColumn columnKickTimeMon;
            
            private global::System.Data.DataColumn columnKickTimeTue;
            
            private global::System.Data.DataColumn columnKickTimeWed;
            
            private global::System.Data.DataColumn columnKickTimeThu;
            
            private global::System.Data.DataColumn columnKickTimeFri;
            
            private global::System.Data.DataColumn columnKickTimeSat;
            
            private global::System.Data.DataColumn columnKickTimeSun;
            
            private global::System.Data.DataColumn columnShuffleOnce;
            
            private global::System.Data.DataColumn columnShuffleMon;
            
            private global::System.Data.DataColumn columnShuffleTue;
            
            private global::System.Data.DataColumn columnShuffleWed;
            
            private global::System.Data.DataColumn columnShuffleThu;
            
            private global::System.Data.DataColumn columnShuffleFri;
            
            private global::System.Data.DataColumn columnShuffleSat;
            
            private global::System.Data.DataColumn columnShuffleSun;
            
            private global::System.Data.DataColumn columnDateAdded;
            
            private global::System.Data.DataColumn columnCopyToMam;
            
            private global::System.Data.DataColumn columnPassSuperviseLevel;
            
            private global::System.Data.DataColumn columnRootID;
            
            private global::System.Data.DataColumn columnPriority;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CategoriesDataTable() {
                this.TableName = "Categories";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CategoriesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CategoriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryIDColumn {
                get {
                    return this.columnCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkgroupIDColumn {
                get {
                    return this.columnWorkgroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryNumberColumn {
                get {
                    return this.columnCategoryNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryCodeColumn {
                get {
                    return this.columnCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryTypeColumn {
                get {
                    return this.columnCategoryType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryLevelColumn {
                get {
                    return this.columnCategoryLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountOfAudioColumn {
                get {
                    return this.columnCountOfAudio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PassOrderColumn {
                get {
                    return this.columnPassOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryColorColumn {
                get {
                    return this.columnCategoryColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProportionColumn {
                get {
                    return this.columnProportion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProportionTypeColumn {
                get {
                    return this.columnProportionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DigDepthColumn {
                get {
                    return this.columnDigDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DigTypeColumn {
                get {
                    return this.columnDigType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryEditedColumn {
                get {
                    return this.columnCategoryEdited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StackTypeColumn {
                get {
                    return this.columnStackType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaypartHandlingColumn {
                get {
                    return this.columnDaypartHandling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaypartPercentageColumn {
                get {
                    return this.columnDaypartPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternateDaypartColumn {
                get {
                    return this.columnAlternateDaypart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternateDaypartPercentageColumn {
                get {
                    return this.columnAlternateDaypartPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class1Column {
                get {
                    return this.columnClass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class2Column {
                get {
                    return this.columnClass2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class3Column {
                get {
                    return this.columnClass3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class4Column {
                get {
                    return this.columnClass4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class5Column {
                get {
                    return this.columnClass5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class6Column {
                get {
                    return this.columnClass6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class7Column {
                get {
                    return this.columnClass7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Class8Column {
                get {
                    return this.columnClass8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinChartColumn {
                get {
                    return this.columnMinChart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChartEditedColumn {
                get {
                    return this.columnChartEdited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickCountMonColumn {
                get {
                    return this.columnKickCountMon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickCountTueColumn {
                get {
                    return this.columnKickCountTue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickCountWedColumn {
                get {
                    return this.columnKickCountWed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickCountThuColumn {
                get {
                    return this.columnKickCountThu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickCountFriColumn {
                get {
                    return this.columnKickCountFri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickCountSatColumn {
                get {
                    return this.columnKickCountSat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickCountSunColumn {
                get {
                    return this.columnKickCountSun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickTimeMonColumn {
                get {
                    return this.columnKickTimeMon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickTimeTueColumn {
                get {
                    return this.columnKickTimeTue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickTimeWedColumn {
                get {
                    return this.columnKickTimeWed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickTimeThuColumn {
                get {
                    return this.columnKickTimeThu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickTimeFriColumn {
                get {
                    return this.columnKickTimeFri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickTimeSatColumn {
                get {
                    return this.columnKickTimeSat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KickTimeSunColumn {
                get {
                    return this.columnKickTimeSun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleOnceColumn {
                get {
                    return this.columnShuffleOnce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleMonColumn {
                get {
                    return this.columnShuffleMon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleTueColumn {
                get {
                    return this.columnShuffleTue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleWedColumn {
                get {
                    return this.columnShuffleWed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleThuColumn {
                get {
                    return this.columnShuffleThu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleFriColumn {
                get {
                    return this.columnShuffleFri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleSatColumn {
                get {
                    return this.columnShuffleSat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShuffleSunColumn {
                get {
                    return this.columnShuffleSun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateAddedColumn {
                get {
                    return this.columnDateAdded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CopyToMamColumn {
                get {
                    return this.columnCopyToMam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PassSuperviseLevelColumn {
                get {
                    return this.columnPassSuperviseLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RootIDColumn {
                get {
                    return this.columnRootID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CategoriesRow this[int index] {
                get {
                    return ((CategoriesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CategoriesRowChangeEventHandler CategoriesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CategoriesRowChangeEventHandler CategoriesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CategoriesRowChangeEventHandler CategoriesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CategoriesRowChangeEventHandler CategoriesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCategoriesRow(CategoriesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CategoriesRow AddCategoriesRow(
                        System.Guid CategoryID, 
                        System.Guid ParentID, 
                        System.Guid WorkgroupID, 
                        int CategoryNumber, 
                        string CategoryCode, 
                        int CategoryType, 
                        int CategoryLevel, 
                        string CategoryName, 
                        int CountOfAudio, 
                        int Duration, 
                        byte PassOrder, 
                        int CategoryColor, 
                        int Proportion, 
                        byte ProportionType, 
                        int DigDepth, 
                        byte DigType, 
                        System.DateTime CategoryEdited, 
                        byte StackType, 
                        byte DaypartHandling, 
                        int DaypartPercentage, 
                        int AlternateDaypart, 
                        int AlternateDaypartPercentage, 
                        bool Class1, 
                        bool Class2, 
                        bool Class3, 
                        bool Class4, 
                        bool Class5, 
                        bool Class6, 
                        bool Class7, 
                        bool Class8, 
                        int MinChart, 
                        System.DateTime ChartEdited, 
                        int KickCountMon, 
                        int KickCountTue, 
                        int KickCountWed, 
                        int KickCountThu, 
                        int KickCountFri, 
                        int KickCountSat, 
                        int KickCountSun, 
                        int KickTimeMon, 
                        int KickTimeTue, 
                        int KickTimeWed, 
                        int KickTimeThu, 
                        int KickTimeFri, 
                        int KickTimeSat, 
                        int KickTimeSun, 
                        int ShuffleOnce, 
                        int ShuffleMon, 
                        int ShuffleTue, 
                        int ShuffleWed, 
                        int ShuffleThu, 
                        int ShuffleFri, 
                        int ShuffleSat, 
                        int ShuffleSun, 
                        System.DateTime DateAdded, 
                        int CopyToMam, 
                        int PassSuperviseLevel, 
                        System.Guid RootID, 
                        int Priority) {
                CategoriesRow rowCategoriesRow = ((CategoriesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CategoryID,
                        ParentID,
                        WorkgroupID,
                        CategoryNumber,
                        CategoryCode,
                        CategoryType,
                        CategoryLevel,
                        CategoryName,
                        CountOfAudio,
                        Duration,
                        PassOrder,
                        CategoryColor,
                        Proportion,
                        ProportionType,
                        DigDepth,
                        DigType,
                        CategoryEdited,
                        StackType,
                        DaypartHandling,
                        DaypartPercentage,
                        AlternateDaypart,
                        AlternateDaypartPercentage,
                        Class1,
                        Class2,
                        Class3,
                        Class4,
                        Class5,
                        Class6,
                        Class7,
                        Class8,
                        MinChart,
                        ChartEdited,
                        KickCountMon,
                        KickCountTue,
                        KickCountWed,
                        KickCountThu,
                        KickCountFri,
                        KickCountSat,
                        KickCountSun,
                        KickTimeMon,
                        KickTimeTue,
                        KickTimeWed,
                        KickTimeThu,
                        KickTimeFri,
                        KickTimeSat,
                        KickTimeSun,
                        ShuffleOnce,
                        ShuffleMon,
                        ShuffleTue,
                        ShuffleWed,
                        ShuffleThu,
                        ShuffleFri,
                        ShuffleSat,
                        ShuffleSun,
                        DateAdded,
                        CopyToMam,
                        PassSuperviseLevel,
                        RootID,
                        Priority};
                rowCategoriesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCategoriesRow);
                return rowCategoriesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CategoriesRow FindByCategoryID(System.Guid CategoryID) {
                return ((CategoriesRow)(this.Rows.Find(new object[] {
                            CategoryID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CategoriesDataTable cln = ((CategoriesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CategoriesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCategoryID = base.Columns["CategoryID"];
                this.columnParentID = base.Columns["ParentID"];
                this.columnWorkgroupID = base.Columns["WorkgroupID"];
                this.columnCategoryNumber = base.Columns["CategoryNumber"];
                this.columnCategoryCode = base.Columns["CategoryCode"];
                this.columnCategoryType = base.Columns["CategoryType"];
                this.columnCategoryLevel = base.Columns["CategoryLevel"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnCountOfAudio = base.Columns["CountOfAudio"];
                this.columnDuration = base.Columns["Duration"];
                this.columnPassOrder = base.Columns["PassOrder"];
                this.columnCategoryColor = base.Columns["CategoryColor"];
                this.columnProportion = base.Columns["Proportion"];
                this.columnProportionType = base.Columns["ProportionType"];
                this.columnDigDepth = base.Columns["DigDepth"];
                this.columnDigType = base.Columns["DigType"];
                this.columnCategoryEdited = base.Columns["CategoryEdited"];
                this.columnStackType = base.Columns["StackType"];
                this.columnDaypartHandling = base.Columns["DaypartHandling"];
                this.columnDaypartPercentage = base.Columns["DaypartPercentage"];
                this.columnAlternateDaypart = base.Columns["AlternateDaypart"];
                this.columnAlternateDaypartPercentage = base.Columns["AlternateDaypartPercentage"];
                this.columnClass1 = base.Columns["Class1"];
                this.columnClass2 = base.Columns["Class2"];
                this.columnClass3 = base.Columns["Class3"];
                this.columnClass4 = base.Columns["Class4"];
                this.columnClass5 = base.Columns["Class5"];
                this.columnClass6 = base.Columns["Class6"];
                this.columnClass7 = base.Columns["Class7"];
                this.columnClass8 = base.Columns["Class8"];
                this.columnMinChart = base.Columns["MinChart"];
                this.columnChartEdited = base.Columns["ChartEdited"];
                this.columnKickCountMon = base.Columns["KickCountMon"];
                this.columnKickCountTue = base.Columns["KickCountTue"];
                this.columnKickCountWed = base.Columns["KickCountWed"];
                this.columnKickCountThu = base.Columns["KickCountThu"];
                this.columnKickCountFri = base.Columns["KickCountFri"];
                this.columnKickCountSat = base.Columns["KickCountSat"];
                this.columnKickCountSun = base.Columns["KickCountSun"];
                this.columnKickTimeMon = base.Columns["KickTimeMon"];
                this.columnKickTimeTue = base.Columns["KickTimeTue"];
                this.columnKickTimeWed = base.Columns["KickTimeWed"];
                this.columnKickTimeThu = base.Columns["KickTimeThu"];
                this.columnKickTimeFri = base.Columns["KickTimeFri"];
                this.columnKickTimeSat = base.Columns["KickTimeSat"];
                this.columnKickTimeSun = base.Columns["KickTimeSun"];
                this.columnShuffleOnce = base.Columns["ShuffleOnce"];
                this.columnShuffleMon = base.Columns["ShuffleMon"];
                this.columnShuffleTue = base.Columns["ShuffleTue"];
                this.columnShuffleWed = base.Columns["ShuffleWed"];
                this.columnShuffleThu = base.Columns["ShuffleThu"];
                this.columnShuffleFri = base.Columns["ShuffleFri"];
                this.columnShuffleSat = base.Columns["ShuffleSat"];
                this.columnShuffleSun = base.Columns["ShuffleSun"];
                this.columnDateAdded = base.Columns["DateAdded"];
                this.columnCopyToMam = base.Columns["CopyToMam"];
                this.columnPassSuperviseLevel = base.Columns["PassSuperviseLevel"];
                this.columnRootID = base.Columns["RootID"];
                this.columnPriority = base.Columns["Priority"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCategoryID = new global::System.Data.DataColumn("CategoryID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryID);
                this.columnParentID = new global::System.Data.DataColumn("ParentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentID);
                this.columnWorkgroupID = new global::System.Data.DataColumn("WorkgroupID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkgroupID);
                this.columnCategoryNumber = new global::System.Data.DataColumn("CategoryNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryNumber);
                this.columnCategoryCode = new global::System.Data.DataColumn("CategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryCode);
                this.columnCategoryType = new global::System.Data.DataColumn("CategoryType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryType);
                this.columnCategoryLevel = new global::System.Data.DataColumn("CategoryLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryLevel);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnCountOfAudio = new global::System.Data.DataColumn("CountOfAudio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountOfAudio);
                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnPassOrder = new global::System.Data.DataColumn("PassOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassOrder);
                this.columnCategoryColor = new global::System.Data.DataColumn("CategoryColor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryColor);
                this.columnProportion = new global::System.Data.DataColumn("Proportion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProportion);
                this.columnProportionType = new global::System.Data.DataColumn("ProportionType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProportionType);
                this.columnDigDepth = new global::System.Data.DataColumn("DigDepth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDigDepth);
                this.columnDigType = new global::System.Data.DataColumn("DigType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDigType);
                this.columnCategoryEdited = new global::System.Data.DataColumn("CategoryEdited", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryEdited);
                this.columnStackType = new global::System.Data.DataColumn("StackType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStackType);
                this.columnDaypartHandling = new global::System.Data.DataColumn("DaypartHandling", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaypartHandling);
                this.columnDaypartPercentage = new global::System.Data.DataColumn("DaypartPercentage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaypartPercentage);
                this.columnAlternateDaypart = new global::System.Data.DataColumn("AlternateDaypart", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternateDaypart);
                this.columnAlternateDaypartPercentage = new global::System.Data.DataColumn("AlternateDaypartPercentage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternateDaypartPercentage);
                this.columnClass1 = new global::System.Data.DataColumn("Class1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass1);
                this.columnClass2 = new global::System.Data.DataColumn("Class2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass2);
                this.columnClass3 = new global::System.Data.DataColumn("Class3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass3);
                this.columnClass4 = new global::System.Data.DataColumn("Class4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass4);
                this.columnClass5 = new global::System.Data.DataColumn("Class5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass5);
                this.columnClass6 = new global::System.Data.DataColumn("Class6", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass6);
                this.columnClass7 = new global::System.Data.DataColumn("Class7", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass7);
                this.columnClass8 = new global::System.Data.DataColumn("Class8", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass8);
                this.columnMinChart = new global::System.Data.DataColumn("MinChart", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinChart);
                this.columnChartEdited = new global::System.Data.DataColumn("ChartEdited", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChartEdited);
                this.columnKickCountMon = new global::System.Data.DataColumn("KickCountMon", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickCountMon);
                this.columnKickCountTue = new global::System.Data.DataColumn("KickCountTue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickCountTue);
                this.columnKickCountWed = new global::System.Data.DataColumn("KickCountWed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickCountWed);
                this.columnKickCountThu = new global::System.Data.DataColumn("KickCountThu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickCountThu);
                this.columnKickCountFri = new global::System.Data.DataColumn("KickCountFri", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickCountFri);
                this.columnKickCountSat = new global::System.Data.DataColumn("KickCountSat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickCountSat);
                this.columnKickCountSun = new global::System.Data.DataColumn("KickCountSun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickCountSun);
                this.columnKickTimeMon = new global::System.Data.DataColumn("KickTimeMon", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickTimeMon);
                this.columnKickTimeTue = new global::System.Data.DataColumn("KickTimeTue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickTimeTue);
                this.columnKickTimeWed = new global::System.Data.DataColumn("KickTimeWed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickTimeWed);
                this.columnKickTimeThu = new global::System.Data.DataColumn("KickTimeThu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickTimeThu);
                this.columnKickTimeFri = new global::System.Data.DataColumn("KickTimeFri", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickTimeFri);
                this.columnKickTimeSat = new global::System.Data.DataColumn("KickTimeSat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickTimeSat);
                this.columnKickTimeSun = new global::System.Data.DataColumn("KickTimeSun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKickTimeSun);
                this.columnShuffleOnce = new global::System.Data.DataColumn("ShuffleOnce", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleOnce);
                this.columnShuffleMon = new global::System.Data.DataColumn("ShuffleMon", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleMon);
                this.columnShuffleTue = new global::System.Data.DataColumn("ShuffleTue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleTue);
                this.columnShuffleWed = new global::System.Data.DataColumn("ShuffleWed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleWed);
                this.columnShuffleThu = new global::System.Data.DataColumn("ShuffleThu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleThu);
                this.columnShuffleFri = new global::System.Data.DataColumn("ShuffleFri", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleFri);
                this.columnShuffleSat = new global::System.Data.DataColumn("ShuffleSat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleSat);
                this.columnShuffleSun = new global::System.Data.DataColumn("ShuffleSun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShuffleSun);
                this.columnDateAdded = new global::System.Data.DataColumn("DateAdded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateAdded);
                this.columnCopyToMam = new global::System.Data.DataColumn("CopyToMam", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopyToMam);
                this.columnPassSuperviseLevel = new global::System.Data.DataColumn("PassSuperviseLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassSuperviseLevel);
                this.columnRootID = new global::System.Data.DataColumn("RootID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRootID);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCategoryID}, true));
                this.columnCategoryID.AllowDBNull = false;
                this.columnCategoryID.Unique = true;
                this.columnCategoryCode.MaxLength = 50;
                this.columnCategoryName.MaxLength = 50;
                this.columnPassOrder.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CategoriesRow NewCategoriesRow() {
                return ((CategoriesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CategoriesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CategoriesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CategoriesRowChanged != null)) {
                    this.CategoriesRowChanged(this, new CategoriesRowChangeEvent(((CategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CategoriesRowChanging != null)) {
                    this.CategoriesRowChanging(this, new CategoriesRowChangeEvent(((CategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CategoriesRowDeleted != null)) {
                    this.CategoriesRowDeleted(this, new CategoriesRowChangeEvent(((CategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CategoriesRowDeleting != null)) {
                    this.CategoriesRowDeleting(this, new CategoriesRowChangeEvent(((CategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCategoriesRow(CategoriesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BroadcastDS ds = new BroadcastDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CategoriesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StoragesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnStorageName;
            
            private global::System.Data.DataColumn columnLastEnter;
            
            private global::System.Data.DataColumn columnCategoryType;
            
            private global::System.Data.DataColumn columnWorkgroupID;
            
            private global::System.Data.DataColumn columnAudServer1;
            
            private global::System.Data.DataColumn columnAudServer2;
            
            private global::System.Data.DataColumn columnAudServer3;
            
            private global::System.Data.DataColumn columnAudServer4;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDateAdded;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesDataTable() {
                this.TableName = "Storages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoragesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StoragesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageNameColumn {
                get {
                    return this.columnStorageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastEnterColumn {
                get {
                    return this.columnLastEnter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryTypeColumn {
                get {
                    return this.columnCategoryType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkgroupIDColumn {
                get {
                    return this.columnWorkgroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AudServer1Column {
                get {
                    return this.columnAudServer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AudServer2Column {
                get {
                    return this.columnAudServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AudServer3Column {
                get {
                    return this.columnAudServer3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AudServer4Column {
                get {
                    return this.columnAudServer4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateAddedColumn {
                get {
                    return this.columnDateAdded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow this[int index] {
                get {
                    return ((StoragesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStoragesRow(StoragesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow AddStoragesRow(System.Guid StorageID, string StorageName, bool LastEnter, int CategoryType, System.Guid WorkgroupID, string AudServer1, string AudServer2, string AudServer3, string AudServer4, string Description, System.DateTime DateAdded, int MaxSpaceMB, int FreeSpaceMB, int MaxSpaceHour, int FreeSpaceHour) {
                StoragesRow rowStoragesRow = ((StoragesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StorageID,
                        StorageName,
                        LastEnter,
                        CategoryType,
                        WorkgroupID,
                        AudServer1,
                        AudServer2,
                        AudServer3,
                        AudServer4,
                        Description,
                        DateAdded,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour};
                rowStoragesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStoragesRow);
                return rowStoragesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow FindByStorageID(System.Guid StorageID) {
                return ((StoragesRow)(this.Rows.Find(new object[] {
                            StorageID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StoragesDataTable cln = ((StoragesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StoragesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStorageID = base.Columns["StorageID"];
                this.columnStorageName = base.Columns["StorageName"];
                this.columnLastEnter = base.Columns["LastEnter"];
                this.columnCategoryType = base.Columns["CategoryType"];
                this.columnWorkgroupID = base.Columns["WorkgroupID"];
                this.columnAudServer1 = base.Columns["AudServer1"];
                this.columnAudServer2 = base.Columns["AudServer2"];
                this.columnAudServer3 = base.Columns["AudServer3"];
                this.columnAudServer4 = base.Columns["AudServer4"];
                this.columnDescription = base.Columns["Description"];
                this.columnDateAdded = base.Columns["DateAdded"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnStorageName = new global::System.Data.DataColumn("StorageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageName);
                this.columnLastEnter = new global::System.Data.DataColumn("LastEnter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEnter);
                this.columnCategoryType = new global::System.Data.DataColumn("CategoryType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryType);
                this.columnWorkgroupID = new global::System.Data.DataColumn("WorkgroupID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkgroupID);
                this.columnAudServer1 = new global::System.Data.DataColumn("AudServer1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAudServer1);
                this.columnAudServer2 = new global::System.Data.DataColumn("AudServer2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAudServer2);
                this.columnAudServer3 = new global::System.Data.DataColumn("AudServer3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAudServer3);
                this.columnAudServer4 = new global::System.Data.DataColumn("AudServer4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAudServer4);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDateAdded = new global::System.Data.DataColumn("DateAdded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateAdded);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStorageID}, true));
                this.columnStorageID.AllowDBNull = false;
                this.columnStorageID.Unique = true;
                this.columnStorageName.MaxLength = 50;
                this.columnAudServer1.MaxLength = 50;
                this.columnAudServer2.MaxLength = 50;
                this.columnAudServer3.MaxLength = 50;
                this.columnAudServer4.MaxLength = 50;
                this.columnDescription.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow NewStoragesRow() {
                return ((StoragesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StoragesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StoragesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StoragesRowChanged != null)) {
                    this.StoragesRowChanged(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StoragesRowChanging != null)) {
                    this.StoragesRowChanging(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StoragesRowDeleted != null)) {
                    this.StoragesRowDeleted(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StoragesRowDeleting != null)) {
                    this.StoragesRowDeleting(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStoragesRow(StoragesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BroadcastDS ds = new BroadcastDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StoragesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StorageZoneDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnZoneID;
            
            private global::System.Data.DataColumn columnFtpServer1;
            
            private global::System.Data.DataColumn columnFtpPort1;
            
            private global::System.Data.DataColumn columnFtpDir1;
            
            private global::System.Data.DataColumn columnFtpUser1;
            
            private global::System.Data.DataColumn columnFtpPassword1;
            
            private global::System.Data.DataColumn columnFtpServer2;
            
            private global::System.Data.DataColumn columnFtpPort2;
            
            private global::System.Data.DataColumn columnFtpDir2;
            
            private global::System.Data.DataColumn columnFtpUser2;
            
            private global::System.Data.DataColumn columnFtpPassword2;
            
            private global::System.Data.DataColumn columnFtpServer3;
            
            private global::System.Data.DataColumn columnFtpUser3;
            
            private global::System.Data.DataColumn columnFtpPassword3;
            
            private global::System.Data.DataColumn columnFtpPort3;
            
            private global::System.Data.DataColumn columnFtpDir3;
            
            private global::System.Data.DataColumn columnFtpServer4;
            
            private global::System.Data.DataColumn columnFtpPort4;
            
            private global::System.Data.DataColumn columnFtpDir4;
            
            private global::System.Data.DataColumn columnFtpUser4;
            
            private global::System.Data.DataColumn columnFtpPassword4;
            
            private global::System.Data.DataColumn columnFileStreamServer1;
            
            private global::System.Data.DataColumn columnFileStreamPort1;
            
            private global::System.Data.DataColumn columnFileStreamServer2;
            
            private global::System.Data.DataColumn columnFileStreamPort2;
            
            private global::System.Data.DataColumn columnFileStreamServer3;
            
            private global::System.Data.DataColumn columnFileStreamPort3;
            
            private global::System.Data.DataColumn columnFileStreamServer4;
            
            private global::System.Data.DataColumn columnFileStreamPort4;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneDataTable() {
                this.TableName = "StorageZone";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StorageZoneDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZoneIDColumn {
                get {
                    return this.columnZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpServer1Column {
                get {
                    return this.columnFtpServer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPort1Column {
                get {
                    return this.columnFtpPort1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpDir1Column {
                get {
                    return this.columnFtpDir1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpUser1Column {
                get {
                    return this.columnFtpUser1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPassword1Column {
                get {
                    return this.columnFtpPassword1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpServer2Column {
                get {
                    return this.columnFtpServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPort2Column {
                get {
                    return this.columnFtpPort2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpDir2Column {
                get {
                    return this.columnFtpDir2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpUser2Column {
                get {
                    return this.columnFtpUser2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPassword2Column {
                get {
                    return this.columnFtpPassword2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpServer3Column {
                get {
                    return this.columnFtpServer3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpUser3Column {
                get {
                    return this.columnFtpUser3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPassword3Column {
                get {
                    return this.columnFtpPassword3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPort3Column {
                get {
                    return this.columnFtpPort3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpDir3Column {
                get {
                    return this.columnFtpDir3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpServer4Column {
                get {
                    return this.columnFtpServer4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPort4Column {
                get {
                    return this.columnFtpPort4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpDir4Column {
                get {
                    return this.columnFtpDir4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpUser4Column {
                get {
                    return this.columnFtpUser4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtpPassword4Column {
                get {
                    return this.columnFtpPassword4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamServer1Column {
                get {
                    return this.columnFileStreamServer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamPort1Column {
                get {
                    return this.columnFileStreamPort1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamServer2Column {
                get {
                    return this.columnFileStreamServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamPort2Column {
                get {
                    return this.columnFileStreamPort2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamServer3Column {
                get {
                    return this.columnFileStreamServer3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamPort3Column {
                get {
                    return this.columnFileStreamPort3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamServer4Column {
                get {
                    return this.columnFileStreamServer4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileStreamPort4Column {
                get {
                    return this.columnFileStreamPort4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneRow this[int index] {
                get {
                    return ((StorageZoneRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneRowChangeEventHandler StorageZoneRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneRowChangeEventHandler StorageZoneRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneRowChangeEventHandler StorageZoneRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneRowChangeEventHandler StorageZoneRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStorageZoneRow(StorageZoneRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneRow AddStorageZoneRow(
                        System.Guid StorageID, 
                        int ZoneID, 
                        string FtpServer1, 
                        int FtpPort1, 
                        string FtpDir1, 
                        string FtpUser1, 
                        string FtpPassword1, 
                        string FtpServer2, 
                        int FtpPort2, 
                        string FtpDir2, 
                        string FtpUser2, 
                        string FtpPassword2, 
                        string FtpServer3, 
                        string FtpUser3, 
                        string FtpPassword3, 
                        int FtpPort3, 
                        string FtpDir3, 
                        string FtpServer4, 
                        int FtpPort4, 
                        string FtpDir4, 
                        string FtpUser4, 
                        string FtpPassword4, 
                        string FileStreamServer1, 
                        int FileStreamPort1, 
                        string FileStreamServer2, 
                        int FileStreamPort2, 
                        string FileStreamServer3, 
                        int FileStreamPort3, 
                        string FileStreamServer4, 
                        int FileStreamPort4, 
                        string Name) {
                StorageZoneRow rowStorageZoneRow = ((StorageZoneRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StorageID,
                        ZoneID,
                        FtpServer1,
                        FtpPort1,
                        FtpDir1,
                        FtpUser1,
                        FtpPassword1,
                        FtpServer2,
                        FtpPort2,
                        FtpDir2,
                        FtpUser2,
                        FtpPassword2,
                        FtpServer3,
                        FtpUser3,
                        FtpPassword3,
                        FtpPort3,
                        FtpDir3,
                        FtpServer4,
                        FtpPort4,
                        FtpDir4,
                        FtpUser4,
                        FtpPassword4,
                        FileStreamServer1,
                        FileStreamPort1,
                        FileStreamServer2,
                        FileStreamPort2,
                        FileStreamServer3,
                        FileStreamPort3,
                        FileStreamServer4,
                        FileStreamPort4,
                        Name};
                rowStorageZoneRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStorageZoneRow);
                return rowStorageZoneRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneRow FindByStorageIDZoneID(System.Guid StorageID, int ZoneID) {
                return ((StorageZoneRow)(this.Rows.Find(new object[] {
                            StorageID,
                            ZoneID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StorageZoneDataTable cln = ((StorageZoneDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StorageZoneDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStorageID = base.Columns["StorageID"];
                this.columnZoneID = base.Columns["ZoneID"];
                this.columnFtpServer1 = base.Columns["FtpServer1"];
                this.columnFtpPort1 = base.Columns["FtpPort1"];
                this.columnFtpDir1 = base.Columns["FtpDir1"];
                this.columnFtpUser1 = base.Columns["FtpUser1"];
                this.columnFtpPassword1 = base.Columns["FtpPassword1"];
                this.columnFtpServer2 = base.Columns["FtpServer2"];
                this.columnFtpPort2 = base.Columns["FtpPort2"];
                this.columnFtpDir2 = base.Columns["FtpDir2"];
                this.columnFtpUser2 = base.Columns["FtpUser2"];
                this.columnFtpPassword2 = base.Columns["FtpPassword2"];
                this.columnFtpServer3 = base.Columns["FtpServer3"];
                this.columnFtpUser3 = base.Columns["FtpUser3"];
                this.columnFtpPassword3 = base.Columns["FtpPassword3"];
                this.columnFtpPort3 = base.Columns["FtpPort3"];
                this.columnFtpDir3 = base.Columns["FtpDir3"];
                this.columnFtpServer4 = base.Columns["FtpServer4"];
                this.columnFtpPort4 = base.Columns["FtpPort4"];
                this.columnFtpDir4 = base.Columns["FtpDir4"];
                this.columnFtpUser4 = base.Columns["FtpUser4"];
                this.columnFtpPassword4 = base.Columns["FtpPassword4"];
                this.columnFileStreamServer1 = base.Columns["FileStreamServer1"];
                this.columnFileStreamPort1 = base.Columns["FileStreamPort1"];
                this.columnFileStreamServer2 = base.Columns["FileStreamServer2"];
                this.columnFileStreamPort2 = base.Columns["FileStreamPort2"];
                this.columnFileStreamServer3 = base.Columns["FileStreamServer3"];
                this.columnFileStreamPort3 = base.Columns["FileStreamPort3"];
                this.columnFileStreamServer4 = base.Columns["FileStreamServer4"];
                this.columnFileStreamPort4 = base.Columns["FileStreamPort4"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnZoneID = new global::System.Data.DataColumn("ZoneID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneID);
                this.columnFtpServer1 = new global::System.Data.DataColumn("FtpServer1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpServer1);
                this.columnFtpPort1 = new global::System.Data.DataColumn("FtpPort1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPort1);
                this.columnFtpDir1 = new global::System.Data.DataColumn("FtpDir1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpDir1);
                this.columnFtpUser1 = new global::System.Data.DataColumn("FtpUser1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpUser1);
                this.columnFtpPassword1 = new global::System.Data.DataColumn("FtpPassword1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPassword1);
                this.columnFtpServer2 = new global::System.Data.DataColumn("FtpServer2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpServer2);
                this.columnFtpPort2 = new global::System.Data.DataColumn("FtpPort2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPort2);
                this.columnFtpDir2 = new global::System.Data.DataColumn("FtpDir2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpDir2);
                this.columnFtpUser2 = new global::System.Data.DataColumn("FtpUser2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpUser2);
                this.columnFtpPassword2 = new global::System.Data.DataColumn("FtpPassword2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPassword2);
                this.columnFtpServer3 = new global::System.Data.DataColumn("FtpServer3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpServer3);
                this.columnFtpUser3 = new global::System.Data.DataColumn("FtpUser3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpUser3);
                this.columnFtpPassword3 = new global::System.Data.DataColumn("FtpPassword3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPassword3);
                this.columnFtpPort3 = new global::System.Data.DataColumn("FtpPort3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPort3);
                this.columnFtpDir3 = new global::System.Data.DataColumn("FtpDir3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpDir3);
                this.columnFtpServer4 = new global::System.Data.DataColumn("FtpServer4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpServer4);
                this.columnFtpPort4 = new global::System.Data.DataColumn("FtpPort4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPort4);
                this.columnFtpDir4 = new global::System.Data.DataColumn("FtpDir4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpDir4);
                this.columnFtpUser4 = new global::System.Data.DataColumn("FtpUser4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpUser4);
                this.columnFtpPassword4 = new global::System.Data.DataColumn("FtpPassword4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtpPassword4);
                this.columnFileStreamServer1 = new global::System.Data.DataColumn("FileStreamServer1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamServer1);
                this.columnFileStreamPort1 = new global::System.Data.DataColumn("FileStreamPort1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamPort1);
                this.columnFileStreamServer2 = new global::System.Data.DataColumn("FileStreamServer2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamServer2);
                this.columnFileStreamPort2 = new global::System.Data.DataColumn("FileStreamPort2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamPort2);
                this.columnFileStreamServer3 = new global::System.Data.DataColumn("FileStreamServer3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamServer3);
                this.columnFileStreamPort3 = new global::System.Data.DataColumn("FileStreamPort3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamPort3);
                this.columnFileStreamServer4 = new global::System.Data.DataColumn("FileStreamServer4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamServer4);
                this.columnFileStreamPort4 = new global::System.Data.DataColumn("FileStreamPort4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileStreamPort4);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStorageID,
                                this.columnZoneID}, true));
                this.columnStorageID.AllowDBNull = false;
                this.columnZoneID.AllowDBNull = false;
                this.columnFtpServer1.MaxLength = 50;
                this.columnFtpDir1.MaxLength = 50;
                this.columnFtpUser1.MaxLength = 50;
                this.columnFtpPassword1.MaxLength = 50;
                this.columnFtpServer2.MaxLength = 50;
                this.columnFtpDir2.MaxLength = 50;
                this.columnFtpUser2.MaxLength = 50;
                this.columnFtpPassword2.MaxLength = 50;
                this.columnFtpServer3.MaxLength = 50;
                this.columnFtpUser3.MaxLength = 50;
                this.columnFtpPassword3.MaxLength = 50;
                this.columnFtpDir3.MaxLength = 50;
                this.columnFtpServer4.MaxLength = 50;
                this.columnFtpDir4.MaxLength = 50;
                this.columnFtpUser4.MaxLength = 50;
                this.columnFtpPassword4.MaxLength = 50;
                this.columnFileStreamServer1.MaxLength = 50;
                this.columnFileStreamServer2.MaxLength = 50;
                this.columnFileStreamServer3.MaxLength = 50;
                this.columnFileStreamServer4.MaxLength = 50;
                this.columnName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneRow NewStorageZoneRow() {
                return ((StorageZoneRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StorageZoneRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StorageZoneRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StorageZoneRowChanged != null)) {
                    this.StorageZoneRowChanged(this, new StorageZoneRowChangeEvent(((StorageZoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StorageZoneRowChanging != null)) {
                    this.StorageZoneRowChanging(this, new StorageZoneRowChangeEvent(((StorageZoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StorageZoneRowDeleted != null)) {
                    this.StorageZoneRowDeleted(this, new StorageZoneRowChangeEvent(((StorageZoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StorageZoneRowDeleting != null)) {
                    this.StorageZoneRowDeleting(this, new StorageZoneRowChangeEvent(((StorageZoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStorageZoneRow(StorageZoneRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BroadcastDS ds = new BroadcastDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StorageZoneDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StationsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStationID;
            
            private global::System.Data.DataColumn columnStationName;
            
            private global::System.Data.DataColumn columnStationNumber;
            
            private global::System.Data.DataColumn columnIsBatchBroadcast;
            
            private global::System.Data.DataColumn columnHasCategory;
            
            private global::System.Data.DataColumn columnUniqueAdCategory;
            
            private global::System.Data.DataColumn columnLockedClockInTemplate;
            
            private global::System.Data.DataColumn columnDatabaseNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StationsDataTable() {
                this.TableName = "Stations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StationIDColumn {
                get {
                    return this.columnStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StationNameColumn {
                get {
                    return this.columnStationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StationNumberColumn {
                get {
                    return this.columnStationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsBatchBroadcastColumn {
                get {
                    return this.columnIsBatchBroadcast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HasCategoryColumn {
                get {
                    return this.columnHasCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UniqueAdCategoryColumn {
                get {
                    return this.columnUniqueAdCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockedClockInTemplateColumn {
                get {
                    return this.columnLockedClockInTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatabaseNumberColumn {
                get {
                    return this.columnDatabaseNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StationsRow this[int index] {
                get {
                    return ((StationsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StationsRowChangeEventHandler StationsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StationsRowChangeEventHandler StationsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StationsRowChangeEventHandler StationsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StationsRowChangeEventHandler StationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStationsRow(StationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StationsRow AddStationsRow(System.Guid StationID, string StationName, int StationNumber, bool IsBatchBroadcast, byte HasCategory, byte UniqueAdCategory, byte LockedClockInTemplate, int DatabaseNumber) {
                StationsRow rowStationsRow = ((StationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StationID,
                        StationName,
                        StationNumber,
                        IsBatchBroadcast,
                        HasCategory,
                        UniqueAdCategory,
                        LockedClockInTemplate,
                        DatabaseNumber};
                rowStationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStationsRow);
                return rowStationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StationsRow FindByStationID(System.Guid StationID) {
                return ((StationsRow)(this.Rows.Find(new object[] {
                            StationID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StationsDataTable cln = ((StationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStationID = base.Columns["StationID"];
                this.columnStationName = base.Columns["StationName"];
                this.columnStationNumber = base.Columns["StationNumber"];
                this.columnIsBatchBroadcast = base.Columns["IsBatchBroadcast"];
                this.columnHasCategory = base.Columns["HasCategory"];
                this.columnUniqueAdCategory = base.Columns["UniqueAdCategory"];
                this.columnLockedClockInTemplate = base.Columns["LockedClockInTemplate"];
                this.columnDatabaseNumber = base.Columns["DatabaseNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStationID = new global::System.Data.DataColumn("StationID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationID);
                this.columnStationName = new global::System.Data.DataColumn("StationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationName);
                this.columnStationNumber = new global::System.Data.DataColumn("StationNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationNumber);
                this.columnIsBatchBroadcast = new global::System.Data.DataColumn("IsBatchBroadcast", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBatchBroadcast);
                this.columnHasCategory = new global::System.Data.DataColumn("HasCategory", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasCategory);
                this.columnUniqueAdCategory = new global::System.Data.DataColumn("UniqueAdCategory", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniqueAdCategory);
                this.columnLockedClockInTemplate = new global::System.Data.DataColumn("LockedClockInTemplate", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedClockInTemplate);
                this.columnDatabaseNumber = new global::System.Data.DataColumn("DatabaseNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatabaseNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStationID}, true));
                this.columnStationID.AllowDBNull = false;
                this.columnStationID.Unique = true;
                this.columnStationName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StationsRow NewStationsRow() {
                return ((StationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StationsRowChanged != null)) {
                    this.StationsRowChanged(this, new StationsRowChangeEvent(((StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StationsRowChanging != null)) {
                    this.StationsRowChanging(this, new StationsRowChangeEvent(((StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StationsRowDeleted != null)) {
                    this.StationsRowDeleted(this, new StationsRowChangeEvent(((StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StationsRowDeleting != null)) {
                    this.StationsRowDeleting(this, new StationsRowChangeEvent(((StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStationsRow(StationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BroadcastDS ds = new BroadcastDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Workgroup2StationsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkgroupID;
            
            private global::System.Data.DataColumn columnStationID;
            
            private global::System.Data.DataColumn columnInStations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Workgroup2StationsDataTable() {
                this.TableName = "Workgroup2Stations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Workgroup2StationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Workgroup2StationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkgroupIDColumn {
                get {
                    return this.columnWorkgroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StationIDColumn {
                get {
                    return this.columnStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InStationsColumn {
                get {
                    return this.columnInStations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Workgroup2StationsRow this[int index] {
                get {
                    return ((Workgroup2StationsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Workgroup2StationsRowChangeEventHandler Workgroup2StationsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Workgroup2StationsRowChangeEventHandler Workgroup2StationsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Workgroup2StationsRowChangeEventHandler Workgroup2StationsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Workgroup2StationsRowChangeEventHandler Workgroup2StationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWorkgroup2StationsRow(Workgroup2StationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Workgroup2StationsRow AddWorkgroup2StationsRow(System.Guid WorkgroupID, System.Guid StationID, byte InStations) {
                Workgroup2StationsRow rowWorkgroup2StationsRow = ((Workgroup2StationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkgroupID,
                        StationID,
                        InStations};
                rowWorkgroup2StationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkgroup2StationsRow);
                return rowWorkgroup2StationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Workgroup2StationsRow FindByWorkgroupIDStationID(System.Guid WorkgroupID, System.Guid StationID) {
                return ((Workgroup2StationsRow)(this.Rows.Find(new object[] {
                            WorkgroupID,
                            StationID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Workgroup2StationsDataTable cln = ((Workgroup2StationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Workgroup2StationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWorkgroupID = base.Columns["WorkgroupID"];
                this.columnStationID = base.Columns["StationID"];
                this.columnInStations = base.Columns["InStations"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWorkgroupID = new global::System.Data.DataColumn("WorkgroupID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkgroupID);
                this.columnStationID = new global::System.Data.DataColumn("StationID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationID);
                this.columnInStations = new global::System.Data.DataColumn("InStations", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInStations);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkgroupID,
                                this.columnStationID}, true));
                this.columnWorkgroupID.AllowDBNull = false;
                this.columnStationID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Workgroup2StationsRow NewWorkgroup2StationsRow() {
                return ((Workgroup2StationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Workgroup2StationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Workgroup2StationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Workgroup2StationsRowChanged != null)) {
                    this.Workgroup2StationsRowChanged(this, new Workgroup2StationsRowChangeEvent(((Workgroup2StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Workgroup2StationsRowChanging != null)) {
                    this.Workgroup2StationsRowChanging(this, new Workgroup2StationsRowChangeEvent(((Workgroup2StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Workgroup2StationsRowDeleted != null)) {
                    this.Workgroup2StationsRowDeleted(this, new Workgroup2StationsRowChangeEvent(((Workgroup2StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Workgroup2StationsRowDeleting != null)) {
                    this.Workgroup2StationsRowDeleting(this, new Workgroup2StationsRowChangeEvent(((Workgroup2StationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWorkgroup2StationsRow(Workgroup2StationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BroadcastDS ds = new BroadcastDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Workgroup2StationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TempleteBlocksDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBlockID;
            
            private global::System.Data.DataColumn columnBlockNumber;
            
            private global::System.Data.DataColumn columnBlockName;
            
            private global::System.Data.DataColumn columnBlockCode;
            
            private global::System.Data.DataColumn columnStationID;
            
            private global::System.Data.DataColumn columnPassSuperviseLevel;
            
            private global::System.Data.DataColumn columnDateAdded;
            
            private global::System.Data.DataColumn columnBlockType;
            
            private global::System.Data.DataColumn columnItemsCount;
            
            private global::System.Data.DataColumn columnPriority;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TempleteBlocksDataTable() {
                this.TableName = "TempleteBlocks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TempleteBlocksDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TempleteBlocksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlockIDColumn {
                get {
                    return this.columnBlockID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlockNumberColumn {
                get {
                    return this.columnBlockNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlockNameColumn {
                get {
                    return this.columnBlockName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlockCodeColumn {
                get {
                    return this.columnBlockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StationIDColumn {
                get {
                    return this.columnStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PassSuperviseLevelColumn {
                get {
                    return this.columnPassSuperviseLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateAddedColumn {
                get {
                    return this.columnDateAdded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlockTypeColumn {
                get {
                    return this.columnBlockType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemsCountColumn {
                get {
                    return this.columnItemsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TempleteBlocksRow this[int index] {
                get {
                    return ((TempleteBlocksRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TempleteBlocksRowChangeEventHandler TempleteBlocksRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TempleteBlocksRowChangeEventHandler TempleteBlocksRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TempleteBlocksRowChangeEventHandler TempleteBlocksRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TempleteBlocksRowChangeEventHandler TempleteBlocksRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTempleteBlocksRow(TempleteBlocksRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TempleteBlocksRow AddTempleteBlocksRow(System.Guid BlockID, int BlockNumber, string BlockName, string BlockCode, System.Guid StationID, int PassSuperviseLevel, System.DateTime DateAdded, int BlockType, int ItemsCount, int Priority) {
                TempleteBlocksRow rowTempleteBlocksRow = ((TempleteBlocksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BlockID,
                        BlockNumber,
                        BlockName,
                        BlockCode,
                        StationID,
                        PassSuperviseLevel,
                        DateAdded,
                        BlockType,
                        ItemsCount,
                        Priority};
                rowTempleteBlocksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTempleteBlocksRow);
                return rowTempleteBlocksRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TempleteBlocksRow FindByBlockID(System.Guid BlockID) {
                return ((TempleteBlocksRow)(this.Rows.Find(new object[] {
                            BlockID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TempleteBlocksDataTable cln = ((TempleteBlocksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TempleteBlocksDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBlockID = base.Columns["BlockID"];
                this.columnBlockNumber = base.Columns["BlockNumber"];
                this.columnBlockName = base.Columns["BlockName"];
                this.columnBlockCode = base.Columns["BlockCode"];
                this.columnStationID = base.Columns["StationID"];
                this.columnPassSuperviseLevel = base.Columns["PassSuperviseLevel"];
                this.columnDateAdded = base.Columns["DateAdded"];
                this.columnBlockType = base.Columns["BlockType"];
                this.columnItemsCount = base.Columns["ItemsCount"];
                this.columnPriority = base.Columns["Priority"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBlockID = new global::System.Data.DataColumn("BlockID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockID);
                this.columnBlockNumber = new global::System.Data.DataColumn("BlockNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockNumber);
                this.columnBlockName = new global::System.Data.DataColumn("BlockName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockName);
                this.columnBlockCode = new global::System.Data.DataColumn("BlockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockCode);
                this.columnStationID = new global::System.Data.DataColumn("StationID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationID);
                this.columnPassSuperviseLevel = new global::System.Data.DataColumn("PassSuperviseLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassSuperviseLevel);
                this.columnDateAdded = new global::System.Data.DataColumn("DateAdded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateAdded);
                this.columnBlockType = new global::System.Data.DataColumn("BlockType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockType);
                this.columnItemsCount = new global::System.Data.DataColumn("ItemsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemsCount);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBlockID}, true));
                this.columnBlockID.AllowDBNull = false;
                this.columnBlockID.Unique = true;
                this.columnBlockName.MaxLength = 50;
                this.columnBlockCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TempleteBlocksRow NewTempleteBlocksRow() {
                return ((TempleteBlocksRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TempleteBlocksRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TempleteBlocksRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TempleteBlocksRowChanged != null)) {
                    this.TempleteBlocksRowChanged(this, new TempleteBlocksRowChangeEvent(((TempleteBlocksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TempleteBlocksRowChanging != null)) {
                    this.TempleteBlocksRowChanging(this, new TempleteBlocksRowChangeEvent(((TempleteBlocksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TempleteBlocksRowDeleted != null)) {
                    this.TempleteBlocksRowDeleted(this, new TempleteBlocksRowChangeEvent(((TempleteBlocksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TempleteBlocksRowDeleting != null)) {
                    this.TempleteBlocksRowDeleting(this, new TempleteBlocksRowChangeEvent(((TempleteBlocksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTempleteBlocksRow(TempleteBlocksRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BroadcastDS ds = new BroadcastDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TempleteBlocksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkgroupsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWorkgroupID;
            
            private global::System.Data.DataColumn columnWorkgroupName;
            
            private global::System.Data.DataColumn columnWorkgroupNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkgroupsDataTable() {
                this.TableName = "Workgroups";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkgroupsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WorkgroupsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkgroupIDColumn {
                get {
                    return this.columnWorkgroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkgroupNameColumn {
                get {
                    return this.columnWorkgroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkgroupNumberColumn {
                get {
                    return this.columnWorkgroupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkgroupsRow this[int index] {
                get {
                    return ((WorkgroupsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkgroupsRowChangeEventHandler WorkgroupsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkgroupsRowChangeEventHandler WorkgroupsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkgroupsRowChangeEventHandler WorkgroupsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkgroupsRowChangeEventHandler WorkgroupsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWorkgroupsRow(WorkgroupsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkgroupsRow AddWorkgroupsRow(System.Guid WorkgroupID, string WorkgroupName, int WorkgroupNumber) {
                WorkgroupsRow rowWorkgroupsRow = ((WorkgroupsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WorkgroupID,
                        WorkgroupName,
                        WorkgroupNumber};
                rowWorkgroupsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkgroupsRow);
                return rowWorkgroupsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkgroupsRow FindByWorkgroupID(System.Guid WorkgroupID) {
                return ((WorkgroupsRow)(this.Rows.Find(new object[] {
                            WorkgroupID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WorkgroupsDataTable cln = ((WorkgroupsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WorkgroupsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWorkgroupID = base.Columns["WorkgroupID"];
                this.columnWorkgroupName = base.Columns["WorkgroupName"];
                this.columnWorkgroupNumber = base.Columns["WorkgroupNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWorkgroupID = new global::System.Data.DataColumn("WorkgroupID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkgroupID);
                this.columnWorkgroupName = new global::System.Data.DataColumn("WorkgroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkgroupName);
                this.columnWorkgroupNumber = new global::System.Data.DataColumn("WorkgroupNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkgroupNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWorkgroupID}, true));
                this.columnWorkgroupID.AllowDBNull = false;
                this.columnWorkgroupID.Unique = true;
                this.columnWorkgroupName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkgroupsRow NewWorkgroupsRow() {
                return ((WorkgroupsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WorkgroupsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WorkgroupsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkgroupsRowChanged != null)) {
                    this.WorkgroupsRowChanged(this, new WorkgroupsRowChangeEvent(((WorkgroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkgroupsRowChanging != null)) {
                    this.WorkgroupsRowChanging(this, new WorkgroupsRowChangeEvent(((WorkgroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkgroupsRowDeleted != null)) {
                    this.WorkgroupsRowDeleted(this, new WorkgroupsRowChangeEvent(((WorkgroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkgroupsRowDeleting != null)) {
                    this.WorkgroupsRowDeleting(this, new WorkgroupsRowChangeEvent(((WorkgroupsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWorkgroupsRow(WorkgroupsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BroadcastDS ds = new BroadcastDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkgroupsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CategoriesRow : global::System.Data.DataRow {
            
            private CategoriesDataTable tableCategories;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CategoriesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCategories = ((CategoriesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CategoryID {
                get {
                    return ((global::System.Guid)(this[this.tableCategories.CategoryIDColumn]));
                }
                set {
                    this[this.tableCategories.CategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ParentID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableCategories.ParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ParentID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid WorkgroupID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableCategories.WorkgroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“WorkgroupID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.WorkgroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryNumber {
                get {
                    try {
                        return ((int)(this[this.tableCategories.CategoryNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CategoryNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CategoryNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CategoryCode {
                get {
                    try {
                        return ((string)(this[this.tableCategories.CategoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CategoryCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryType {
                get {
                    try {
                        return ((int)(this[this.tableCategories.CategoryTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CategoryType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CategoryTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryLevel {
                get {
                    try {
                        return ((int)(this[this.tableCategories.CategoryLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CategoryLevel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CategoryLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tableCategories.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CategoryName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountOfAudio {
                get {
                    try {
                        return ((int)(this[this.tableCategories.CountOfAudioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CountOfAudio”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CountOfAudioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Duration {
                get {
                    try {
                        return ((int)(this[this.tableCategories.DurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Duration”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.DurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte PassOrder {
                get {
                    return ((byte)(this[this.tableCategories.PassOrderColumn]));
                }
                set {
                    this[this.tableCategories.PassOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryColor {
                get {
                    try {
                        return ((int)(this[this.tableCategories.CategoryColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CategoryColor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CategoryColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Proportion {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ProportionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Proportion”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ProportionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ProportionType {
                get {
                    try {
                        return ((byte)(this[this.tableCategories.ProportionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ProportionType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ProportionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DigDepth {
                get {
                    try {
                        return ((int)(this[this.tableCategories.DigDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“DigDepth”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.DigDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte DigType {
                get {
                    try {
                        return ((byte)(this[this.tableCategories.DigTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“DigType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.DigTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CategoryEdited {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCategories.CategoryEditedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CategoryEdited”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CategoryEditedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte StackType {
                get {
                    try {
                        return ((byte)(this[this.tableCategories.StackTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“StackType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.StackTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte DaypartHandling {
                get {
                    try {
                        return ((byte)(this[this.tableCategories.DaypartHandlingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“DaypartHandling”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.DaypartHandlingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DaypartPercentage {
                get {
                    try {
                        return ((int)(this[this.tableCategories.DaypartPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“DaypartPercentage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.DaypartPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AlternateDaypart {
                get {
                    try {
                        return ((int)(this[this.tableCategories.AlternateDaypartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“AlternateDaypart”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.AlternateDaypartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AlternateDaypartPercentage {
                get {
                    try {
                        return ((int)(this[this.tableCategories.AlternateDaypartPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“AlternateDaypartPercentage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.AlternateDaypartPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class1 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class2 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class3 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class4 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class5 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class6 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class7 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Class8 {
                get {
                    try {
                        return ((bool)(this[this.tableCategories.Class8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Class8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.Class8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MinChart {
                get {
                    try {
                        return ((int)(this[this.tableCategories.MinChartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“MinChart”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.MinChartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ChartEdited {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCategories.ChartEditedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ChartEdited”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ChartEditedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickCountMon {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickCountMonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickCountMon”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickCountMonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickCountTue {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickCountTueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickCountTue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickCountTueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickCountWed {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickCountWedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickCountWed”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickCountWedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickCountThu {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickCountThuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickCountThu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickCountThuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickCountFri {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickCountFriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickCountFri”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickCountFriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickCountSat {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickCountSatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickCountSat”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickCountSatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickCountSun {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickCountSunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickCountSun”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickCountSunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickTimeMon {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickTimeMonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickTimeMon”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickTimeMonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickTimeTue {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickTimeTueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickTimeTue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickTimeTueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickTimeWed {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickTimeWedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickTimeWed”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickTimeWedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickTimeThu {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickTimeThuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickTimeThu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickTimeThuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickTimeFri {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickTimeFriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickTimeFri”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickTimeFriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickTimeSat {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickTimeSatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickTimeSat”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickTimeSatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KickTimeSun {
                get {
                    try {
                        return ((int)(this[this.tableCategories.KickTimeSunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“KickTimeSun”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.KickTimeSunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleOnce {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleOnceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleOnce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleOnceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleMon {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleMonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleMon”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleMonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleTue {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleTueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleTue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleTueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleWed {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleWedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleWed”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleWedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleThu {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleThuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleThu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleThuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleFri {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleFriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleFri”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleFriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleSat {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleSatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleSat”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleSatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShuffleSun {
                get {
                    try {
                        return ((int)(this[this.tableCategories.ShuffleSunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“ShuffleSun”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.ShuffleSunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateAdded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCategories.DateAddedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“DateAdded”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.DateAddedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CopyToMam {
                get {
                    try {
                        return ((int)(this[this.tableCategories.CopyToMamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“CopyToMam”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.CopyToMamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PassSuperviseLevel {
                get {
                    try {
                        return ((int)(this[this.tableCategories.PassSuperviseLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“PassSuperviseLevel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.PassSuperviseLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RootID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableCategories.RootIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“RootID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.RootIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Priority {
                get {
                    try {
                        return ((int)(this[this.tableCategories.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Categories”中列“Priority”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCategories.PriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentIDNull() {
                return this.IsNull(this.tableCategories.ParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentIDNull() {
                this[this.tableCategories.ParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkgroupIDNull() {
                return this.IsNull(this.tableCategories.WorkgroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkgroupIDNull() {
                this[this.tableCategories.WorkgroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryNumberNull() {
                return this.IsNull(this.tableCategories.CategoryNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryNumberNull() {
                this[this.tableCategories.CategoryNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryCodeNull() {
                return this.IsNull(this.tableCategories.CategoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryCodeNull() {
                this[this.tableCategories.CategoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryTypeNull() {
                return this.IsNull(this.tableCategories.CategoryTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryTypeNull() {
                this[this.tableCategories.CategoryTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryLevelNull() {
                return this.IsNull(this.tableCategories.CategoryLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryLevelNull() {
                this[this.tableCategories.CategoryLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tableCategories.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryNameNull() {
                this[this.tableCategories.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountOfAudioNull() {
                return this.IsNull(this.tableCategories.CountOfAudioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountOfAudioNull() {
                this[this.tableCategories.CountOfAudioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDurationNull() {
                return this.IsNull(this.tableCategories.DurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDurationNull() {
                this[this.tableCategories.DurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryColorNull() {
                return this.IsNull(this.tableCategories.CategoryColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryColorNull() {
                this[this.tableCategories.CategoryColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProportionNull() {
                return this.IsNull(this.tableCategories.ProportionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProportionNull() {
                this[this.tableCategories.ProportionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProportionTypeNull() {
                return this.IsNull(this.tableCategories.ProportionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProportionTypeNull() {
                this[this.tableCategories.ProportionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDigDepthNull() {
                return this.IsNull(this.tableCategories.DigDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDigDepthNull() {
                this[this.tableCategories.DigDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDigTypeNull() {
                return this.IsNull(this.tableCategories.DigTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDigTypeNull() {
                this[this.tableCategories.DigTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryEditedNull() {
                return this.IsNull(this.tableCategories.CategoryEditedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryEditedNull() {
                this[this.tableCategories.CategoryEditedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStackTypeNull() {
                return this.IsNull(this.tableCategories.StackTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStackTypeNull() {
                this[this.tableCategories.StackTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDaypartHandlingNull() {
                return this.IsNull(this.tableCategories.DaypartHandlingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDaypartHandlingNull() {
                this[this.tableCategories.DaypartHandlingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDaypartPercentageNull() {
                return this.IsNull(this.tableCategories.DaypartPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDaypartPercentageNull() {
                this[this.tableCategories.DaypartPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternateDaypartNull() {
                return this.IsNull(this.tableCategories.AlternateDaypartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternateDaypartNull() {
                this[this.tableCategories.AlternateDaypartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternateDaypartPercentageNull() {
                return this.IsNull(this.tableCategories.AlternateDaypartPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternateDaypartPercentageNull() {
                this[this.tableCategories.AlternateDaypartPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass1Null() {
                return this.IsNull(this.tableCategories.Class1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass1Null() {
                this[this.tableCategories.Class1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass2Null() {
                return this.IsNull(this.tableCategories.Class2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass2Null() {
                this[this.tableCategories.Class2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass3Null() {
                return this.IsNull(this.tableCategories.Class3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass3Null() {
                this[this.tableCategories.Class3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass4Null() {
                return this.IsNull(this.tableCategories.Class4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass4Null() {
                this[this.tableCategories.Class4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass5Null() {
                return this.IsNull(this.tableCategories.Class5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass5Null() {
                this[this.tableCategories.Class5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass6Null() {
                return this.IsNull(this.tableCategories.Class6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass6Null() {
                this[this.tableCategories.Class6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass7Null() {
                return this.IsNull(this.tableCategories.Class7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass7Null() {
                this[this.tableCategories.Class7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClass8Null() {
                return this.IsNull(this.tableCategories.Class8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClass8Null() {
                this[this.tableCategories.Class8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinChartNull() {
                return this.IsNull(this.tableCategories.MinChartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinChartNull() {
                this[this.tableCategories.MinChartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChartEditedNull() {
                return this.IsNull(this.tableCategories.ChartEditedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChartEditedNull() {
                this[this.tableCategories.ChartEditedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickCountMonNull() {
                return this.IsNull(this.tableCategories.KickCountMonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickCountMonNull() {
                this[this.tableCategories.KickCountMonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickCountTueNull() {
                return this.IsNull(this.tableCategories.KickCountTueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickCountTueNull() {
                this[this.tableCategories.KickCountTueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickCountWedNull() {
                return this.IsNull(this.tableCategories.KickCountWedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickCountWedNull() {
                this[this.tableCategories.KickCountWedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickCountThuNull() {
                return this.IsNull(this.tableCategories.KickCountThuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickCountThuNull() {
                this[this.tableCategories.KickCountThuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickCountFriNull() {
                return this.IsNull(this.tableCategories.KickCountFriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickCountFriNull() {
                this[this.tableCategories.KickCountFriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickCountSatNull() {
                return this.IsNull(this.tableCategories.KickCountSatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickCountSatNull() {
                this[this.tableCategories.KickCountSatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickCountSunNull() {
                return this.IsNull(this.tableCategories.KickCountSunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickCountSunNull() {
                this[this.tableCategories.KickCountSunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickTimeMonNull() {
                return this.IsNull(this.tableCategories.KickTimeMonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickTimeMonNull() {
                this[this.tableCategories.KickTimeMonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickTimeTueNull() {
                return this.IsNull(this.tableCategories.KickTimeTueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickTimeTueNull() {
                this[this.tableCategories.KickTimeTueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickTimeWedNull() {
                return this.IsNull(this.tableCategories.KickTimeWedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickTimeWedNull() {
                this[this.tableCategories.KickTimeWedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickTimeThuNull() {
                return this.IsNull(this.tableCategories.KickTimeThuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickTimeThuNull() {
                this[this.tableCategories.KickTimeThuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickTimeFriNull() {
                return this.IsNull(this.tableCategories.KickTimeFriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickTimeFriNull() {
                this[this.tableCategories.KickTimeFriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickTimeSatNull() {
                return this.IsNull(this.tableCategories.KickTimeSatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickTimeSatNull() {
                this[this.tableCategories.KickTimeSatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKickTimeSunNull() {
                return this.IsNull(this.tableCategories.KickTimeSunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKickTimeSunNull() {
                this[this.tableCategories.KickTimeSunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleOnceNull() {
                return this.IsNull(this.tableCategories.ShuffleOnceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleOnceNull() {
                this[this.tableCategories.ShuffleOnceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleMonNull() {
                return this.IsNull(this.tableCategories.ShuffleMonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleMonNull() {
                this[this.tableCategories.ShuffleMonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleTueNull() {
                return this.IsNull(this.tableCategories.ShuffleTueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleTueNull() {
                this[this.tableCategories.ShuffleTueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleWedNull() {
                return this.IsNull(this.tableCategories.ShuffleWedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleWedNull() {
                this[this.tableCategories.ShuffleWedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleThuNull() {
                return this.IsNull(this.tableCategories.ShuffleThuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleThuNull() {
                this[this.tableCategories.ShuffleThuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleFriNull() {
                return this.IsNull(this.tableCategories.ShuffleFriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleFriNull() {
                this[this.tableCategories.ShuffleFriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleSatNull() {
                return this.IsNull(this.tableCategories.ShuffleSatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleSatNull() {
                this[this.tableCategories.ShuffleSatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShuffleSunNull() {
                return this.IsNull(this.tableCategories.ShuffleSunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShuffleSunNull() {
                this[this.tableCategories.ShuffleSunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateAddedNull() {
                return this.IsNull(this.tableCategories.DateAddedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateAddedNull() {
                this[this.tableCategories.DateAddedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCopyToMamNull() {
                return this.IsNull(this.tableCategories.CopyToMamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCopyToMamNull() {
                this[this.tableCategories.CopyToMamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPassSuperviseLevelNull() {
                return this.IsNull(this.tableCategories.PassSuperviseLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPassSuperviseLevelNull() {
                this[this.tableCategories.PassSuperviseLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRootIDNull() {
                return this.IsNull(this.tableCategories.RootIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRootIDNull() {
                this[this.tableCategories.RootIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriorityNull() {
                return this.IsNull(this.tableCategories.PriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriorityNull() {
                this[this.tableCategories.PriorityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StoragesRow : global::System.Data.DataRow {
            
            private StoragesDataTable tableStorages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoragesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStorages = ((StoragesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    return ((global::System.Guid)(this[this.tableStorages.StorageIDColumn]));
                }
                set {
                    this[this.tableStorages.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StorageName {
                get {
                    try {
                        return ((string)(this[this.tableStorages.StorageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“StorageName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.StorageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LastEnter {
                get {
                    try {
                        return ((bool)(this[this.tableStorages.LastEnterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“LastEnter”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.LastEnterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryType {
                get {
                    try {
                        return ((int)(this[this.tableStorages.CategoryTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“CategoryType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.CategoryTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid WorkgroupID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStorages.WorkgroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“WorkgroupID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.WorkgroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AudServer1 {
                get {
                    try {
                        return ((string)(this[this.tableStorages.AudServer1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“AudServer1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.AudServer1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AudServer2 {
                get {
                    try {
                        return ((string)(this[this.tableStorages.AudServer2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“AudServer2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.AudServer2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AudServer3 {
                get {
                    try {
                        return ((string)(this[this.tableStorages.AudServer3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“AudServer3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.AudServer3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AudServer4 {
                get {
                    try {
                        return ((string)(this[this.tableStorages.AudServer4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“AudServer4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.AudServer4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableStorages.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“Description”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateAdded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStorages.DateAddedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“DateAdded”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.DateAddedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableStorages.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableStorages.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableStorages.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableStorages.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageNameNull() {
                return this.IsNull(this.tableStorages.StorageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageNameNull() {
                this[this.tableStorages.StorageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastEnterNull() {
                return this.IsNull(this.tableStorages.LastEnterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastEnterNull() {
                this[this.tableStorages.LastEnterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCategoryTypeNull() {
                return this.IsNull(this.tableStorages.CategoryTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCategoryTypeNull() {
                this[this.tableStorages.CategoryTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkgroupIDNull() {
                return this.IsNull(this.tableStorages.WorkgroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkgroupIDNull() {
                this[this.tableStorages.WorkgroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAudServer1Null() {
                return this.IsNull(this.tableStorages.AudServer1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAudServer1Null() {
                this[this.tableStorages.AudServer1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAudServer2Null() {
                return this.IsNull(this.tableStorages.AudServer2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAudServer2Null() {
                this[this.tableStorages.AudServer2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAudServer3Null() {
                return this.IsNull(this.tableStorages.AudServer3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAudServer3Null() {
                this[this.tableStorages.AudServer3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAudServer4Null() {
                return this.IsNull(this.tableStorages.AudServer4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAudServer4Null() {
                this[this.tableStorages.AudServer4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableStorages.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableStorages.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateAddedNull() {
                return this.IsNull(this.tableStorages.DateAddedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateAddedNull() {
                this[this.tableStorages.DateAddedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableStorages.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableStorages.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableStorages.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableStorages.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableStorages.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableStorages.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableStorages.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableStorages.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StorageZoneRow : global::System.Data.DataRow {
            
            private StorageZoneDataTable tableStorageZone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStorageZone = ((StorageZoneDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    return ((global::System.Guid)(this[this.tableStorageZone.StorageIDColumn]));
                }
                set {
                    this[this.tableStorageZone.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ZoneID {
                get {
                    return ((int)(this[this.tableStorageZone.ZoneIDColumn]));
                }
                set {
                    this[this.tableStorageZone.ZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpServer1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpServer1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpServer1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpServer1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FtpPort1 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FtpPort1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPort1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPort1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpDir1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpDir1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpDir1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpDir1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpUser1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpUser1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpUser1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpUser1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpPassword1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpPassword1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPassword1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPassword1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpServer2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpServer2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpServer2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpServer2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FtpPort2 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FtpPort2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPort2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPort2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpDir2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpDir2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpDir2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpDir2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpUser2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpUser2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpUser2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpUser2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpPassword2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpPassword2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPassword2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPassword2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpServer3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpServer3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpServer3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpServer3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpUser3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpUser3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpUser3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpUser3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpPassword3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpPassword3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPassword3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPassword3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FtpPort3 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FtpPort3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPort3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPort3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpDir3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpDir3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpDir3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpDir3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpServer4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpServer4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpServer4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpServer4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FtpPort4 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FtpPort4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPort4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPort4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpDir4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpDir4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpDir4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpDir4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpUser4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpUser4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpUser4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpUser4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtpPassword4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FtpPassword4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FtpPassword4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FtpPassword4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileStreamServer1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FileStreamServer1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamServer1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamServer1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileStreamPort1 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FileStreamPort1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamPort1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamPort1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileStreamServer2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FileStreamServer2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamServer2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamServer2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileStreamPort2 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FileStreamPort2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamPort2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamPort2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileStreamServer3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FileStreamServer3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamServer3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamServer3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileStreamPort3 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FileStreamPort3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamPort3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamPort3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileStreamServer4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.FileStreamServer4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamServer4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamServer4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileStreamPort4 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZone.FileStreamPort4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“FileStreamPort4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.FileStreamPort4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableStorageZone.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZone”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZone.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpServer1Null() {
                return this.IsNull(this.tableStorageZone.FtpServer1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpServer1Null() {
                this[this.tableStorageZone.FtpServer1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPort1Null() {
                return this.IsNull(this.tableStorageZone.FtpPort1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPort1Null() {
                this[this.tableStorageZone.FtpPort1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpDir1Null() {
                return this.IsNull(this.tableStorageZone.FtpDir1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpDir1Null() {
                this[this.tableStorageZone.FtpDir1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpUser1Null() {
                return this.IsNull(this.tableStorageZone.FtpUser1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpUser1Null() {
                this[this.tableStorageZone.FtpUser1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPassword1Null() {
                return this.IsNull(this.tableStorageZone.FtpPassword1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPassword1Null() {
                this[this.tableStorageZone.FtpPassword1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpServer2Null() {
                return this.IsNull(this.tableStorageZone.FtpServer2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpServer2Null() {
                this[this.tableStorageZone.FtpServer2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPort2Null() {
                return this.IsNull(this.tableStorageZone.FtpPort2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPort2Null() {
                this[this.tableStorageZone.FtpPort2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpDir2Null() {
                return this.IsNull(this.tableStorageZone.FtpDir2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpDir2Null() {
                this[this.tableStorageZone.FtpDir2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpUser2Null() {
                return this.IsNull(this.tableStorageZone.FtpUser2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpUser2Null() {
                this[this.tableStorageZone.FtpUser2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPassword2Null() {
                return this.IsNull(this.tableStorageZone.FtpPassword2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPassword2Null() {
                this[this.tableStorageZone.FtpPassword2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpServer3Null() {
                return this.IsNull(this.tableStorageZone.FtpServer3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpServer3Null() {
                this[this.tableStorageZone.FtpServer3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpUser3Null() {
                return this.IsNull(this.tableStorageZone.FtpUser3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpUser3Null() {
                this[this.tableStorageZone.FtpUser3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPassword3Null() {
                return this.IsNull(this.tableStorageZone.FtpPassword3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPassword3Null() {
                this[this.tableStorageZone.FtpPassword3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPort3Null() {
                return this.IsNull(this.tableStorageZone.FtpPort3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPort3Null() {
                this[this.tableStorageZone.FtpPort3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpDir3Null() {
                return this.IsNull(this.tableStorageZone.FtpDir3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpDir3Null() {
                this[this.tableStorageZone.FtpDir3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpServer4Null() {
                return this.IsNull(this.tableStorageZone.FtpServer4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpServer4Null() {
                this[this.tableStorageZone.FtpServer4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPort4Null() {
                return this.IsNull(this.tableStorageZone.FtpPort4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPort4Null() {
                this[this.tableStorageZone.FtpPort4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpDir4Null() {
                return this.IsNull(this.tableStorageZone.FtpDir4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpDir4Null() {
                this[this.tableStorageZone.FtpDir4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpUser4Null() {
                return this.IsNull(this.tableStorageZone.FtpUser4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpUser4Null() {
                this[this.tableStorageZone.FtpUser4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtpPassword4Null() {
                return this.IsNull(this.tableStorageZone.FtpPassword4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtpPassword4Null() {
                this[this.tableStorageZone.FtpPassword4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamServer1Null() {
                return this.IsNull(this.tableStorageZone.FileStreamServer1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamServer1Null() {
                this[this.tableStorageZone.FileStreamServer1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamPort1Null() {
                return this.IsNull(this.tableStorageZone.FileStreamPort1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamPort1Null() {
                this[this.tableStorageZone.FileStreamPort1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamServer2Null() {
                return this.IsNull(this.tableStorageZone.FileStreamServer2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamServer2Null() {
                this[this.tableStorageZone.FileStreamServer2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamPort2Null() {
                return this.IsNull(this.tableStorageZone.FileStreamPort2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamPort2Null() {
                this[this.tableStorageZone.FileStreamPort2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamServer3Null() {
                return this.IsNull(this.tableStorageZone.FileStreamServer3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamServer3Null() {
                this[this.tableStorageZone.FileStreamServer3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamPort3Null() {
                return this.IsNull(this.tableStorageZone.FileStreamPort3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamPort3Null() {
                this[this.tableStorageZone.FileStreamPort3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamServer4Null() {
                return this.IsNull(this.tableStorageZone.FileStreamServer4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamServer4Null() {
                this[this.tableStorageZone.FileStreamServer4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileStreamPort4Null() {
                return this.IsNull(this.tableStorageZone.FileStreamPort4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileStreamPort4Null() {
                this[this.tableStorageZone.FileStreamPort4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableStorageZone.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableStorageZone.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StationsRow : global::System.Data.DataRow {
            
            private StationsDataTable tableStations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStations = ((StationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StationID {
                get {
                    return ((global::System.Guid)(this[this.tableStations.StationIDColumn]));
                }
                set {
                    this[this.tableStations.StationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StationName {
                get {
                    try {
                        return ((string)(this[this.tableStations.StationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Stations”中列“StationName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStations.StationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StationNumber {
                get {
                    try {
                        return ((int)(this[this.tableStations.StationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Stations”中列“StationNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStations.StationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBatchBroadcast {
                get {
                    try {
                        return ((bool)(this[this.tableStations.IsBatchBroadcastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Stations”中列“IsBatchBroadcast”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStations.IsBatchBroadcastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte HasCategory {
                get {
                    try {
                        return ((byte)(this[this.tableStations.HasCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Stations”中列“HasCategory”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStations.HasCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte UniqueAdCategory {
                get {
                    try {
                        return ((byte)(this[this.tableStations.UniqueAdCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Stations”中列“UniqueAdCategory”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStations.UniqueAdCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte LockedClockInTemplate {
                get {
                    try {
                        return ((byte)(this[this.tableStations.LockedClockInTemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Stations”中列“LockedClockInTemplate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStations.LockedClockInTemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DatabaseNumber {
                get {
                    try {
                        return ((int)(this[this.tableStations.DatabaseNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Stations”中列“DatabaseNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStations.DatabaseNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStationNameNull() {
                return this.IsNull(this.tableStations.StationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStationNameNull() {
                this[this.tableStations.StationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStationNumberNull() {
                return this.IsNull(this.tableStations.StationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStationNumberNull() {
                this[this.tableStations.StationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsBatchBroadcastNull() {
                return this.IsNull(this.tableStations.IsBatchBroadcastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsBatchBroadcastNull() {
                this[this.tableStations.IsBatchBroadcastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHasCategoryNull() {
                return this.IsNull(this.tableStations.HasCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHasCategoryNull() {
                this[this.tableStations.HasCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUniqueAdCategoryNull() {
                return this.IsNull(this.tableStations.UniqueAdCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUniqueAdCategoryNull() {
                this[this.tableStations.UniqueAdCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockedClockInTemplateNull() {
                return this.IsNull(this.tableStations.LockedClockInTemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockedClockInTemplateNull() {
                this[this.tableStations.LockedClockInTemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatabaseNumberNull() {
                return this.IsNull(this.tableStations.DatabaseNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatabaseNumberNull() {
                this[this.tableStations.DatabaseNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Workgroup2StationsRow : global::System.Data.DataRow {
            
            private Workgroup2StationsDataTable tableWorkgroup2Stations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Workgroup2StationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkgroup2Stations = ((Workgroup2StationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid WorkgroupID {
                get {
                    return ((global::System.Guid)(this[this.tableWorkgroup2Stations.WorkgroupIDColumn]));
                }
                set {
                    this[this.tableWorkgroup2Stations.WorkgroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StationID {
                get {
                    return ((global::System.Guid)(this[this.tableWorkgroup2Stations.StationIDColumn]));
                }
                set {
                    this[this.tableWorkgroup2Stations.StationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte InStations {
                get {
                    try {
                        return ((byte)(this[this.tableWorkgroup2Stations.InStationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Workgroup2Stations”中列“InStations”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableWorkgroup2Stations.InStationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInStationsNull() {
                return this.IsNull(this.tableWorkgroup2Stations.InStationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInStationsNull() {
                this[this.tableWorkgroup2Stations.InStationsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TempleteBlocksRow : global::System.Data.DataRow {
            
            private TempleteBlocksDataTable tableTempleteBlocks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TempleteBlocksRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTempleteBlocks = ((TempleteBlocksDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid BlockID {
                get {
                    return ((global::System.Guid)(this[this.tableTempleteBlocks.BlockIDColumn]));
                }
                set {
                    this[this.tableTempleteBlocks.BlockIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BlockNumber {
                get {
                    try {
                        return ((int)(this[this.tableTempleteBlocks.BlockNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“BlockNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.BlockNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BlockName {
                get {
                    try {
                        return ((string)(this[this.tableTempleteBlocks.BlockNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“BlockName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.BlockNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BlockCode {
                get {
                    try {
                        return ((string)(this[this.tableTempleteBlocks.BlockCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“BlockCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.BlockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StationID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableTempleteBlocks.StationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“StationID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.StationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PassSuperviseLevel {
                get {
                    try {
                        return ((int)(this[this.tableTempleteBlocks.PassSuperviseLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“PassSuperviseLevel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.PassSuperviseLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateAdded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTempleteBlocks.DateAddedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“DateAdded”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.DateAddedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BlockType {
                get {
                    try {
                        return ((int)(this[this.tableTempleteBlocks.BlockTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“BlockType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.BlockTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemsCount {
                get {
                    try {
                        return ((int)(this[this.tableTempleteBlocks.ItemsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“ItemsCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.ItemsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Priority {
                get {
                    try {
                        return ((int)(this[this.tableTempleteBlocks.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TempleteBlocks”中列“Priority”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTempleteBlocks.PriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBlockNumberNull() {
                return this.IsNull(this.tableTempleteBlocks.BlockNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBlockNumberNull() {
                this[this.tableTempleteBlocks.BlockNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBlockNameNull() {
                return this.IsNull(this.tableTempleteBlocks.BlockNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBlockNameNull() {
                this[this.tableTempleteBlocks.BlockNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBlockCodeNull() {
                return this.IsNull(this.tableTempleteBlocks.BlockCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBlockCodeNull() {
                this[this.tableTempleteBlocks.BlockCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStationIDNull() {
                return this.IsNull(this.tableTempleteBlocks.StationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStationIDNull() {
                this[this.tableTempleteBlocks.StationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPassSuperviseLevelNull() {
                return this.IsNull(this.tableTempleteBlocks.PassSuperviseLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPassSuperviseLevelNull() {
                this[this.tableTempleteBlocks.PassSuperviseLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateAddedNull() {
                return this.IsNull(this.tableTempleteBlocks.DateAddedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateAddedNull() {
                this[this.tableTempleteBlocks.DateAddedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBlockTypeNull() {
                return this.IsNull(this.tableTempleteBlocks.BlockTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBlockTypeNull() {
                this[this.tableTempleteBlocks.BlockTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemsCountNull() {
                return this.IsNull(this.tableTempleteBlocks.ItemsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemsCountNull() {
                this[this.tableTempleteBlocks.ItemsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriorityNull() {
                return this.IsNull(this.tableTempleteBlocks.PriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriorityNull() {
                this[this.tableTempleteBlocks.PriorityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WorkgroupsRow : global::System.Data.DataRow {
            
            private WorkgroupsDataTable tableWorkgroups;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkgroupsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkgroups = ((WorkgroupsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid WorkgroupID {
                get {
                    return ((global::System.Guid)(this[this.tableWorkgroups.WorkgroupIDColumn]));
                }
                set {
                    this[this.tableWorkgroups.WorkgroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WorkgroupName {
                get {
                    try {
                        return ((string)(this[this.tableWorkgroups.WorkgroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Workgroups”中列“WorkgroupName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableWorkgroups.WorkgroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WorkgroupNumber {
                get {
                    try {
                        return ((int)(this[this.tableWorkgroups.WorkgroupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Workgroups”中列“WorkgroupNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableWorkgroups.WorkgroupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkgroupNameNull() {
                return this.IsNull(this.tableWorkgroups.WorkgroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkgroupNameNull() {
                this[this.tableWorkgroups.WorkgroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkgroupNumberNull() {
                return this.IsNull(this.tableWorkgroups.WorkgroupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkgroupNumberNull() {
                this[this.tableWorkgroups.WorkgroupNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CategoriesRowChangeEvent : global::System.EventArgs {
            
            private CategoriesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CategoriesRowChangeEvent(CategoriesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CategoriesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StoragesRowChangeEvent : global::System.EventArgs {
            
            private StoragesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRowChangeEvent(StoragesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StorageZoneRowChangeEvent : global::System.EventArgs {
            
            private StorageZoneRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneRowChangeEvent(StorageZoneRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StationsRowChangeEvent : global::System.EventArgs {
            
            private StationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StationsRowChangeEvent(StationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Workgroup2StationsRowChangeEvent : global::System.EventArgs {
            
            private Workgroup2StationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Workgroup2StationsRowChangeEvent(Workgroup2StationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Workgroup2StationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TempleteBlocksRowChangeEvent : global::System.EventArgs {
            
            private TempleteBlocksRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TempleteBlocksRowChangeEvent(TempleteBlocksRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TempleteBlocksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WorkgroupsRowChangeEvent : global::System.EventArgs {
            
            private WorkgroupsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkgroupsRowChangeEvent(WorkgroupsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkgroupsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Workgroup2StationModel {
        
        private System.Guid workgroupIDField;
        
        private string workgroupNameField;
        
        private int workgroupNumberField;
        
        private byte inStationField;
        
        /// <remarks/>
        public System.Guid WorkgroupID {
            get {
                return this.workgroupIDField;
            }
            set {
                this.workgroupIDField = value;
            }
        }
        
        /// <remarks/>
        public string WorkgroupName {
            get {
                return this.workgroupNameField;
            }
            set {
                this.workgroupNameField = value;
            }
        }
        
        /// <remarks/>
        public int WorkgroupNumber {
            get {
                return this.workgroupNumberField;
            }
            set {
                this.workgroupNumberField = value;
            }
        }
        
        /// <remarks/>
        public byte InStation {
            get {
                return this.inStationField;
            }
            set {
                this.inStationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DictContributorModel {
        
        private System.Guid idField;
        
        private System.Guid masterClassIDField;
        
        private string masterClassNameField;
        
        private System.Guid parentIDField;
        
        private string nameField;
        
        private bool genderField;
        
        private System.DateTime birthDateField;
        
        private string birthPlaceField;
        
        private string foreignNameField;
        
        private string fastCodeField;
        
        private string alternativeNameField;
        
        private System.Guid nationalityIDField;
        
        private string nationalityNameField;
        
        private System.Guid areaIDField;
        
        private string areaNameField;
        
        private System.Guid languageIDField;
        
        private string languageNameField;
        
        private System.Guid eraIDField;
        
        private string eraNameField;
        
        private System.Guid combinationIDField;
        
        private string combinationNameField;
        
        private System.Guid ethnicIDField;
        
        private string ethnicNameField;
        
        private System.Guid professionIDField;
        
        private string professionNameField;
        
        private int popularityField;
        
        private int currentStateField;
        
        private string remarkField;
        
        private int valueNumberField;
        
        private bool isDefaultField;
        
        private string createUserNameField;
        
        private System.Guid createUserIDField;
        
        private System.DateTime createDateTimeField;
        
        private string modifyUserNameField;
        
        private System.Guid modifyUserIDField;
        
        private System.DateTime modifyDateTimeField;
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid MasterClassID {
            get {
                return this.masterClassIDField;
            }
            set {
                this.masterClassIDField = value;
            }
        }
        
        /// <remarks/>
        public string MasterClassName {
            get {
                return this.masterClassNameField;
            }
            set {
                this.masterClassNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string BirthPlace {
            get {
                return this.birthPlaceField;
            }
            set {
                this.birthPlaceField = value;
            }
        }
        
        /// <remarks/>
        public string ForeignName {
            get {
                return this.foreignNameField;
            }
            set {
                this.foreignNameField = value;
            }
        }
        
        /// <remarks/>
        public string FastCode {
            get {
                return this.fastCodeField;
            }
            set {
                this.fastCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AlternativeName {
            get {
                return this.alternativeNameField;
            }
            set {
                this.alternativeNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid NationalityID {
            get {
                return this.nationalityIDField;
            }
            set {
                this.nationalityIDField = value;
            }
        }
        
        /// <remarks/>
        public string NationalityName {
            get {
                return this.nationalityNameField;
            }
            set {
                this.nationalityNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AreaID {
            get {
                return this.areaIDField;
            }
            set {
                this.areaIDField = value;
            }
        }
        
        /// <remarks/>
        public string AreaName {
            get {
                return this.areaNameField;
            }
            set {
                this.areaNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LanguageID {
            get {
                return this.languageIDField;
            }
            set {
                this.languageIDField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageName {
            get {
                return this.languageNameField;
            }
            set {
                this.languageNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid EraID {
            get {
                return this.eraIDField;
            }
            set {
                this.eraIDField = value;
            }
        }
        
        /// <remarks/>
        public string EraName {
            get {
                return this.eraNameField;
            }
            set {
                this.eraNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CombinationID {
            get {
                return this.combinationIDField;
            }
            set {
                this.combinationIDField = value;
            }
        }
        
        /// <remarks/>
        public string CombinationName {
            get {
                return this.combinationNameField;
            }
            set {
                this.combinationNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid EthnicID {
            get {
                return this.ethnicIDField;
            }
            set {
                this.ethnicIDField = value;
            }
        }
        
        /// <remarks/>
        public string EthnicName {
            get {
                return this.ethnicNameField;
            }
            set {
                this.ethnicNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProfessionID {
            get {
                return this.professionIDField;
            }
            set {
                this.professionIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProfessionName {
            get {
                return this.professionNameField;
            }
            set {
                this.professionNameField = value;
            }
        }
        
        /// <remarks/>
        public int Popularity {
            get {
                return this.popularityField;
            }
            set {
                this.popularityField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentState {
            get {
                return this.currentStateField;
            }
            set {
                this.currentStateField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int ValueNumber {
            get {
                return this.valueNumberField;
            }
            set {
                this.valueNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDateTime {
            get {
                return this.createDateTimeField;
            }
            set {
                this.createDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ModifyUserName {
            get {
                return this.modifyUserNameField;
            }
            set {
                this.modifyUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ModifyUserID {
            get {
                return this.modifyUserIDField;
            }
            set {
                this.modifyUserIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifyDateTime {
            get {
                return this.modifyDateTimeField;
            }
            set {
                this.modifyDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DictionaryIDNameModel {
        
        private System.Guid idField;
        
        private string nameField;
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DictionaryCommonModel {
        
        private System.Guid idField;
        
        private System.Guid masterClassIDField;
        
        private string masterClassNameField;
        
        private System.Guid parentIDField;
        
        private string nameField;
        
        private string fastCodeField;
        
        private string alternativeNameField;
        
        private int currentStateField;
        
        private string remarkField;
        
        private int valueNumberField;
        
        private bool isDefaultField;
        
        private string createUserNameField;
        
        private System.Guid createUserIDField;
        
        private System.DateTime createDateTimeField;
        
        private string modifyUserNameField;
        
        private System.Guid modifyUserIDField;
        
        private System.DateTime modifyDateTimeField;
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid MasterClassID {
            get {
                return this.masterClassIDField;
            }
            set {
                this.masterClassIDField = value;
            }
        }
        
        /// <remarks/>
        public string MasterClassName {
            get {
                return this.masterClassNameField;
            }
            set {
                this.masterClassNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FastCode {
            get {
                return this.fastCodeField;
            }
            set {
                this.fastCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AlternativeName {
            get {
                return this.alternativeNameField;
            }
            set {
                this.alternativeNameField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentState {
            get {
                return this.currentStateField;
            }
            set {
                this.currentStateField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int ValueNumber {
            get {
                return this.valueNumberField;
            }
            set {
                this.valueNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDateTime {
            get {
                return this.createDateTimeField;
            }
            set {
                this.createDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ModifyUserName {
            get {
                return this.modifyUserNameField;
            }
            set {
                this.modifyUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ModifyUserID {
            get {
                return this.modifyUserIDField;
            }
            set {
                this.modifyUserIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifyDateTime {
            get {
                return this.modifyDateTimeField;
            }
            set {
                this.modifyDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LogicLib2StorageModel {
        
        private System.Guid logicLibIDField;
        
        private string logicLibNameField;
        
        private System.Guid storageIDField;
        
        private string storageNameField;
        
        private int maxSpaceField;
        
        private int freeSpaceField;
        
        private bool onlineField;
        
        private int l2SIndexField;
        
        /// <remarks/>
        public System.Guid LogicLibID {
            get {
                return this.logicLibIDField;
            }
            set {
                this.logicLibIDField = value;
            }
        }
        
        /// <remarks/>
        public string LogicLibName {
            get {
                return this.logicLibNameField;
            }
            set {
                this.logicLibNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid StorageID {
            get {
                return this.storageIDField;
            }
            set {
                this.storageIDField = value;
            }
        }
        
        /// <remarks/>
        public string StorageName {
            get {
                return this.storageNameField;
            }
            set {
                this.storageNameField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSpace {
            get {
                return this.maxSpaceField;
            }
            set {
                this.maxSpaceField = value;
            }
        }
        
        /// <remarks/>
        public int FreeSpace {
            get {
                return this.freeSpaceField;
            }
            set {
                this.freeSpaceField = value;
            }
        }
        
        /// <remarks/>
        public bool Online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        public int L2SIndex {
            get {
                return this.l2SIndexField;
            }
            set {
                this.l2SIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserSpaceModel {
        
        private System.Guid objectIDField;
        
        private System.Guid userIDField;
        
        private string nameField;
        
        private string loginNameField;
        
        private int freeSpaceMBField;
        
        private int freeSpaceHourField;
        
        /// <remarks/>
        public System.Guid ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public int FreeSpaceMB {
            get {
                return this.freeSpaceMBField;
            }
            set {
                this.freeSpaceMBField = value;
            }
        }
        
        /// <remarks/>
        public int FreeSpaceHour {
            get {
                return this.freeSpaceHourField;
            }
            set {
                this.freeSpaceHourField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProgramLib2StorageModel {
        
        private System.Guid libStoragesIDField;
        
        private System.Guid programLibIDField;
        
        private string programLibNameField;
        
        private System.Guid storageIDField;
        
        private string storageNameField;
        
        private int maxSpaceMBField;
        
        private int freeSpaceMBField;
        
        private int maxSpaceHourField;
        
        private int freeSpaceHourField;
        
        private int storageIndexField;
        
        /// <remarks/>
        public System.Guid LibStoragesID {
            get {
                return this.libStoragesIDField;
            }
            set {
                this.libStoragesIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProgramLibID {
            get {
                return this.programLibIDField;
            }
            set {
                this.programLibIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProgramLibName {
            get {
                return this.programLibNameField;
            }
            set {
                this.programLibNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid StorageID {
            get {
                return this.storageIDField;
            }
            set {
                this.storageIDField = value;
            }
        }
        
        /// <remarks/>
        public string StorageName {
            get {
                return this.storageNameField;
            }
            set {
                this.storageNameField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSpaceMB {
            get {
                return this.maxSpaceMBField;
            }
            set {
                this.maxSpaceMBField = value;
            }
        }
        
        /// <remarks/>
        public int FreeSpaceMB {
            get {
                return this.freeSpaceMBField;
            }
            set {
                this.freeSpaceMBField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSpaceHour {
            get {
                return this.maxSpaceHourField;
            }
            set {
                this.maxSpaceHourField = value;
            }
        }
        
        /// <remarks/>
        public int FreeSpaceHour {
            get {
                return this.freeSpaceHourField;
            }
            set {
                this.freeSpaceHourField = value;
            }
        }
        
        /// <remarks/>
        public int StorageIndex {
            get {
                return this.storageIndexField;
            }
            set {
                this.storageIndexField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MediaAssetDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MediaAssetDS : global::System.Data.DataSet {
        
        private LogicLibDataTable tableLogicLib;
        
        private LogicLib2StorageDataTable tableLogicLib2Storage;
        
        private StorageDataTable tableStorage;
        
        private StorageZoneInfoDataTable tableStorageZoneInfo;
        
        private MediaAssetFormatDataTable tableMediaAssetFormat;
        
        private MasterClassDataTable tableMasterClass;
        
        private IWFM_WorkflowDataTable tableIWFM_Workflow;
        
        private IWFM_NodeSignerDataTable tableIWFM_NodeSigner;
        
        private IWFM_NodeDataTable tableIWFM_Node;
        
        private Relator2ContributorDataTable tableRelator2Contributor;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MediaAssetDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MediaAssetDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LogicLib"] != null)) {
                    base.Tables.Add(new LogicLibDataTable(ds.Tables["LogicLib"]));
                }
                if ((ds.Tables["LogicLib2Storage"] != null)) {
                    base.Tables.Add(new LogicLib2StorageDataTable(ds.Tables["LogicLib2Storage"]));
                }
                if ((ds.Tables["Storage"] != null)) {
                    base.Tables.Add(new StorageDataTable(ds.Tables["Storage"]));
                }
                if ((ds.Tables["StorageZoneInfo"] != null)) {
                    base.Tables.Add(new StorageZoneInfoDataTable(ds.Tables["StorageZoneInfo"]));
                }
                if ((ds.Tables["MediaAssetFormat"] != null)) {
                    base.Tables.Add(new MediaAssetFormatDataTable(ds.Tables["MediaAssetFormat"]));
                }
                if ((ds.Tables["MasterClass"] != null)) {
                    base.Tables.Add(new MasterClassDataTable(ds.Tables["MasterClass"]));
                }
                if ((ds.Tables["IWFM_Workflow"] != null)) {
                    base.Tables.Add(new IWFM_WorkflowDataTable(ds.Tables["IWFM_Workflow"]));
                }
                if ((ds.Tables["IWFM_NodeSigner"] != null)) {
                    base.Tables.Add(new IWFM_NodeSignerDataTable(ds.Tables["IWFM_NodeSigner"]));
                }
                if ((ds.Tables["IWFM_Node"] != null)) {
                    base.Tables.Add(new IWFM_NodeDataTable(ds.Tables["IWFM_Node"]));
                }
                if ((ds.Tables["Relator2Contributor"] != null)) {
                    base.Tables.Add(new Relator2ContributorDataTable(ds.Tables["Relator2Contributor"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogicLibDataTable LogicLib {
            get {
                return this.tableLogicLib;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogicLib2StorageDataTable LogicLib2Storage {
            get {
                return this.tableLogicLib2Storage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StorageDataTable Storage {
            get {
                return this.tableStorage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StorageZoneInfoDataTable StorageZoneInfo {
            get {
                return this.tableStorageZoneInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MediaAssetFormatDataTable MediaAssetFormat {
            get {
                return this.tableMediaAssetFormat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MasterClassDataTable MasterClass {
            get {
                return this.tableMasterClass;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IWFM_WorkflowDataTable IWFM_Workflow {
            get {
                return this.tableIWFM_Workflow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IWFM_NodeSignerDataTable IWFM_NodeSigner {
            get {
                return this.tableIWFM_NodeSigner;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IWFM_NodeDataTable IWFM_Node {
            get {
                return this.tableIWFM_Node;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Relator2ContributorDataTable Relator2Contributor {
            get {
                return this.tableRelator2Contributor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MediaAssetDS cln = ((MediaAssetDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LogicLib"] != null)) {
                    base.Tables.Add(new LogicLibDataTable(ds.Tables["LogicLib"]));
                }
                if ((ds.Tables["LogicLib2Storage"] != null)) {
                    base.Tables.Add(new LogicLib2StorageDataTable(ds.Tables["LogicLib2Storage"]));
                }
                if ((ds.Tables["Storage"] != null)) {
                    base.Tables.Add(new StorageDataTable(ds.Tables["Storage"]));
                }
                if ((ds.Tables["StorageZoneInfo"] != null)) {
                    base.Tables.Add(new StorageZoneInfoDataTable(ds.Tables["StorageZoneInfo"]));
                }
                if ((ds.Tables["MediaAssetFormat"] != null)) {
                    base.Tables.Add(new MediaAssetFormatDataTable(ds.Tables["MediaAssetFormat"]));
                }
                if ((ds.Tables["MasterClass"] != null)) {
                    base.Tables.Add(new MasterClassDataTable(ds.Tables["MasterClass"]));
                }
                if ((ds.Tables["IWFM_Workflow"] != null)) {
                    base.Tables.Add(new IWFM_WorkflowDataTable(ds.Tables["IWFM_Workflow"]));
                }
                if ((ds.Tables["IWFM_NodeSigner"] != null)) {
                    base.Tables.Add(new IWFM_NodeSignerDataTable(ds.Tables["IWFM_NodeSigner"]));
                }
                if ((ds.Tables["IWFM_Node"] != null)) {
                    base.Tables.Add(new IWFM_NodeDataTable(ds.Tables["IWFM_Node"]));
                }
                if ((ds.Tables["Relator2Contributor"] != null)) {
                    base.Tables.Add(new Relator2ContributorDataTable(ds.Tables["Relator2Contributor"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLogicLib = ((LogicLibDataTable)(base.Tables["LogicLib"]));
            if ((initTable == true)) {
                if ((this.tableLogicLib != null)) {
                    this.tableLogicLib.InitVars();
                }
            }
            this.tableLogicLib2Storage = ((LogicLib2StorageDataTable)(base.Tables["LogicLib2Storage"]));
            if ((initTable == true)) {
                if ((this.tableLogicLib2Storage != null)) {
                    this.tableLogicLib2Storage.InitVars();
                }
            }
            this.tableStorage = ((StorageDataTable)(base.Tables["Storage"]));
            if ((initTable == true)) {
                if ((this.tableStorage != null)) {
                    this.tableStorage.InitVars();
                }
            }
            this.tableStorageZoneInfo = ((StorageZoneInfoDataTable)(base.Tables["StorageZoneInfo"]));
            if ((initTable == true)) {
                if ((this.tableStorageZoneInfo != null)) {
                    this.tableStorageZoneInfo.InitVars();
                }
            }
            this.tableMediaAssetFormat = ((MediaAssetFormatDataTable)(base.Tables["MediaAssetFormat"]));
            if ((initTable == true)) {
                if ((this.tableMediaAssetFormat != null)) {
                    this.tableMediaAssetFormat.InitVars();
                }
            }
            this.tableMasterClass = ((MasterClassDataTable)(base.Tables["MasterClass"]));
            if ((initTable == true)) {
                if ((this.tableMasterClass != null)) {
                    this.tableMasterClass.InitVars();
                }
            }
            this.tableIWFM_Workflow = ((IWFM_WorkflowDataTable)(base.Tables["IWFM_Workflow"]));
            if ((initTable == true)) {
                if ((this.tableIWFM_Workflow != null)) {
                    this.tableIWFM_Workflow.InitVars();
                }
            }
            this.tableIWFM_NodeSigner = ((IWFM_NodeSignerDataTable)(base.Tables["IWFM_NodeSigner"]));
            if ((initTable == true)) {
                if ((this.tableIWFM_NodeSigner != null)) {
                    this.tableIWFM_NodeSigner.InitVars();
                }
            }
            this.tableIWFM_Node = ((IWFM_NodeDataTable)(base.Tables["IWFM_Node"]));
            if ((initTable == true)) {
                if ((this.tableIWFM_Node != null)) {
                    this.tableIWFM_Node.InitVars();
                }
            }
            this.tableRelator2Contributor = ((Relator2ContributorDataTable)(base.Tables["Relator2Contributor"]));
            if ((initTable == true)) {
                if ((this.tableRelator2Contributor != null)) {
                    this.tableRelator2Contributor.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MediaAssetDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MediaAssetDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLogicLib = new LogicLibDataTable();
            base.Tables.Add(this.tableLogicLib);
            this.tableLogicLib2Storage = new LogicLib2StorageDataTable();
            base.Tables.Add(this.tableLogicLib2Storage);
            this.tableStorage = new StorageDataTable();
            base.Tables.Add(this.tableStorage);
            this.tableStorageZoneInfo = new StorageZoneInfoDataTable();
            base.Tables.Add(this.tableStorageZoneInfo);
            this.tableMediaAssetFormat = new MediaAssetFormatDataTable();
            base.Tables.Add(this.tableMediaAssetFormat);
            this.tableMasterClass = new MasterClassDataTable();
            base.Tables.Add(this.tableMasterClass);
            this.tableIWFM_Workflow = new IWFM_WorkflowDataTable();
            base.Tables.Add(this.tableIWFM_Workflow);
            this.tableIWFM_NodeSigner = new IWFM_NodeSignerDataTable();
            base.Tables.Add(this.tableIWFM_NodeSigner);
            this.tableIWFM_Node = new IWFM_NodeDataTable();
            base.Tables.Add(this.tableIWFM_Node);
            this.tableRelator2Contributor = new Relator2ContributorDataTable();
            base.Tables.Add(this.tableRelator2Contributor);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLogicLib() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLogicLib2Storage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStorage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStorageZoneInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMediaAssetFormat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMasterClass() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeIWFM_Workflow() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeIWFM_NodeSigner() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeIWFM_Node() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRelator2Contributor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MediaAssetDS ds = new MediaAssetDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LogicLibRowChangeEventHandler(object sender, LogicLibRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LogicLib2StorageRowChangeEventHandler(object sender, LogicLib2StorageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StorageRowChangeEventHandler(object sender, StorageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StorageZoneInfoRowChangeEventHandler(object sender, StorageZoneInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MediaAssetFormatRowChangeEventHandler(object sender, MediaAssetFormatRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MasterClassRowChangeEventHandler(object sender, MasterClassRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void IWFM_WorkflowRowChangeEventHandler(object sender, IWFM_WorkflowRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void IWFM_NodeSignerRowChangeEventHandler(object sender, IWFM_NodeSignerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void IWFM_NodeRowChangeEventHandler(object sender, IWFM_NodeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Relator2ContributorRowChangeEventHandler(object sender, Relator2ContributorRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogicLibDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLibDataTable() {
                this.TableName = "LogicLib";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogicLibDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LogicLibDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLibRow this[int index] {
                get {
                    return ((LogicLibRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLibRowChangeEventHandler LogicLibRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLibRowChangeEventHandler LogicLibRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLibRowChangeEventHandler LogicLibRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLibRowChangeEventHandler LogicLibRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLogicLibRow(LogicLibRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLibRow AddLogicLibRow(System.Guid ID, string Name, int Type, string Remark) {
                LogicLibRow rowLogicLibRow = ((LogicLibRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Name,
                        Type,
                        Remark};
                rowLogicLibRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogicLibRow);
                return rowLogicLibRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLibRow FindByID(System.Guid ID) {
                return ((LogicLibRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LogicLibDataTable cln = ((LogicLibDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogicLibDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnType = base.Columns["Type"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 100;
                this.columnRemark.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLibRow NewLogicLibRow() {
                return ((LogicLibRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogicLibRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LogicLibRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogicLibRowChanged != null)) {
                    this.LogicLibRowChanged(this, new LogicLibRowChangeEvent(((LogicLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogicLibRowChanging != null)) {
                    this.LogicLibRowChanging(this, new LogicLibRowChangeEvent(((LogicLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogicLibRowDeleted != null)) {
                    this.LogicLibRowDeleted(this, new LogicLibRowChangeEvent(((LogicLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogicLibRowDeleting != null)) {
                    this.LogicLibRowDeleting(this, new LogicLibRowChangeEvent(((LogicLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLogicLibRow(LogicLibRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogicLibDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogicLib2StorageDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLogicLibID;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnOnline;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLib2StorageDataTable() {
                this.TableName = "LogicLib2Storage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogicLib2StorageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LogicLib2StorageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogicLibIDColumn {
                get {
                    return this.columnLogicLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OnlineColumn {
                get {
                    return this.columnOnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLib2StorageRow this[int index] {
                get {
                    return ((LogicLib2StorageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLib2StorageRowChangeEventHandler LogicLib2StorageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLib2StorageRowChangeEventHandler LogicLib2StorageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLib2StorageRowChangeEventHandler LogicLib2StorageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogicLib2StorageRowChangeEventHandler LogicLib2StorageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLogicLib2StorageRow(LogicLib2StorageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLib2StorageRow AddLogicLib2StorageRow(System.Guid LogicLibID, System.Guid StorageID, bool Online) {
                LogicLib2StorageRow rowLogicLib2StorageRow = ((LogicLib2StorageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LogicLibID,
                        StorageID,
                        Online};
                rowLogicLib2StorageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogicLib2StorageRow);
                return rowLogicLib2StorageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLib2StorageRow FindByLogicLibIDStorageID(System.Guid LogicLibID, System.Guid StorageID) {
                return ((LogicLib2StorageRow)(this.Rows.Find(new object[] {
                            LogicLibID,
                            StorageID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LogicLib2StorageDataTable cln = ((LogicLib2StorageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogicLib2StorageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLogicLibID = base.Columns["LogicLibID"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnOnline = base.Columns["Online"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLogicLibID = new global::System.Data.DataColumn("LogicLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogicLibID);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnOnline = new global::System.Data.DataColumn("Online", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnline);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLogicLibID,
                                this.columnStorageID}, true));
                this.columnLogicLibID.AllowDBNull = false;
                this.columnStorageID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLib2StorageRow NewLogicLib2StorageRow() {
                return ((LogicLib2StorageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogicLib2StorageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LogicLib2StorageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogicLib2StorageRowChanged != null)) {
                    this.LogicLib2StorageRowChanged(this, new LogicLib2StorageRowChangeEvent(((LogicLib2StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogicLib2StorageRowChanging != null)) {
                    this.LogicLib2StorageRowChanging(this, new LogicLib2StorageRowChangeEvent(((LogicLib2StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogicLib2StorageRowDeleted != null)) {
                    this.LogicLib2StorageRowDeleted(this, new LogicLib2StorageRowChangeEvent(((LogicLib2StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogicLib2StorageRowDeleting != null)) {
                    this.LogicLib2StorageRowDeleting(this, new LogicLib2StorageRowChangeEvent(((LogicLib2StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLogicLib2StorageRow(LogicLib2StorageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogicLib2StorageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StorageDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnMaxSpace;
            
            private global::System.Data.DataColumn columnFreeSpace;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageDataTable() {
                this.TableName = "Storage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StorageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceColumn {
                get {
                    return this.columnMaxSpace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceColumn {
                get {
                    return this.columnFreeSpace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageRow this[int index] {
                get {
                    return ((StorageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageRowChangeEventHandler StorageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageRowChangeEventHandler StorageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageRowChangeEventHandler StorageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageRowChangeEventHandler StorageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStorageRow(StorageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageRow AddStorageRow(System.Guid ID, string Name, int MaxSpace, int FreeSpace, string Remark) {
                StorageRow rowStorageRow = ((StorageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Name,
                        MaxSpace,
                        FreeSpace,
                        Remark};
                rowStorageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStorageRow);
                return rowStorageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageRow FindByID(System.Guid ID) {
                return ((StorageRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StorageDataTable cln = ((StorageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StorageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnMaxSpace = base.Columns["MaxSpace"];
                this.columnFreeSpace = base.Columns["FreeSpace"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnMaxSpace = new global::System.Data.DataColumn("MaxSpace", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpace);
                this.columnFreeSpace = new global::System.Data.DataColumn("FreeSpace", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpace);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 100;
                this.columnRemark.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageRow NewStorageRow() {
                return ((StorageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StorageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StorageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StorageRowChanged != null)) {
                    this.StorageRowChanged(this, new StorageRowChangeEvent(((StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StorageRowChanging != null)) {
                    this.StorageRowChanging(this, new StorageRowChangeEvent(((StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StorageRowDeleted != null)) {
                    this.StorageRowDeleted(this, new StorageRowChangeEvent(((StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StorageRowDeleting != null)) {
                    this.StorageRowDeleting(this, new StorageRowChangeEvent(((StorageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStorageRow(StorageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StorageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StorageZoneInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnProtocalType;
            
            private global::System.Data.DataColumn columnSeparateLine;
            
            private global::System.Data.DataColumn columnServerName;
            
            private global::System.Data.DataColumn columnServerIP;
            
            private global::System.Data.DataColumn columnDir;
            
            private global::System.Data.DataColumn columnPort;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnNotCredibleServerName;
            
            private global::System.Data.DataColumn columnNotCredibleServerIP;
            
            private global::System.Data.DataColumn columnNotCrediblePort;
            
            private global::System.Data.DataColumn columnInterNetServerName;
            
            private global::System.Data.DataColumn columnInterNetServerIP;
            
            private global::System.Data.DataColumn columnInterNetPort;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoDataTable() {
                this.TableName = "StorageZoneInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StorageZoneInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProtocalTypeColumn {
                get {
                    return this.columnProtocalType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeparateLineColumn {
                get {
                    return this.columnSeparateLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServerNameColumn {
                get {
                    return this.columnServerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServerIPColumn {
                get {
                    return this.columnServerIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirColumn {
                get {
                    return this.columnDir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PortColumn {
                get {
                    return this.columnPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotCredibleServerNameColumn {
                get {
                    return this.columnNotCredibleServerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotCredibleServerIPColumn {
                get {
                    return this.columnNotCredibleServerIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotCrediblePortColumn {
                get {
                    return this.columnNotCrediblePort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InterNetServerNameColumn {
                get {
                    return this.columnInterNetServerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InterNetServerIPColumn {
                get {
                    return this.columnInterNetServerIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InterNetPortColumn {
                get {
                    return this.columnInterNetPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow this[int index] {
                get {
                    return ((StorageZoneInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStorageZoneInfoRow(StorageZoneInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow AddStorageZoneInfoRow(
                        System.Guid ID, 
                        System.Guid StorageID, 
                        string ProtocalType, 
                        string SeparateLine, 
                        string ServerName, 
                        string ServerIP, 
                        string Dir, 
                        int Port, 
                        string UserName, 
                        string Password, 
                        string Remark, 
                        string NotCredibleServerName, 
                        string NotCredibleServerIP, 
                        int NotCrediblePort, 
                        string InterNetServerName, 
                        string InterNetServerIP, 
                        int InterNetPort) {
                StorageZoneInfoRow rowStorageZoneInfoRow = ((StorageZoneInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        StorageID,
                        ProtocalType,
                        SeparateLine,
                        ServerName,
                        ServerIP,
                        Dir,
                        Port,
                        UserName,
                        Password,
                        Remark,
                        NotCredibleServerName,
                        NotCredibleServerIP,
                        NotCrediblePort,
                        InterNetServerName,
                        InterNetServerIP,
                        InterNetPort};
                rowStorageZoneInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStorageZoneInfoRow);
                return rowStorageZoneInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow FindByID(System.Guid ID) {
                return ((StorageZoneInfoRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StorageZoneInfoDataTable cln = ((StorageZoneInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StorageZoneInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnProtocalType = base.Columns["ProtocalType"];
                this.columnSeparateLine = base.Columns["SeparateLine"];
                this.columnServerName = base.Columns["ServerName"];
                this.columnServerIP = base.Columns["ServerIP"];
                this.columnDir = base.Columns["Dir"];
                this.columnPort = base.Columns["Port"];
                this.columnUserName = base.Columns["UserName"];
                this.columnPassword = base.Columns["Password"];
                this.columnRemark = base.Columns["Remark"];
                this.columnNotCredibleServerName = base.Columns["NotCredibleServerName"];
                this.columnNotCredibleServerIP = base.Columns["NotCredibleServerIP"];
                this.columnNotCrediblePort = base.Columns["NotCrediblePort"];
                this.columnInterNetServerName = base.Columns["InterNetServerName"];
                this.columnInterNetServerIP = base.Columns["InterNetServerIP"];
                this.columnInterNetPort = base.Columns["InterNetPort"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnProtocalType = new global::System.Data.DataColumn("ProtocalType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProtocalType);
                this.columnSeparateLine = new global::System.Data.DataColumn("SeparateLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeparateLine);
                this.columnServerName = new global::System.Data.DataColumn("ServerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerName);
                this.columnServerIP = new global::System.Data.DataColumn("ServerIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerIP);
                this.columnDir = new global::System.Data.DataColumn("Dir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDir);
                this.columnPort = new global::System.Data.DataColumn("Port", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPort);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnNotCredibleServerName = new global::System.Data.DataColumn("NotCredibleServerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotCredibleServerName);
                this.columnNotCredibleServerIP = new global::System.Data.DataColumn("NotCredibleServerIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotCredibleServerIP);
                this.columnNotCrediblePort = new global::System.Data.DataColumn("NotCrediblePort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotCrediblePort);
                this.columnInterNetServerName = new global::System.Data.DataColumn("InterNetServerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterNetServerName);
                this.columnInterNetServerIP = new global::System.Data.DataColumn("InterNetServerIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterNetServerIP);
                this.columnInterNetPort = new global::System.Data.DataColumn("InterNetPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterNetPort);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnProtocalType.MaxLength = 50;
                this.columnSeparateLine.MaxLength = 50;
                this.columnServerName.MaxLength = 100;
                this.columnServerIP.MaxLength = 100;
                this.columnDir.MaxLength = 100;
                this.columnUserName.MaxLength = 100;
                this.columnPassword.MaxLength = 100;
                this.columnRemark.MaxLength = 200;
                this.columnNotCredibleServerName.MaxLength = 100;
                this.columnNotCredibleServerIP.MaxLength = 100;
                this.columnInterNetServerName.MaxLength = 100;
                this.columnInterNetServerIP.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow NewStorageZoneInfoRow() {
                return ((StorageZoneInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StorageZoneInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StorageZoneInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StorageZoneInfoRowChanged != null)) {
                    this.StorageZoneInfoRowChanged(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StorageZoneInfoRowChanging != null)) {
                    this.StorageZoneInfoRowChanging(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StorageZoneInfoRowDeleted != null)) {
                    this.StorageZoneInfoRowDeleted(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StorageZoneInfoRowDeleting != null)) {
                    this.StorageZoneInfoRowDeleting(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStorageZoneInfoRow(StorageZoneInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StorageZoneInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MediaAssetFormatDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnFormatKey;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MediaAssetFormatDataTable() {
                this.TableName = "MediaAssetFormat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MediaAssetFormatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MediaAssetFormatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormatKeyColumn {
                get {
                    return this.columnFormatKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MediaAssetFormatRow this[int index] {
                get {
                    return ((MediaAssetFormatRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MediaAssetFormatRowChangeEventHandler MediaAssetFormatRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MediaAssetFormatRowChangeEventHandler MediaAssetFormatRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MediaAssetFormatRowChangeEventHandler MediaAssetFormatRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MediaAssetFormatRowChangeEventHandler MediaAssetFormatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMediaAssetFormatRow(MediaAssetFormatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MediaAssetFormatRow AddMediaAssetFormatRow(System.Guid ID, string Name, string FormatKey, string Remark) {
                MediaAssetFormatRow rowMediaAssetFormatRow = ((MediaAssetFormatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Name,
                        FormatKey,
                        Remark};
                rowMediaAssetFormatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMediaAssetFormatRow);
                return rowMediaAssetFormatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MediaAssetFormatRow FindByID(System.Guid ID) {
                return ((MediaAssetFormatRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MediaAssetFormatDataTable cln = ((MediaAssetFormatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MediaAssetFormatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnFormatKey = base.Columns["FormatKey"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnFormatKey = new global::System.Data.DataColumn("FormatKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormatKey);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 200;
                this.columnFormatKey.MaxLength = 200;
                this.columnRemark.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MediaAssetFormatRow NewMediaAssetFormatRow() {
                return ((MediaAssetFormatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MediaAssetFormatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MediaAssetFormatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MediaAssetFormatRowChanged != null)) {
                    this.MediaAssetFormatRowChanged(this, new MediaAssetFormatRowChangeEvent(((MediaAssetFormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MediaAssetFormatRowChanging != null)) {
                    this.MediaAssetFormatRowChanging(this, new MediaAssetFormatRowChangeEvent(((MediaAssetFormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MediaAssetFormatRowDeleted != null)) {
                    this.MediaAssetFormatRowDeleted(this, new MediaAssetFormatRowChangeEvent(((MediaAssetFormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MediaAssetFormatRowDeleting != null)) {
                    this.MediaAssetFormatRowDeleting(this, new MediaAssetFormatRowChangeEvent(((MediaAssetFormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMediaAssetFormatRow(MediaAssetFormatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MediaAssetFormatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MasterClassDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMediaAssetFormatID;
            
            private global::System.Data.DataColumn columnParentID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAlternativeName;
            
            private global::System.Data.DataColumn columnFastCode;
            
            private global::System.Data.DataColumn columnMasterClassKey;
            
            private global::System.Data.DataColumn columnIsDefault;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnCreateUserName;
            
            private global::System.Data.DataColumn columnCreateUserID;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnModifyUserName;
            
            private global::System.Data.DataColumn columnModifyUserID;
            
            private global::System.Data.DataColumn columnModifyDateTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MasterClassDataTable() {
                this.TableName = "MasterClass";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MasterClassDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MasterClassDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MediaAssetFormatIDColumn {
                get {
                    return this.columnMediaAssetFormatID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeNameColumn {
                get {
                    return this.columnAlternativeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastCodeColumn {
                get {
                    return this.columnFastCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MasterClassKeyColumn {
                get {
                    return this.columnMasterClassKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDefaultColumn {
                get {
                    return this.columnIsDefault;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserNameColumn {
                get {
                    return this.columnCreateUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserIDColumn {
                get {
                    return this.columnCreateUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserNameColumn {
                get {
                    return this.columnModifyUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyUserIDColumn {
                get {
                    return this.columnModifyUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifyDateTimeColumn {
                get {
                    return this.columnModifyDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MasterClassRow this[int index] {
                get {
                    return ((MasterClassRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MasterClassRowChangeEventHandler MasterClassRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MasterClassRowChangeEventHandler MasterClassRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MasterClassRowChangeEventHandler MasterClassRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MasterClassRowChangeEventHandler MasterClassRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMasterClassRow(MasterClassRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MasterClassRow AddMasterClassRow(System.Guid ID, System.Guid MediaAssetFormatID, System.Guid ParentID, string Name, string AlternativeName, string FastCode, string MasterClassKey, bool IsDefault, string Remark, string CreateUserName, System.Guid CreateUserID, System.DateTime CreateDateTime, string ModifyUserName, System.Guid ModifyUserID, System.DateTime ModifyDateTime) {
                MasterClassRow rowMasterClassRow = ((MasterClassRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        MediaAssetFormatID,
                        ParentID,
                        Name,
                        AlternativeName,
                        FastCode,
                        MasterClassKey,
                        IsDefault,
                        Remark,
                        CreateUserName,
                        CreateUserID,
                        CreateDateTime,
                        ModifyUserName,
                        ModifyUserID,
                        ModifyDateTime};
                rowMasterClassRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMasterClassRow);
                return rowMasterClassRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MasterClassRow FindByID(System.Guid ID) {
                return ((MasterClassRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MasterClassDataTable cln = ((MasterClassDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MasterClassDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMediaAssetFormatID = base.Columns["MediaAssetFormatID"];
                this.columnParentID = base.Columns["ParentID"];
                this.columnName = base.Columns["Name"];
                this.columnAlternativeName = base.Columns["AlternativeName"];
                this.columnFastCode = base.Columns["FastCode"];
                this.columnMasterClassKey = base.Columns["MasterClassKey"];
                this.columnIsDefault = base.Columns["IsDefault"];
                this.columnRemark = base.Columns["Remark"];
                this.columnCreateUserName = base.Columns["CreateUserName"];
                this.columnCreateUserID = base.Columns["CreateUserID"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnModifyUserName = base.Columns["ModifyUserName"];
                this.columnModifyUserID = base.Columns["ModifyUserID"];
                this.columnModifyDateTime = base.Columns["ModifyDateTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMediaAssetFormatID = new global::System.Data.DataColumn("MediaAssetFormatID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMediaAssetFormatID);
                this.columnParentID = new global::System.Data.DataColumn("ParentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAlternativeName = new global::System.Data.DataColumn("AlternativeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeName);
                this.columnFastCode = new global::System.Data.DataColumn("FastCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFastCode);
                this.columnMasterClassKey = new global::System.Data.DataColumn("MasterClassKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterClassKey);
                this.columnIsDefault = new global::System.Data.DataColumn("IsDefault", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDefault);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnCreateUserName = new global::System.Data.DataColumn("CreateUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUserName);
                this.columnCreateUserID = new global::System.Data.DataColumn("CreateUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUserID);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnModifyUserName = new global::System.Data.DataColumn("ModifyUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUserName);
                this.columnModifyUserID = new global::System.Data.DataColumn("ModifyUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyUserID);
                this.columnModifyDateTime = new global::System.Data.DataColumn("ModifyDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyDateTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 200;
                this.columnAlternativeName.MaxLength = 200;
                this.columnFastCode.MaxLength = 200;
                this.columnMasterClassKey.MaxLength = 200;
                this.columnRemark.MaxLength = 500;
                this.columnCreateUserName.MaxLength = 50;
                this.columnModifyUserName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MasterClassRow NewMasterClassRow() {
                return ((MasterClassRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MasterClassRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MasterClassRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MasterClassRowChanged != null)) {
                    this.MasterClassRowChanged(this, new MasterClassRowChangeEvent(((MasterClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MasterClassRowChanging != null)) {
                    this.MasterClassRowChanging(this, new MasterClassRowChangeEvent(((MasterClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MasterClassRowDeleted != null)) {
                    this.MasterClassRowDeleted(this, new MasterClassRowChangeEvent(((MasterClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MasterClassRowDeleting != null)) {
                    this.MasterClassRowDeleting(this, new MasterClassRowChangeEvent(((MasterClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMasterClassRow(MasterClassRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MasterClassDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IWFM_WorkflowDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSystemID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSignerOnlyOne;
            
            private global::System.Data.DataColumn columnHandler;
            
            private global::System.Data.DataColumn columnIsEnable;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_WorkflowDataTable() {
                this.TableName = "IWFM_Workflow";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IWFM_WorkflowDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected IWFM_WorkflowDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SystemIDColumn {
                get {
                    return this.columnSystemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SignerOnlyOneColumn {
                get {
                    return this.columnSignerOnlyOne;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandlerColumn {
                get {
                    return this.columnHandler;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsEnableColumn {
                get {
                    return this.columnIsEnable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_WorkflowRow this[int index] {
                get {
                    return ((IWFM_WorkflowRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_WorkflowRowChangeEventHandler IWFM_WorkflowRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_WorkflowRowChangeEventHandler IWFM_WorkflowRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_WorkflowRowChangeEventHandler IWFM_WorkflowRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_WorkflowRowChangeEventHandler IWFM_WorkflowRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddIWFM_WorkflowRow(IWFM_WorkflowRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_WorkflowRow AddIWFM_WorkflowRow(System.Guid ID, System.Guid SystemID, string Name, int Type, bool SignerOnlyOne, string Handler, bool IsEnable, string Remark) {
                IWFM_WorkflowRow rowIWFM_WorkflowRow = ((IWFM_WorkflowRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        SystemID,
                        Name,
                        Type,
                        SignerOnlyOne,
                        Handler,
                        IsEnable,
                        Remark};
                rowIWFM_WorkflowRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIWFM_WorkflowRow);
                return rowIWFM_WorkflowRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_WorkflowRow FindByID(System.Guid ID) {
                return ((IWFM_WorkflowRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IWFM_WorkflowDataTable cln = ((IWFM_WorkflowDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IWFM_WorkflowDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSystemID = base.Columns["SystemID"];
                this.columnName = base.Columns["Name"];
                this.columnType = base.Columns["Type"];
                this.columnSignerOnlyOne = base.Columns["SignerOnlyOne"];
                this.columnHandler = base.Columns["Handler"];
                this.columnIsEnable = base.Columns["IsEnable"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSystemID = new global::System.Data.DataColumn("SystemID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSignerOnlyOne = new global::System.Data.DataColumn("SignerOnlyOne", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignerOnlyOne);
                this.columnHandler = new global::System.Data.DataColumn("Handler", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandler);
                this.columnIsEnable = new global::System.Data.DataColumn("IsEnable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEnable);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 100;
                this.columnHandler.MaxLength = 500;
                this.columnRemark.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_WorkflowRow NewIWFM_WorkflowRow() {
                return ((IWFM_WorkflowRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IWFM_WorkflowRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IWFM_WorkflowRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IWFM_WorkflowRowChanged != null)) {
                    this.IWFM_WorkflowRowChanged(this, new IWFM_WorkflowRowChangeEvent(((IWFM_WorkflowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IWFM_WorkflowRowChanging != null)) {
                    this.IWFM_WorkflowRowChanging(this, new IWFM_WorkflowRowChangeEvent(((IWFM_WorkflowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IWFM_WorkflowRowDeleted != null)) {
                    this.IWFM_WorkflowRowDeleted(this, new IWFM_WorkflowRowChangeEvent(((IWFM_WorkflowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IWFM_WorkflowRowDeleting != null)) {
                    this.IWFM_WorkflowRowDeleting(this, new IWFM_WorkflowRowChangeEvent(((IWFM_WorkflowRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveIWFM_WorkflowRow(IWFM_WorkflowRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IWFM_WorkflowDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IWFM_NodeSignerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSystemID;
            
            private global::System.Data.DataColumn columnWorkflowID;
            
            private global::System.Data.DataColumn columnNodeID;
            
            private global::System.Data.DataColumn columnSignerID;
            
            private global::System.Data.DataColumn columnSignerName;
            
            private global::System.Data.DataColumn columnApprovalValue;
            
            private global::System.Data.DataColumn columnRejectValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeSignerDataTable() {
                this.TableName = "IWFM_NodeSigner";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IWFM_NodeSignerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected IWFM_NodeSignerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SystemIDColumn {
                get {
                    return this.columnSystemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkflowIDColumn {
                get {
                    return this.columnWorkflowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NodeIDColumn {
                get {
                    return this.columnNodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SignerIDColumn {
                get {
                    return this.columnSignerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SignerNameColumn {
                get {
                    return this.columnSignerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovalValueColumn {
                get {
                    return this.columnApprovalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RejectValueColumn {
                get {
                    return this.columnRejectValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeSignerRow this[int index] {
                get {
                    return ((IWFM_NodeSignerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeSignerRowChangeEventHandler IWFM_NodeSignerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeSignerRowChangeEventHandler IWFM_NodeSignerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeSignerRowChangeEventHandler IWFM_NodeSignerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeSignerRowChangeEventHandler IWFM_NodeSignerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddIWFM_NodeSignerRow(IWFM_NodeSignerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeSignerRow AddIWFM_NodeSignerRow(System.Guid ID, System.Guid SystemID, System.Guid WorkflowID, System.Guid NodeID, System.Guid SignerID, string SignerName, int ApprovalValue, int RejectValue) {
                IWFM_NodeSignerRow rowIWFM_NodeSignerRow = ((IWFM_NodeSignerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        SystemID,
                        WorkflowID,
                        NodeID,
                        SignerID,
                        SignerName,
                        ApprovalValue,
                        RejectValue};
                rowIWFM_NodeSignerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIWFM_NodeSignerRow);
                return rowIWFM_NodeSignerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeSignerRow FindByID(System.Guid ID) {
                return ((IWFM_NodeSignerRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IWFM_NodeSignerDataTable cln = ((IWFM_NodeSignerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IWFM_NodeSignerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSystemID = base.Columns["SystemID"];
                this.columnWorkflowID = base.Columns["WorkflowID"];
                this.columnNodeID = base.Columns["NodeID"];
                this.columnSignerID = base.Columns["SignerID"];
                this.columnSignerName = base.Columns["SignerName"];
                this.columnApprovalValue = base.Columns["ApprovalValue"];
                this.columnRejectValue = base.Columns["RejectValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSystemID = new global::System.Data.DataColumn("SystemID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemID);
                this.columnWorkflowID = new global::System.Data.DataColumn("WorkflowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkflowID);
                this.columnNodeID = new global::System.Data.DataColumn("NodeID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNodeID);
                this.columnSignerID = new global::System.Data.DataColumn("SignerID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignerID);
                this.columnSignerName = new global::System.Data.DataColumn("SignerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignerName);
                this.columnApprovalValue = new global::System.Data.DataColumn("ApprovalValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalValue);
                this.columnRejectValue = new global::System.Data.DataColumn("RejectValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRejectValue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnSignerName.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeSignerRow NewIWFM_NodeSignerRow() {
                return ((IWFM_NodeSignerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IWFM_NodeSignerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IWFM_NodeSignerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IWFM_NodeSignerRowChanged != null)) {
                    this.IWFM_NodeSignerRowChanged(this, new IWFM_NodeSignerRowChangeEvent(((IWFM_NodeSignerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IWFM_NodeSignerRowChanging != null)) {
                    this.IWFM_NodeSignerRowChanging(this, new IWFM_NodeSignerRowChangeEvent(((IWFM_NodeSignerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IWFM_NodeSignerRowDeleted != null)) {
                    this.IWFM_NodeSignerRowDeleted(this, new IWFM_NodeSignerRowChangeEvent(((IWFM_NodeSignerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IWFM_NodeSignerRowDeleting != null)) {
                    this.IWFM_NodeSignerRowDeleting(this, new IWFM_NodeSignerRowChangeEvent(((IWFM_NodeSignerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveIWFM_NodeSignerRow(IWFM_NodeSignerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IWFM_NodeSignerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IWFM_NodeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSystemID;
            
            private global::System.Data.DataColumn columnWorkflowID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnNodeIndex;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnPrevNodeID;
            
            private global::System.Data.DataColumn columnNextNodeID;
            
            private global::System.Data.DataColumn columnApprovalTotal;
            
            private global::System.Data.DataColumn columnRejectTotal;
            
            private global::System.Data.DataColumn columnRemind;
            
            private global::System.Data.DataColumn columnFinishBehavior;
            
            private global::System.Data.DataColumn columnTimeoutType;
            
            private global::System.Data.DataColumn columnExpireTime;
            
            private global::System.Data.DataColumn columnTimeout;
            
            private global::System.Data.DataColumn columnTimeoutHandler;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeDataTable() {
                this.TableName = "IWFM_Node";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IWFM_NodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected IWFM_NodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SystemIDColumn {
                get {
                    return this.columnSystemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkflowIDColumn {
                get {
                    return this.columnWorkflowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NodeIndexColumn {
                get {
                    return this.columnNodeIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevNodeIDColumn {
                get {
                    return this.columnPrevNodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NextNodeIDColumn {
                get {
                    return this.columnNextNodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovalTotalColumn {
                get {
                    return this.columnApprovalTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RejectTotalColumn {
                get {
                    return this.columnRejectTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemindColumn {
                get {
                    return this.columnRemind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishBehaviorColumn {
                get {
                    return this.columnFinishBehavior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeoutTypeColumn {
                get {
                    return this.columnTimeoutType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpireTimeColumn {
                get {
                    return this.columnExpireTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeoutColumn {
                get {
                    return this.columnTimeout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeoutHandlerColumn {
                get {
                    return this.columnTimeoutHandler;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeRow this[int index] {
                get {
                    return ((IWFM_NodeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeRowChangeEventHandler IWFM_NodeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeRowChangeEventHandler IWFM_NodeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeRowChangeEventHandler IWFM_NodeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IWFM_NodeRowChangeEventHandler IWFM_NodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddIWFM_NodeRow(IWFM_NodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeRow AddIWFM_NodeRow(
                        System.Guid ID, 
                        System.Guid SystemID, 
                        System.Guid WorkflowID, 
                        string Name, 
                        int NodeIndex, 
                        int Type, 
                        System.Guid PrevNodeID, 
                        System.Guid NextNodeID, 
                        int ApprovalTotal, 
                        int RejectTotal, 
                        string Remind, 
                        int FinishBehavior, 
                        int TimeoutType, 
                        System.DateTime ExpireTime, 
                        int Timeout, 
                        int TimeoutHandler, 
                        string Remark) {
                IWFM_NodeRow rowIWFM_NodeRow = ((IWFM_NodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        SystemID,
                        WorkflowID,
                        Name,
                        NodeIndex,
                        Type,
                        PrevNodeID,
                        NextNodeID,
                        ApprovalTotal,
                        RejectTotal,
                        Remind,
                        FinishBehavior,
                        TimeoutType,
                        ExpireTime,
                        Timeout,
                        TimeoutHandler,
                        Remark};
                rowIWFM_NodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIWFM_NodeRow);
                return rowIWFM_NodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeRow FindByID(System.Guid ID) {
                return ((IWFM_NodeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IWFM_NodeDataTable cln = ((IWFM_NodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IWFM_NodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSystemID = base.Columns["SystemID"];
                this.columnWorkflowID = base.Columns["WorkflowID"];
                this.columnName = base.Columns["Name"];
                this.columnNodeIndex = base.Columns["NodeIndex"];
                this.columnType = base.Columns["Type"];
                this.columnPrevNodeID = base.Columns["PrevNodeID"];
                this.columnNextNodeID = base.Columns["NextNodeID"];
                this.columnApprovalTotal = base.Columns["ApprovalTotal"];
                this.columnRejectTotal = base.Columns["RejectTotal"];
                this.columnRemind = base.Columns["Remind"];
                this.columnFinishBehavior = base.Columns["FinishBehavior"];
                this.columnTimeoutType = base.Columns["TimeoutType"];
                this.columnExpireTime = base.Columns["ExpireTime"];
                this.columnTimeout = base.Columns["Timeout"];
                this.columnTimeoutHandler = base.Columns["TimeoutHandler"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSystemID = new global::System.Data.DataColumn("SystemID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemID);
                this.columnWorkflowID = new global::System.Data.DataColumn("WorkflowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkflowID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnNodeIndex = new global::System.Data.DataColumn("NodeIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNodeIndex);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPrevNodeID = new global::System.Data.DataColumn("PrevNodeID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevNodeID);
                this.columnNextNodeID = new global::System.Data.DataColumn("NextNodeID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextNodeID);
                this.columnApprovalTotal = new global::System.Data.DataColumn("ApprovalTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalTotal);
                this.columnRejectTotal = new global::System.Data.DataColumn("RejectTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRejectTotal);
                this.columnRemind = new global::System.Data.DataColumn("Remind", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemind);
                this.columnFinishBehavior = new global::System.Data.DataColumn("FinishBehavior", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishBehavior);
                this.columnTimeoutType = new global::System.Data.DataColumn("TimeoutType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeoutType);
                this.columnExpireTime = new global::System.Data.DataColumn("ExpireTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpireTime);
                this.columnTimeout = new global::System.Data.DataColumn("Timeout", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeout);
                this.columnTimeoutHandler = new global::System.Data.DataColumn("TimeoutHandler", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeoutHandler);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 200;
                this.columnRemind.MaxLength = 500;
                this.columnRemark.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeRow NewIWFM_NodeRow() {
                return ((IWFM_NodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IWFM_NodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IWFM_NodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IWFM_NodeRowChanged != null)) {
                    this.IWFM_NodeRowChanged(this, new IWFM_NodeRowChangeEvent(((IWFM_NodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IWFM_NodeRowChanging != null)) {
                    this.IWFM_NodeRowChanging(this, new IWFM_NodeRowChangeEvent(((IWFM_NodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IWFM_NodeRowDeleted != null)) {
                    this.IWFM_NodeRowDeleted(this, new IWFM_NodeRowChangeEvent(((IWFM_NodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IWFM_NodeRowDeleting != null)) {
                    this.IWFM_NodeRowDeleting(this, new IWFM_NodeRowChangeEvent(((IWFM_NodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveIWFM_NodeRow(IWFM_NodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IWFM_NodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Relator2ContributorDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRelatorID;
            
            private global::System.Data.DataColumn columnContributorID;
            
            private global::System.Data.DataColumn columnOrderNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Relator2ContributorDataTable() {
                this.TableName = "Relator2Contributor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Relator2ContributorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Relator2ContributorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelatorIDColumn {
                get {
                    return this.columnRelatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContributorIDColumn {
                get {
                    return this.columnContributorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderNumberColumn {
                get {
                    return this.columnOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Relator2ContributorRow this[int index] {
                get {
                    return ((Relator2ContributorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Relator2ContributorRowChangeEventHandler Relator2ContributorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Relator2ContributorRowChangeEventHandler Relator2ContributorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Relator2ContributorRowChangeEventHandler Relator2ContributorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Relator2ContributorRowChangeEventHandler Relator2ContributorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRelator2ContributorRow(Relator2ContributorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Relator2ContributorRow AddRelator2ContributorRow(System.Guid ID, System.Guid RelatorID, System.Guid ContributorID, int OrderNumber) {
                Relator2ContributorRow rowRelator2ContributorRow = ((Relator2ContributorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        RelatorID,
                        ContributorID,
                        OrderNumber};
                rowRelator2ContributorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelator2ContributorRow);
                return rowRelator2ContributorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Relator2ContributorRow FindByID(System.Guid ID) {
                return ((Relator2ContributorRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Relator2ContributorDataTable cln = ((Relator2ContributorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Relator2ContributorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRelatorID = base.Columns["RelatorID"];
                this.columnContributorID = base.Columns["ContributorID"];
                this.columnOrderNumber = base.Columns["OrderNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRelatorID = new global::System.Data.DataColumn("RelatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelatorID);
                this.columnContributorID = new global::System.Data.DataColumn("ContributorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContributorID);
                this.columnOrderNumber = new global::System.Data.DataColumn("OrderNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Relator2ContributorRow NewRelator2ContributorRow() {
                return ((Relator2ContributorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Relator2ContributorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Relator2ContributorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Relator2ContributorRowChanged != null)) {
                    this.Relator2ContributorRowChanged(this, new Relator2ContributorRowChangeEvent(((Relator2ContributorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Relator2ContributorRowChanging != null)) {
                    this.Relator2ContributorRowChanging(this, new Relator2ContributorRowChangeEvent(((Relator2ContributorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Relator2ContributorRowDeleted != null)) {
                    this.Relator2ContributorRowDeleted(this, new Relator2ContributorRowChangeEvent(((Relator2ContributorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Relator2ContributorRowDeleting != null)) {
                    this.Relator2ContributorRowDeleting(this, new Relator2ContributorRowChangeEvent(((Relator2ContributorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRelator2ContributorRow(Relator2ContributorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MediaAssetDS ds = new MediaAssetDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Relator2ContributorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LogicLibRow : global::System.Data.DataRow {
            
            private LogicLibDataTable tableLogicLib;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogicLibRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLogicLib = ((LogicLibDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableLogicLib.IDColumn]));
                }
                set {
                    this[this.tableLogicLib.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableLogicLib.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LogicLib”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLogicLib.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableLogicLib.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LogicLib”中列“Type”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLogicLib.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableLogicLib.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LogicLib”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLogicLib.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableLogicLib.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableLogicLib.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLogicLib.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableLogicLib.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableLogicLib.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableLogicLib.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LogicLib2StorageRow : global::System.Data.DataRow {
            
            private LogicLib2StorageDataTable tableLogicLib2Storage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogicLib2StorageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLogicLib2Storage = ((LogicLib2StorageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LogicLibID {
                get {
                    return ((global::System.Guid)(this[this.tableLogicLib2Storage.LogicLibIDColumn]));
                }
                set {
                    this[this.tableLogicLib2Storage.LogicLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    return ((global::System.Guid)(this[this.tableLogicLib2Storage.StorageIDColumn]));
                }
                set {
                    this[this.tableLogicLib2Storage.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Online {
                get {
                    try {
                        return ((bool)(this[this.tableLogicLib2Storage.OnlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LogicLib2Storage”中列“Online”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLogicLib2Storage.OnlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnlineNull() {
                return this.IsNull(this.tableLogicLib2Storage.OnlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOnlineNull() {
                this[this.tableLogicLib2Storage.OnlineColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StorageRow : global::System.Data.DataRow {
            
            private StorageDataTable tableStorage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStorage = ((StorageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableStorage.IDColumn]));
                }
                set {
                    this[this.tableStorage.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableStorage.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storage”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorage.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpace {
                get {
                    try {
                        return ((int)(this[this.tableStorage.MaxSpaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storage”中列“MaxSpace”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorage.MaxSpaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpace {
                get {
                    try {
                        return ((int)(this[this.tableStorage.FreeSpaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storage”中列“FreeSpace”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorage.FreeSpaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableStorage.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storage”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorage.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableStorage.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableStorage.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceNull() {
                return this.IsNull(this.tableStorage.MaxSpaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceNull() {
                this[this.tableStorage.MaxSpaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceNull() {
                return this.IsNull(this.tableStorage.FreeSpaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceNull() {
                this[this.tableStorage.FreeSpaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableStorage.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableStorage.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StorageZoneInfoRow : global::System.Data.DataRow {
            
            private StorageZoneInfoDataTable tableStorageZoneInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStorageZoneInfo = ((StorageZoneInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableStorageZoneInfo.IDColumn]));
                }
                set {
                    this[this.tableStorageZoneInfo.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStorageZoneInfo.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProtocalType {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.ProtocalTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“ProtocalType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.ProtocalTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeparateLine {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.SeparateLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“SeparateLine”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.SeparateLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ServerName {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.ServerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“ServerName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.ServerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ServerIP {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.ServerIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“ServerIP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.ServerIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Dir {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.DirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Dir”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.DirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Port {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Port”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“UserName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Password {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.PasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Password”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NotCredibleServerName {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.NotCredibleServerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“NotCredibleServerName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.NotCredibleServerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NotCredibleServerIP {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.NotCredibleServerIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“NotCredibleServerIP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.NotCredibleServerIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NotCrediblePort {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.NotCrediblePortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“NotCrediblePort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.NotCrediblePortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InterNetServerName {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.InterNetServerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“InterNetServerName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.InterNetServerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InterNetServerIP {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.InterNetServerIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“InterNetServerIP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.InterNetServerIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InterNetPort {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.InterNetPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“InterNetPort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.InterNetPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableStorageZoneInfo.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageIDNull() {
                this[this.tableStorageZoneInfo.StorageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProtocalTypeNull() {
                return this.IsNull(this.tableStorageZoneInfo.ProtocalTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProtocalTypeNull() {
                this[this.tableStorageZoneInfo.ProtocalTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeparateLineNull() {
                return this.IsNull(this.tableStorageZoneInfo.SeparateLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeparateLineNull() {
                this[this.tableStorageZoneInfo.SeparateLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServerNameNull() {
                return this.IsNull(this.tableStorageZoneInfo.ServerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServerNameNull() {
                this[this.tableStorageZoneInfo.ServerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServerIPNull() {
                return this.IsNull(this.tableStorageZoneInfo.ServerIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServerIPNull() {
                this[this.tableStorageZoneInfo.ServerIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirNull() {
                return this.IsNull(this.tableStorageZoneInfo.DirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirNull() {
                this[this.tableStorageZoneInfo.DirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPortNull() {
                return this.IsNull(this.tableStorageZoneInfo.PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPortNull() {
                this[this.tableStorageZoneInfo.PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull() {
                return this.IsNull(this.tableStorageZoneInfo.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull() {
                this[this.tableStorageZoneInfo.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPasswordNull() {
                return this.IsNull(this.tableStorageZoneInfo.PasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPasswordNull() {
                this[this.tableStorageZoneInfo.PasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableStorageZoneInfo.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableStorageZoneInfo.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotCredibleServerNameNull() {
                return this.IsNull(this.tableStorageZoneInfo.NotCredibleServerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotCredibleServerNameNull() {
                this[this.tableStorageZoneInfo.NotCredibleServerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotCredibleServerIPNull() {
                return this.IsNull(this.tableStorageZoneInfo.NotCredibleServerIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotCredibleServerIPNull() {
                this[this.tableStorageZoneInfo.NotCredibleServerIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotCrediblePortNull() {
                return this.IsNull(this.tableStorageZoneInfo.NotCrediblePortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotCrediblePortNull() {
                this[this.tableStorageZoneInfo.NotCrediblePortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInterNetServerNameNull() {
                return this.IsNull(this.tableStorageZoneInfo.InterNetServerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInterNetServerNameNull() {
                this[this.tableStorageZoneInfo.InterNetServerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInterNetServerIPNull() {
                return this.IsNull(this.tableStorageZoneInfo.InterNetServerIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInterNetServerIPNull() {
                this[this.tableStorageZoneInfo.InterNetServerIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInterNetPortNull() {
                return this.IsNull(this.tableStorageZoneInfo.InterNetPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInterNetPortNull() {
                this[this.tableStorageZoneInfo.InterNetPortColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MediaAssetFormatRow : global::System.Data.DataRow {
            
            private MediaAssetFormatDataTable tableMediaAssetFormat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MediaAssetFormatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMediaAssetFormat = ((MediaAssetFormatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableMediaAssetFormat.IDColumn]));
                }
                set {
                    this[this.tableMediaAssetFormat.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableMediaAssetFormat.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MediaAssetFormat”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMediaAssetFormat.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormatKey {
                get {
                    try {
                        return ((string)(this[this.tableMediaAssetFormat.FormatKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MediaAssetFormat”中列“FormatKey”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMediaAssetFormat.FormatKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableMediaAssetFormat.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MediaAssetFormat”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMediaAssetFormat.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableMediaAssetFormat.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableMediaAssetFormat.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormatKeyNull() {
                return this.IsNull(this.tableMediaAssetFormat.FormatKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormatKeyNull() {
                this[this.tableMediaAssetFormat.FormatKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableMediaAssetFormat.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableMediaAssetFormat.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MasterClassRow : global::System.Data.DataRow {
            
            private MasterClassDataTable tableMasterClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MasterClassRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMasterClass = ((MasterClassDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableMasterClass.IDColumn]));
                }
                set {
                    this[this.tableMasterClass.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid MediaAssetFormatID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableMasterClass.MediaAssetFormatIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“MediaAssetFormatID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.MediaAssetFormatIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ParentID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableMasterClass.ParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“ParentID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.ParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableMasterClass.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeName {
                get {
                    try {
                        return ((string)(this[this.tableMasterClass.AlternativeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“AlternativeName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.AlternativeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FastCode {
                get {
                    try {
                        return ((string)(this[this.tableMasterClass.FastCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“FastCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.FastCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MasterClassKey {
                get {
                    try {
                        return ((string)(this[this.tableMasterClass.MasterClassKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“MasterClassKey”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.MasterClassKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefault {
                get {
                    try {
                        return ((bool)(this[this.tableMasterClass.IsDefaultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“IsDefault”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.IsDefaultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableMasterClass.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreateUserName {
                get {
                    try {
                        return ((string)(this[this.tableMasterClass.CreateUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“CreateUserName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.CreateUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreateUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableMasterClass.CreateUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“CreateUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.CreateUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMasterClass.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“CreateDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ModifyUserName {
                get {
                    try {
                        return ((string)(this[this.tableMasterClass.ModifyUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“ModifyUserName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.ModifyUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ModifyUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableMasterClass.ModifyUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“ModifyUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.ModifyUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifyDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMasterClass.ModifyDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MasterClass”中列“ModifyDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMasterClass.ModifyDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMediaAssetFormatIDNull() {
                return this.IsNull(this.tableMasterClass.MediaAssetFormatIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMediaAssetFormatIDNull() {
                this[this.tableMasterClass.MediaAssetFormatIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentIDNull() {
                return this.IsNull(this.tableMasterClass.ParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentIDNull() {
                this[this.tableMasterClass.ParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableMasterClass.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableMasterClass.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeNameNull() {
                return this.IsNull(this.tableMasterClass.AlternativeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeNameNull() {
                this[this.tableMasterClass.AlternativeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastCodeNull() {
                return this.IsNull(this.tableMasterClass.FastCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastCodeNull() {
                this[this.tableMasterClass.FastCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMasterClassKeyNull() {
                return this.IsNull(this.tableMasterClass.MasterClassKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMasterClassKeyNull() {
                this[this.tableMasterClass.MasterClassKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsDefaultNull() {
                return this.IsNull(this.tableMasterClass.IsDefaultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsDefaultNull() {
                this[this.tableMasterClass.IsDefaultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableMasterClass.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableMasterClass.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateUserNameNull() {
                return this.IsNull(this.tableMasterClass.CreateUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateUserNameNull() {
                this[this.tableMasterClass.CreateUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateUserIDNull() {
                return this.IsNull(this.tableMasterClass.CreateUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateUserIDNull() {
                this[this.tableMasterClass.CreateUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableMasterClass.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tableMasterClass.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifyUserNameNull() {
                return this.IsNull(this.tableMasterClass.ModifyUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifyUserNameNull() {
                this[this.tableMasterClass.ModifyUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifyUserIDNull() {
                return this.IsNull(this.tableMasterClass.ModifyUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifyUserIDNull() {
                this[this.tableMasterClass.ModifyUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifyDateTimeNull() {
                return this.IsNull(this.tableMasterClass.ModifyDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifyDateTimeNull() {
                this[this.tableMasterClass.ModifyDateTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IWFM_WorkflowRow : global::System.Data.DataRow {
            
            private IWFM_WorkflowDataTable tableIWFM_Workflow;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IWFM_WorkflowRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIWFM_Workflow = ((IWFM_WorkflowDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableIWFM_Workflow.IDColumn]));
                }
                set {
                    this[this.tableIWFM_Workflow.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SystemID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_Workflow.SystemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Workflow”中列“SystemID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Workflow.SystemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableIWFM_Workflow.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Workflow”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Workflow.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Workflow.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Workflow”中列“Type”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Workflow.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SignerOnlyOne {
                get {
                    try {
                        return ((bool)(this[this.tableIWFM_Workflow.SignerOnlyOneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Workflow”中列“SignerOnlyOne”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Workflow.SignerOnlyOneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Handler {
                get {
                    try {
                        return ((string)(this[this.tableIWFM_Workflow.HandlerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Workflow”中列“Handler”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Workflow.HandlerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnable {
                get {
                    try {
                        return ((bool)(this[this.tableIWFM_Workflow.IsEnableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Workflow”中列“IsEnable”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Workflow.IsEnableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableIWFM_Workflow.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Workflow”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Workflow.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSystemIDNull() {
                return this.IsNull(this.tableIWFM_Workflow.SystemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSystemIDNull() {
                this[this.tableIWFM_Workflow.SystemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableIWFM_Workflow.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableIWFM_Workflow.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableIWFM_Workflow.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableIWFM_Workflow.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignerOnlyOneNull() {
                return this.IsNull(this.tableIWFM_Workflow.SignerOnlyOneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignerOnlyOneNull() {
                this[this.tableIWFM_Workflow.SignerOnlyOneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandlerNull() {
                return this.IsNull(this.tableIWFM_Workflow.HandlerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandlerNull() {
                this[this.tableIWFM_Workflow.HandlerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsEnableNull() {
                return this.IsNull(this.tableIWFM_Workflow.IsEnableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsEnableNull() {
                this[this.tableIWFM_Workflow.IsEnableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableIWFM_Workflow.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableIWFM_Workflow.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IWFM_NodeSignerRow : global::System.Data.DataRow {
            
            private IWFM_NodeSignerDataTable tableIWFM_NodeSigner;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IWFM_NodeSignerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIWFM_NodeSigner = ((IWFM_NodeSignerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableIWFM_NodeSigner.IDColumn]));
                }
                set {
                    this[this.tableIWFM_NodeSigner.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SystemID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_NodeSigner.SystemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_NodeSigner”中列“SystemID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_NodeSigner.SystemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid WorkflowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_NodeSigner.WorkflowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_NodeSigner”中列“WorkflowID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_NodeSigner.WorkflowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid NodeID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_NodeSigner.NodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_NodeSigner”中列“NodeID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_NodeSigner.NodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SignerID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_NodeSigner.SignerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_NodeSigner”中列“SignerID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_NodeSigner.SignerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SignerName {
                get {
                    try {
                        return ((string)(this[this.tableIWFM_NodeSigner.SignerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_NodeSigner”中列“SignerName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_NodeSigner.SignerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ApprovalValue {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_NodeSigner.ApprovalValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_NodeSigner”中列“ApprovalValue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_NodeSigner.ApprovalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RejectValue {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_NodeSigner.RejectValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_NodeSigner”中列“RejectValue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_NodeSigner.RejectValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSystemIDNull() {
                return this.IsNull(this.tableIWFM_NodeSigner.SystemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSystemIDNull() {
                this[this.tableIWFM_NodeSigner.SystemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkflowIDNull() {
                return this.IsNull(this.tableIWFM_NodeSigner.WorkflowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkflowIDNull() {
                this[this.tableIWFM_NodeSigner.WorkflowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNodeIDNull() {
                return this.IsNull(this.tableIWFM_NodeSigner.NodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNodeIDNull() {
                this[this.tableIWFM_NodeSigner.NodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignerIDNull() {
                return this.IsNull(this.tableIWFM_NodeSigner.SignerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignerIDNull() {
                this[this.tableIWFM_NodeSigner.SignerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignerNameNull() {
                return this.IsNull(this.tableIWFM_NodeSigner.SignerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignerNameNull() {
                this[this.tableIWFM_NodeSigner.SignerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovalValueNull() {
                return this.IsNull(this.tableIWFM_NodeSigner.ApprovalValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovalValueNull() {
                this[this.tableIWFM_NodeSigner.ApprovalValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRejectValueNull() {
                return this.IsNull(this.tableIWFM_NodeSigner.RejectValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRejectValueNull() {
                this[this.tableIWFM_NodeSigner.RejectValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IWFM_NodeRow : global::System.Data.DataRow {
            
            private IWFM_NodeDataTable tableIWFM_Node;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IWFM_NodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIWFM_Node = ((IWFM_NodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableIWFM_Node.IDColumn]));
                }
                set {
                    this[this.tableIWFM_Node.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SystemID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_Node.SystemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“SystemID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.SystemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid WorkflowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_Node.WorkflowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“WorkflowID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.WorkflowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableIWFM_Node.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NodeIndex {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.NodeIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“NodeIndex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.NodeIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“Type”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid PrevNodeID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_Node.PrevNodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“PrevNodeID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.PrevNodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid NextNodeID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIWFM_Node.NextNodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“NextNodeID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.NextNodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ApprovalTotal {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.ApprovalTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“ApprovalTotal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.ApprovalTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RejectTotal {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.RejectTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“RejectTotal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.RejectTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remind {
                get {
                    try {
                        return ((string)(this[this.tableIWFM_Node.RemindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“Remind”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.RemindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FinishBehavior {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.FinishBehaviorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“FinishBehavior”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.FinishBehaviorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TimeoutType {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.TimeoutTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“TimeoutType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.TimeoutTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpireTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIWFM_Node.ExpireTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“ExpireTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.ExpireTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Timeout {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.TimeoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“Timeout”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.TimeoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TimeoutHandler {
                get {
                    try {
                        return ((int)(this[this.tableIWFM_Node.TimeoutHandlerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“TimeoutHandler”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.TimeoutHandlerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableIWFM_Node.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“IWFM_Node”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableIWFM_Node.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSystemIDNull() {
                return this.IsNull(this.tableIWFM_Node.SystemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSystemIDNull() {
                this[this.tableIWFM_Node.SystemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkflowIDNull() {
                return this.IsNull(this.tableIWFM_Node.WorkflowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkflowIDNull() {
                this[this.tableIWFM_Node.WorkflowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableIWFM_Node.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableIWFM_Node.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNodeIndexNull() {
                return this.IsNull(this.tableIWFM_Node.NodeIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNodeIndexNull() {
                this[this.tableIWFM_Node.NodeIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableIWFM_Node.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableIWFM_Node.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevNodeIDNull() {
                return this.IsNull(this.tableIWFM_Node.PrevNodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevNodeIDNull() {
                this[this.tableIWFM_Node.PrevNodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNextNodeIDNull() {
                return this.IsNull(this.tableIWFM_Node.NextNodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNextNodeIDNull() {
                this[this.tableIWFM_Node.NextNodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovalTotalNull() {
                return this.IsNull(this.tableIWFM_Node.ApprovalTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovalTotalNull() {
                this[this.tableIWFM_Node.ApprovalTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRejectTotalNull() {
                return this.IsNull(this.tableIWFM_Node.RejectTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRejectTotalNull() {
                this[this.tableIWFM_Node.RejectTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemindNull() {
                return this.IsNull(this.tableIWFM_Node.RemindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemindNull() {
                this[this.tableIWFM_Node.RemindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishBehaviorNull() {
                return this.IsNull(this.tableIWFM_Node.FinishBehaviorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishBehaviorNull() {
                this[this.tableIWFM_Node.FinishBehaviorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeoutTypeNull() {
                return this.IsNull(this.tableIWFM_Node.TimeoutTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeoutTypeNull() {
                this[this.tableIWFM_Node.TimeoutTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpireTimeNull() {
                return this.IsNull(this.tableIWFM_Node.ExpireTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpireTimeNull() {
                this[this.tableIWFM_Node.ExpireTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeoutNull() {
                return this.IsNull(this.tableIWFM_Node.TimeoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeoutNull() {
                this[this.tableIWFM_Node.TimeoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeoutHandlerNull() {
                return this.IsNull(this.tableIWFM_Node.TimeoutHandlerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeoutHandlerNull() {
                this[this.tableIWFM_Node.TimeoutHandlerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableIWFM_Node.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableIWFM_Node.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Relator2ContributorRow : global::System.Data.DataRow {
            
            private Relator2ContributorDataTable tableRelator2Contributor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Relator2ContributorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelator2Contributor = ((Relator2ContributorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableRelator2Contributor.IDColumn]));
                }
                set {
                    this[this.tableRelator2Contributor.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableRelator2Contributor.RelatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Relator2Contributor”中列“RelatorID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRelator2Contributor.RelatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ContributorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableRelator2Contributor.ContributorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Relator2Contributor”中列“ContributorID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRelator2Contributor.ContributorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderNumber {
                get {
                    try {
                        return ((int)(this[this.tableRelator2Contributor.OrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Relator2Contributor”中列“OrderNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRelator2Contributor.OrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelatorIDNull() {
                return this.IsNull(this.tableRelator2Contributor.RelatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelatorIDNull() {
                this[this.tableRelator2Contributor.RelatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContributorIDNull() {
                return this.IsNull(this.tableRelator2Contributor.ContributorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContributorIDNull() {
                this[this.tableRelator2Contributor.ContributorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderNumberNull() {
                return this.IsNull(this.tableRelator2Contributor.OrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderNumberNull() {
                this[this.tableRelator2Contributor.OrderNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LogicLibRowChangeEvent : global::System.EventArgs {
            
            private LogicLibRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLibRowChangeEvent(LogicLibRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLibRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LogicLib2StorageRowChangeEvent : global::System.EventArgs {
            
            private LogicLib2StorageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLib2StorageRowChangeEvent(LogicLib2StorageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogicLib2StorageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StorageRowChangeEvent : global::System.EventArgs {
            
            private StorageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageRowChangeEvent(StorageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StorageZoneInfoRowChangeEvent : global::System.EventArgs {
            
            private StorageZoneInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRowChangeEvent(StorageZoneInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MediaAssetFormatRowChangeEvent : global::System.EventArgs {
            
            private MediaAssetFormatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MediaAssetFormatRowChangeEvent(MediaAssetFormatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MediaAssetFormatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MasterClassRowChangeEvent : global::System.EventArgs {
            
            private MasterClassRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MasterClassRowChangeEvent(MasterClassRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MasterClassRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class IWFM_WorkflowRowChangeEvent : global::System.EventArgs {
            
            private IWFM_WorkflowRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_WorkflowRowChangeEvent(IWFM_WorkflowRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_WorkflowRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class IWFM_NodeSignerRowChangeEvent : global::System.EventArgs {
            
            private IWFM_NodeSignerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeSignerRowChangeEvent(IWFM_NodeSignerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeSignerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class IWFM_NodeRowChangeEvent : global::System.EventArgs {
            
            private IWFM_NodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeRowChangeEvent(IWFM_NodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IWFM_NodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Relator2ContributorRowChangeEvent : global::System.EventArgs {
            
            private Relator2ContributorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Relator2ContributorRowChangeEvent(Relator2ContributorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Relator2ContributorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("XStudioDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class XStudioDS : global::System.Data.DataSet {
        
        private ProgramLibDataTable tableProgramLib;
        
        private FolderDataTable tableFolder;
        
        private StoragesDataTable tableStorages;
        
        private StorageZoneInfoDataTable tableStorageZoneInfo;
        
        private LibStoragesDataTable tableLibStorages;
        
        private UserSpaceInObjDataTable tableUserSpaceInObj;
        
        private ProgramDataTable tableProgram;
        
        private global::System.Data.DataRelation relationFK_Folder_ProgramLib;
        
        private global::System.Data.DataRelation relationFK_LIBSTORA_REFERENCE_PROGRAML;
        
        private global::System.Data.DataRelation relationFK_LIBSTORA_REFERENCE_STORAGES;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public XStudioDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected XStudioDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProgramLib"] != null)) {
                    base.Tables.Add(new ProgramLibDataTable(ds.Tables["ProgramLib"]));
                }
                if ((ds.Tables["Folder"] != null)) {
                    base.Tables.Add(new FolderDataTable(ds.Tables["Folder"]));
                }
                if ((ds.Tables["Storages"] != null)) {
                    base.Tables.Add(new StoragesDataTable(ds.Tables["Storages"]));
                }
                if ((ds.Tables["StorageZoneInfo"] != null)) {
                    base.Tables.Add(new StorageZoneInfoDataTable(ds.Tables["StorageZoneInfo"]));
                }
                if ((ds.Tables["LibStorages"] != null)) {
                    base.Tables.Add(new LibStoragesDataTable(ds.Tables["LibStorages"]));
                }
                if ((ds.Tables["UserSpaceInObj"] != null)) {
                    base.Tables.Add(new UserSpaceInObjDataTable(ds.Tables["UserSpaceInObj"]));
                }
                if ((ds.Tables["Program"] != null)) {
                    base.Tables.Add(new ProgramDataTable(ds.Tables["Program"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProgramLibDataTable ProgramLib {
            get {
                return this.tableProgramLib;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FolderDataTable Folder {
            get {
                return this.tableFolder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StoragesDataTable Storages {
            get {
                return this.tableStorages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StorageZoneInfoDataTable StorageZoneInfo {
            get {
                return this.tableStorageZoneInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LibStoragesDataTable LibStorages {
            get {
                return this.tableLibStorages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UserSpaceInObjDataTable UserSpaceInObj {
            get {
                return this.tableUserSpaceInObj;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProgramDataTable Program {
            get {
                return this.tableProgram;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            XStudioDS cln = ((XStudioDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProgramLib"] != null)) {
                    base.Tables.Add(new ProgramLibDataTable(ds.Tables["ProgramLib"]));
                }
                if ((ds.Tables["Folder"] != null)) {
                    base.Tables.Add(new FolderDataTable(ds.Tables["Folder"]));
                }
                if ((ds.Tables["Storages"] != null)) {
                    base.Tables.Add(new StoragesDataTable(ds.Tables["Storages"]));
                }
                if ((ds.Tables["StorageZoneInfo"] != null)) {
                    base.Tables.Add(new StorageZoneInfoDataTable(ds.Tables["StorageZoneInfo"]));
                }
                if ((ds.Tables["LibStorages"] != null)) {
                    base.Tables.Add(new LibStoragesDataTable(ds.Tables["LibStorages"]));
                }
                if ((ds.Tables["UserSpaceInObj"] != null)) {
                    base.Tables.Add(new UserSpaceInObjDataTable(ds.Tables["UserSpaceInObj"]));
                }
                if ((ds.Tables["Program"] != null)) {
                    base.Tables.Add(new ProgramDataTable(ds.Tables["Program"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProgramLib = ((ProgramLibDataTable)(base.Tables["ProgramLib"]));
            if ((initTable == true)) {
                if ((this.tableProgramLib != null)) {
                    this.tableProgramLib.InitVars();
                }
            }
            this.tableFolder = ((FolderDataTable)(base.Tables["Folder"]));
            if ((initTable == true)) {
                if ((this.tableFolder != null)) {
                    this.tableFolder.InitVars();
                }
            }
            this.tableStorages = ((StoragesDataTable)(base.Tables["Storages"]));
            if ((initTable == true)) {
                if ((this.tableStorages != null)) {
                    this.tableStorages.InitVars();
                }
            }
            this.tableStorageZoneInfo = ((StorageZoneInfoDataTable)(base.Tables["StorageZoneInfo"]));
            if ((initTable == true)) {
                if ((this.tableStorageZoneInfo != null)) {
                    this.tableStorageZoneInfo.InitVars();
                }
            }
            this.tableLibStorages = ((LibStoragesDataTable)(base.Tables["LibStorages"]));
            if ((initTable == true)) {
                if ((this.tableLibStorages != null)) {
                    this.tableLibStorages.InitVars();
                }
            }
            this.tableUserSpaceInObj = ((UserSpaceInObjDataTable)(base.Tables["UserSpaceInObj"]));
            if ((initTable == true)) {
                if ((this.tableUserSpaceInObj != null)) {
                    this.tableUserSpaceInObj.InitVars();
                }
            }
            this.tableProgram = ((ProgramDataTable)(base.Tables["Program"]));
            if ((initTable == true)) {
                if ((this.tableProgram != null)) {
                    this.tableProgram.InitVars();
                }
            }
            this.relationFK_Folder_ProgramLib = this.Relations["FK_Folder_ProgramLib"];
            this.relationFK_LIBSTORA_REFERENCE_PROGRAML = this.Relations["FK_LIBSTORA_REFERENCE_PROGRAML"];
            this.relationFK_LIBSTORA_REFERENCE_STORAGES = this.Relations["FK_LIBSTORA_REFERENCE_STORAGES"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "XStudioDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XStudioDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProgramLib = new ProgramLibDataTable();
            base.Tables.Add(this.tableProgramLib);
            this.tableFolder = new FolderDataTable();
            base.Tables.Add(this.tableFolder);
            this.tableStorages = new StoragesDataTable();
            base.Tables.Add(this.tableStorages);
            this.tableStorageZoneInfo = new StorageZoneInfoDataTable();
            base.Tables.Add(this.tableStorageZoneInfo);
            this.tableLibStorages = new LibStoragesDataTable();
            base.Tables.Add(this.tableLibStorages);
            this.tableUserSpaceInObj = new UserSpaceInObjDataTable();
            base.Tables.Add(this.tableUserSpaceInObj);
            this.tableProgram = new ProgramDataTable();
            base.Tables.Add(this.tableProgram);
            this.relationFK_Folder_ProgramLib = new global::System.Data.DataRelation("FK_Folder_ProgramLib", new global::System.Data.DataColumn[] {
                        this.tableProgramLib.ProgramLibIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFolder.ProgramLibIDColumn}, false);
            this.Relations.Add(this.relationFK_Folder_ProgramLib);
            this.relationFK_LIBSTORA_REFERENCE_PROGRAML = new global::System.Data.DataRelation("FK_LIBSTORA_REFERENCE_PROGRAML", new global::System.Data.DataColumn[] {
                        this.tableProgramLib.ProgramLibIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLibStorages.ProgramLibIDColumn}, false);
            this.Relations.Add(this.relationFK_LIBSTORA_REFERENCE_PROGRAML);
            this.relationFK_LIBSTORA_REFERENCE_STORAGES = new global::System.Data.DataRelation("FK_LIBSTORA_REFERENCE_STORAGES", new global::System.Data.DataColumn[] {
                        this.tableStorages.StorageIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLibStorages.StorageIDColumn}, false);
            this.Relations.Add(this.relationFK_LIBSTORA_REFERENCE_STORAGES);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProgramLib() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFolder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStorages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStorageZoneInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLibStorages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUserSpaceInObj() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProgram() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            XStudioDS ds = new XStudioDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProgramLibRowChangeEventHandler(object sender, ProgramLibRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FolderRowChangeEventHandler(object sender, FolderRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StoragesRowChangeEventHandler(object sender, StoragesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StorageZoneInfoRowChangeEventHandler(object sender, StorageZoneInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LibStoragesRowChangeEventHandler(object sender, LibStoragesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UserSpaceInObjRowChangeEventHandler(object sender, UserSpaceInObjRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProgramRowChangeEventHandler(object sender, ProgramRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProgramLibDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProgramLibID;
            
            private global::System.Data.DataColumn columnProgramLibName;
            
            private global::System.Data.DataColumn columnprogramLibNum;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnCreatorName;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnDBServer;
            
            private global::System.Data.DataColumn columnDBServer_Bak;
            
            private global::System.Data.DataColumn columnDBName;
            
            private global::System.Data.DataColumn columnDBName_Bak;
            
            private global::System.Data.DataColumn columnProgramLibType;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            private global::System.Data.DataColumn columnShortName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibDataTable() {
                this.TableName = "ProgramLib";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramLibDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProgramLibDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibIDColumn {
                get {
                    return this.columnProgramLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibNameColumn {
                get {
                    return this.columnProgramLibName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn programLibNumColumn {
                get {
                    return this.columnprogramLibNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorNameColumn {
                get {
                    return this.columnCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBServerColumn {
                get {
                    return this.columnDBServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBServer_BakColumn {
                get {
                    return this.columnDBServer_Bak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBNameColumn {
                get {
                    return this.columnDBName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBName_BakColumn {
                get {
                    return this.columnDBName_Bak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibTypeColumn {
                get {
                    return this.columnProgramLibType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortNameColumn {
                get {
                    return this.columnShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRow this[int index] {
                get {
                    return ((ProgramLibRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibRowChangeEventHandler ProgramLibRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibRowChangeEventHandler ProgramLibRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibRowChangeEventHandler ProgramLibRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibRowChangeEventHandler ProgramLibRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProgramLibRow(ProgramLibRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRow AddProgramLibRow(
                        System.Guid ProgramLibID, 
                        string ProgramLibName, 
                        int programLibNum, 
                        System.Guid CreatorID, 
                        string CreatorName, 
                        System.DateTime CreateDateTime, 
                        string DBServer, 
                        string DBServer_Bak, 
                        string DBName, 
                        string DBName_Bak, 
                        int ProgramLibType, 
                        int MaxSpaceMB, 
                        int FreeSpaceMB, 
                        int MaxSpaceHour, 
                        int FreeSpaceHour, 
                        string ShortName) {
                ProgramLibRow rowProgramLibRow = ((ProgramLibRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProgramLibID,
                        ProgramLibName,
                        programLibNum,
                        CreatorID,
                        CreatorName,
                        CreateDateTime,
                        DBServer,
                        DBServer_Bak,
                        DBName,
                        DBName_Bak,
                        ProgramLibType,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour,
                        ShortName};
                rowProgramLibRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProgramLibRow);
                return rowProgramLibRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRow FindByProgramLibID(System.Guid ProgramLibID) {
                return ((ProgramLibRow)(this.Rows.Find(new object[] {
                            ProgramLibID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProgramLibDataTable cln = ((ProgramLibDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProgramLibDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProgramLibID = base.Columns["ProgramLibID"];
                this.columnProgramLibName = base.Columns["ProgramLibName"];
                this.columnprogramLibNum = base.Columns["programLibNum"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnCreatorName = base.Columns["CreatorName"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnDBServer = base.Columns["DBServer"];
                this.columnDBServer_Bak = base.Columns["DBServer_Bak"];
                this.columnDBName = base.Columns["DBName"];
                this.columnDBName_Bak = base.Columns["DBName_Bak"];
                this.columnProgramLibType = base.Columns["ProgramLibType"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
                this.columnShortName = base.Columns["ShortName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProgramLibID = new global::System.Data.DataColumn("ProgramLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibID);
                this.columnProgramLibName = new global::System.Data.DataColumn("ProgramLibName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibName);
                this.columnprogramLibNum = new global::System.Data.DataColumn("programLibNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprogramLibNum);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnCreatorName = new global::System.Data.DataColumn("CreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorName);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnDBServer = new global::System.Data.DataColumn("DBServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBServer);
                this.columnDBServer_Bak = new global::System.Data.DataColumn("DBServer_Bak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBServer_Bak);
                this.columnDBName = new global::System.Data.DataColumn("DBName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBName);
                this.columnDBName_Bak = new global::System.Data.DataColumn("DBName_Bak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBName_Bak);
                this.columnProgramLibType = new global::System.Data.DataColumn("ProgramLibType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibType);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.columnShortName = new global::System.Data.DataColumn("ShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProgramLibID}, true));
                this.columnProgramLibID.AllowDBNull = false;
                this.columnProgramLibID.Unique = true;
                this.columnProgramLibName.MaxLength = 100;
                this.columnCreatorName.MaxLength = 50;
                this.columnDBServer.MaxLength = 50;
                this.columnDBServer_Bak.MaxLength = 50;
                this.columnDBName.MaxLength = 100;
                this.columnDBName_Bak.MaxLength = 100;
                this.columnShortName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRow NewProgramLibRow() {
                return ((ProgramLibRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProgramLibRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProgramLibRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProgramLibRowChanged != null)) {
                    this.ProgramLibRowChanged(this, new ProgramLibRowChangeEvent(((ProgramLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProgramLibRowChanging != null)) {
                    this.ProgramLibRowChanging(this, new ProgramLibRowChangeEvent(((ProgramLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProgramLibRowDeleted != null)) {
                    this.ProgramLibRowDeleted(this, new ProgramLibRowChangeEvent(((ProgramLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProgramLibRowDeleting != null)) {
                    this.ProgramLibRowDeleting(this, new ProgramLibRowChangeEvent(((ProgramLibRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProgramLibRow(ProgramLibRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XStudioDS ds = new XStudioDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProgramLibDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FolderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFolderID;
            
            private global::System.Data.DataColumn columnFolderName;
            
            private global::System.Data.DataColumn columnProgramLibID;
            
            private global::System.Data.DataColumn columnFolderType;
            
            private global::System.Data.DataColumn columnParentID;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnCreatorName;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnShared;
            
            private global::System.Data.DataColumn columnSuperviseLevel;
            
            private global::System.Data.DataColumn columnMaterialAccess;
            
            private global::System.Data.DataColumn columnProjectAccess;
            
            private global::System.Data.DataColumn columnTelephoneAccess;
            
            private global::System.Data.DataColumn columnAccess1;
            
            private global::System.Data.DataColumn columnAccess2;
            
            private global::System.Data.DataColumn columnAccess3;
            
            private global::System.Data.DataColumn columnAccess4;
            
            private global::System.Data.DataColumn columnAccess5;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            private global::System.Data.DataColumn columnMaterialMB;
            
            private global::System.Data.DataColumn columnMaterialHour;
            
            private global::System.Data.DataColumn columnProjectMB;
            
            private global::System.Data.DataColumn columnProjectHour;
            
            private global::System.Data.DataColumn columnTelephoneMB;
            
            private global::System.Data.DataColumn columnTelephoneHour;
            
            private global::System.Data.DataColumn columnRootID;
            
            private global::System.Data.DataColumn columnShortName;
            
            private global::System.Data.DataColumn columnTelephoneNumber;
            
            private global::System.Data.DataColumn columnIsNeedExport;
            
            private global::System.Data.DataColumn columnKeepDays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderDataTable() {
                this.TableName = "Folder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FolderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FolderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderIDColumn {
                get {
                    return this.columnFolderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderNameColumn {
                get {
                    return this.columnFolderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibIDColumn {
                get {
                    return this.columnProgramLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderTypeColumn {
                get {
                    return this.columnFolderType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorNameColumn {
                get {
                    return this.columnCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SharedColumn {
                get {
                    return this.columnShared;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuperviseLevelColumn {
                get {
                    return this.columnSuperviseLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialAccessColumn {
                get {
                    return this.columnMaterialAccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectAccessColumn {
                get {
                    return this.columnProjectAccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneAccessColumn {
                get {
                    return this.columnTelephoneAccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access1Column {
                get {
                    return this.columnAccess1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access2Column {
                get {
                    return this.columnAccess2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access3Column {
                get {
                    return this.columnAccess3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access4Column {
                get {
                    return this.columnAccess4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access5Column {
                get {
                    return this.columnAccess5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialMBColumn {
                get {
                    return this.columnMaterialMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialHourColumn {
                get {
                    return this.columnMaterialHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectMBColumn {
                get {
                    return this.columnProjectMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectHourColumn {
                get {
                    return this.columnProjectHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneMBColumn {
                get {
                    return this.columnTelephoneMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneHourColumn {
                get {
                    return this.columnTelephoneHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RootIDColumn {
                get {
                    return this.columnRootID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortNameColumn {
                get {
                    return this.columnShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneNumberColumn {
                get {
                    return this.columnTelephoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsNeedExportColumn {
                get {
                    return this.columnIsNeedExport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeepDaysColumn {
                get {
                    return this.columnKeepDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderRow this[int index] {
                get {
                    return ((FolderRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderRowChangeEventHandler FolderRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderRowChangeEventHandler FolderRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderRowChangeEventHandler FolderRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderRowChangeEventHandler FolderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFolderRow(FolderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderRow AddFolderRow(
                        System.Guid FolderID, 
                        string FolderName, 
                        ProgramLibRow parentProgramLibRowByFK_Folder_ProgramLib, 
                        short FolderType, 
                        System.Guid ParentID, 
                        System.Guid CreatorID, 
                        string CreatorName, 
                        System.DateTime CreateDateTime, 
                        bool Shared, 
                        short SuperviseLevel, 
                        bool MaterialAccess, 
                        bool ProjectAccess, 
                        bool TelephoneAccess, 
                        bool Access1, 
                        bool Access2, 
                        bool Access3, 
                        bool Access4, 
                        bool Access5, 
                        int MaxSpaceMB, 
                        int FreeSpaceMB, 
                        int MaxSpaceHour, 
                        int FreeSpaceHour, 
                        int MaterialMB, 
                        int MaterialHour, 
                        int ProjectMB, 
                        int ProjectHour, 
                        int TelephoneMB, 
                        int TelephoneHour, 
                        System.Guid RootID, 
                        string ShortName, 
                        string TelephoneNumber, 
                        bool IsNeedExport, 
                        int KeepDays) {
                FolderRow rowFolderRow = ((FolderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FolderID,
                        FolderName,
                        null,
                        FolderType,
                        ParentID,
                        CreatorID,
                        CreatorName,
                        CreateDateTime,
                        Shared,
                        SuperviseLevel,
                        MaterialAccess,
                        ProjectAccess,
                        TelephoneAccess,
                        Access1,
                        Access2,
                        Access3,
                        Access4,
                        Access5,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour,
                        MaterialMB,
                        MaterialHour,
                        ProjectMB,
                        ProjectHour,
                        TelephoneMB,
                        TelephoneHour,
                        RootID,
                        ShortName,
                        TelephoneNumber,
                        IsNeedExport,
                        KeepDays};
                if ((parentProgramLibRowByFK_Folder_ProgramLib != null)) {
                    columnValuesArray[2] = parentProgramLibRowByFK_Folder_ProgramLib[0];
                }
                rowFolderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFolderRow);
                return rowFolderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderRow FindByFolderID(System.Guid FolderID) {
                return ((FolderRow)(this.Rows.Find(new object[] {
                            FolderID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FolderDataTable cln = ((FolderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FolderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFolderID = base.Columns["FolderID"];
                this.columnFolderName = base.Columns["FolderName"];
                this.columnProgramLibID = base.Columns["ProgramLibID"];
                this.columnFolderType = base.Columns["FolderType"];
                this.columnParentID = base.Columns["ParentID"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnCreatorName = base.Columns["CreatorName"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnShared = base.Columns["Shared"];
                this.columnSuperviseLevel = base.Columns["SuperviseLevel"];
                this.columnMaterialAccess = base.Columns["MaterialAccess"];
                this.columnProjectAccess = base.Columns["ProjectAccess"];
                this.columnTelephoneAccess = base.Columns["TelephoneAccess"];
                this.columnAccess1 = base.Columns["Access1"];
                this.columnAccess2 = base.Columns["Access2"];
                this.columnAccess3 = base.Columns["Access3"];
                this.columnAccess4 = base.Columns["Access4"];
                this.columnAccess5 = base.Columns["Access5"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
                this.columnMaterialMB = base.Columns["MaterialMB"];
                this.columnMaterialHour = base.Columns["MaterialHour"];
                this.columnProjectMB = base.Columns["ProjectMB"];
                this.columnProjectHour = base.Columns["ProjectHour"];
                this.columnTelephoneMB = base.Columns["TelephoneMB"];
                this.columnTelephoneHour = base.Columns["TelephoneHour"];
                this.columnRootID = base.Columns["RootID"];
                this.columnShortName = base.Columns["ShortName"];
                this.columnTelephoneNumber = base.Columns["TelephoneNumber"];
                this.columnIsNeedExport = base.Columns["IsNeedExport"];
                this.columnKeepDays = base.Columns["KeepDays"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFolderID = new global::System.Data.DataColumn("FolderID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderID);
                this.columnFolderName = new global::System.Data.DataColumn("FolderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderName);
                this.columnProgramLibID = new global::System.Data.DataColumn("ProgramLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibID);
                this.columnFolderType = new global::System.Data.DataColumn("FolderType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderType);
                this.columnParentID = new global::System.Data.DataColumn("ParentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentID);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnCreatorName = new global::System.Data.DataColumn("CreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorName);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnShared = new global::System.Data.DataColumn("Shared", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShared);
                this.columnSuperviseLevel = new global::System.Data.DataColumn("SuperviseLevel", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuperviseLevel);
                this.columnMaterialAccess = new global::System.Data.DataColumn("MaterialAccess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialAccess);
                this.columnProjectAccess = new global::System.Data.DataColumn("ProjectAccess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectAccess);
                this.columnTelephoneAccess = new global::System.Data.DataColumn("TelephoneAccess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneAccess);
                this.columnAccess1 = new global::System.Data.DataColumn("Access1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess1);
                this.columnAccess2 = new global::System.Data.DataColumn("Access2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess2);
                this.columnAccess3 = new global::System.Data.DataColumn("Access3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess3);
                this.columnAccess4 = new global::System.Data.DataColumn("Access4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess4);
                this.columnAccess5 = new global::System.Data.DataColumn("Access5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess5);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.columnMaterialMB = new global::System.Data.DataColumn("MaterialMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialMB);
                this.columnMaterialHour = new global::System.Data.DataColumn("MaterialHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialHour);
                this.columnProjectMB = new global::System.Data.DataColumn("ProjectMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectMB);
                this.columnProjectHour = new global::System.Data.DataColumn("ProjectHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectHour);
                this.columnTelephoneMB = new global::System.Data.DataColumn("TelephoneMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneMB);
                this.columnTelephoneHour = new global::System.Data.DataColumn("TelephoneHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneHour);
                this.columnRootID = new global::System.Data.DataColumn("RootID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRootID);
                this.columnShortName = new global::System.Data.DataColumn("ShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortName);
                this.columnTelephoneNumber = new global::System.Data.DataColumn("TelephoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneNumber);
                this.columnIsNeedExport = new global::System.Data.DataColumn("IsNeedExport", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNeedExport);
                this.columnKeepDays = new global::System.Data.DataColumn("KeepDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeepDays);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFolderID}, true));
                this.columnFolderID.AllowDBNull = false;
                this.columnFolderID.Unique = true;
                this.columnFolderName.MaxLength = 200;
                this.columnCreatorName.MaxLength = 50;
                this.columnShortName.MaxLength = 50;
                this.columnTelephoneNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderRow NewFolderRow() {
                return ((FolderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FolderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FolderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FolderRowChanged != null)) {
                    this.FolderRowChanged(this, new FolderRowChangeEvent(((FolderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FolderRowChanging != null)) {
                    this.FolderRowChanging(this, new FolderRowChangeEvent(((FolderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FolderRowDeleted != null)) {
                    this.FolderRowDeleted(this, new FolderRowChangeEvent(((FolderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FolderRowDeleting != null)) {
                    this.FolderRowDeleting(this, new FolderRowChangeEvent(((FolderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFolderRow(FolderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XStudioDS ds = new XStudioDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FolderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StoragesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnStorageName;
            
            private global::System.Data.DataColumn columnServer;
            
            private global::System.Data.DataColumn columnShare;
            
            private global::System.Data.DataColumn columnFTPServer;
            
            private global::System.Data.DataColumn columnFTPPath;
            
            private global::System.Data.DataColumn columnFTPUser;
            
            private global::System.Data.DataColumn columnFTPPassword;
            
            private global::System.Data.DataColumn columnFTPPort;
            
            private global::System.Data.DataColumn columnPublicServer;
            
            private global::System.Data.DataColumn columnPublicPort;
            
            private global::System.Data.DataColumn columnPublicUser;
            
            private global::System.Data.DataColumn columnPublicPassword;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesDataTable() {
                this.TableName = "Storages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoragesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StoragesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageNameColumn {
                get {
                    return this.columnStorageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServerColumn {
                get {
                    return this.columnServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareColumn {
                get {
                    return this.columnShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServerColumn {
                get {
                    return this.columnFTPServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPathColumn {
                get {
                    return this.columnFTPPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUserColumn {
                get {
                    return this.columnFTPUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPasswordColumn {
                get {
                    return this.columnFTPPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPortColumn {
                get {
                    return this.columnFTPPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicServerColumn {
                get {
                    return this.columnPublicServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicPortColumn {
                get {
                    return this.columnPublicPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicUserColumn {
                get {
                    return this.columnPublicUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicPasswordColumn {
                get {
                    return this.columnPublicPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow this[int index] {
                get {
                    return ((StoragesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesRowChangeEventHandler StoragesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStoragesRow(StoragesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow AddStoragesRow(
                        System.Guid StorageID, 
                        string StorageName, 
                        string Server, 
                        string Share, 
                        string FTPServer, 
                        string FTPPath, 
                        string FTPUser, 
                        string FTPPassword, 
                        int FTPPort, 
                        string PublicServer, 
                        int PublicPort, 
                        string PublicUser, 
                        string PublicPassword, 
                        int MaxSpaceMB, 
                        int FreeSpaceMB, 
                        int MaxSpaceHour, 
                        int FreeSpaceHour) {
                StoragesRow rowStoragesRow = ((StoragesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StorageID,
                        StorageName,
                        Server,
                        Share,
                        FTPServer,
                        FTPPath,
                        FTPUser,
                        FTPPassword,
                        FTPPort,
                        PublicServer,
                        PublicPort,
                        PublicUser,
                        PublicPassword,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour};
                rowStoragesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStoragesRow);
                return rowStoragesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow FindByStorageID(System.Guid StorageID) {
                return ((StoragesRow)(this.Rows.Find(new object[] {
                            StorageID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StoragesDataTable cln = ((StoragesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StoragesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStorageID = base.Columns["StorageID"];
                this.columnStorageName = base.Columns["StorageName"];
                this.columnServer = base.Columns["Server"];
                this.columnShare = base.Columns["Share"];
                this.columnFTPServer = base.Columns["FTPServer"];
                this.columnFTPPath = base.Columns["FTPPath"];
                this.columnFTPUser = base.Columns["FTPUser"];
                this.columnFTPPassword = base.Columns["FTPPassword"];
                this.columnFTPPort = base.Columns["FTPPort"];
                this.columnPublicServer = base.Columns["PublicServer"];
                this.columnPublicPort = base.Columns["PublicPort"];
                this.columnPublicUser = base.Columns["PublicUser"];
                this.columnPublicPassword = base.Columns["PublicPassword"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnStorageName = new global::System.Data.DataColumn("StorageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageName);
                this.columnServer = new global::System.Data.DataColumn("Server", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer);
                this.columnShare = new global::System.Data.DataColumn("Share", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare);
                this.columnFTPServer = new global::System.Data.DataColumn("FTPServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer);
                this.columnFTPPath = new global::System.Data.DataColumn("FTPPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath);
                this.columnFTPUser = new global::System.Data.DataColumn("FTPUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser);
                this.columnFTPPassword = new global::System.Data.DataColumn("FTPPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword);
                this.columnFTPPort = new global::System.Data.DataColumn("FTPPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort);
                this.columnPublicServer = new global::System.Data.DataColumn("PublicServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicServer);
                this.columnPublicPort = new global::System.Data.DataColumn("PublicPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicPort);
                this.columnPublicUser = new global::System.Data.DataColumn("PublicUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicUser);
                this.columnPublicPassword = new global::System.Data.DataColumn("PublicPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicPassword);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStorageID}, true));
                this.columnStorageID.AllowDBNull = false;
                this.columnStorageID.Unique = true;
                this.columnStorageName.MaxLength = 256;
                this.columnServer.MaxLength = 256;
                this.columnShare.MaxLength = 256;
                this.columnFTPServer.MaxLength = 256;
                this.columnFTPPath.MaxLength = 256;
                this.columnFTPUser.MaxLength = 256;
                this.columnFTPPassword.MaxLength = 256;
                this.columnPublicServer.MaxLength = 256;
                this.columnPublicUser.MaxLength = 256;
                this.columnPublicPassword.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow NewStoragesRow() {
                return ((StoragesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StoragesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StoragesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StoragesRowChanged != null)) {
                    this.StoragesRowChanged(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StoragesRowChanging != null)) {
                    this.StoragesRowChanging(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StoragesRowDeleted != null)) {
                    this.StoragesRowDeleted(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StoragesRowDeleting != null)) {
                    this.StoragesRowDeleting(this, new StoragesRowChangeEvent(((StoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStoragesRow(StoragesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XStudioDS ds = new XStudioDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StoragesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StorageZoneInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnStorageZone;
            
            private global::System.Data.DataColumn columnFTPServer1;
            
            private global::System.Data.DataColumn columnFTPPath1;
            
            private global::System.Data.DataColumn columnFTPUser1;
            
            private global::System.Data.DataColumn columnFTPPassword1;
            
            private global::System.Data.DataColumn columnFTPPort1;
            
            private global::System.Data.DataColumn columnServer1;
            
            private global::System.Data.DataColumn columnShare1;
            
            private global::System.Data.DataColumn columnFSPath1;
            
            private global::System.Data.DataColumn columnFSPort1;
            
            private global::System.Data.DataColumn columnFTPServer2;
            
            private global::System.Data.DataColumn columnFTPPath2;
            
            private global::System.Data.DataColumn columnFTPUser2;
            
            private global::System.Data.DataColumn columnFTPPassword2;
            
            private global::System.Data.DataColumn columnFTPPort2;
            
            private global::System.Data.DataColumn columnServer2;
            
            private global::System.Data.DataColumn columnShare2;
            
            private global::System.Data.DataColumn columnFSPath2;
            
            private global::System.Data.DataColumn columnFSPort2;
            
            private global::System.Data.DataColumn columnFTPServer3;
            
            private global::System.Data.DataColumn columnFTPPath3;
            
            private global::System.Data.DataColumn columnFTPUser3;
            
            private global::System.Data.DataColumn columnFTPPassword3;
            
            private global::System.Data.DataColumn columnFTPPort3;
            
            private global::System.Data.DataColumn columnServer3;
            
            private global::System.Data.DataColumn columnShare3;
            
            private global::System.Data.DataColumn columnFSPath3;
            
            private global::System.Data.DataColumn columnFSPort3;
            
            private global::System.Data.DataColumn columnFTPServer4;
            
            private global::System.Data.DataColumn columnFTPPath4;
            
            private global::System.Data.DataColumn columnFTPUser4;
            
            private global::System.Data.DataColumn columnFTPPassword4;
            
            private global::System.Data.DataColumn columnFTPPort4;
            
            private global::System.Data.DataColumn columnServer4;
            
            private global::System.Data.DataColumn columnShare4;
            
            private global::System.Data.DataColumn columnFSPath4;
            
            private global::System.Data.DataColumn columnFSPort4;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoDataTable() {
                this.TableName = "StorageZoneInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StorageZoneInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageZoneColumn {
                get {
                    return this.columnStorageZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer1Column {
                get {
                    return this.columnFTPServer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath1Column {
                get {
                    return this.columnFTPPath1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser1Column {
                get {
                    return this.columnFTPUser1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword1Column {
                get {
                    return this.columnFTPPassword1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort1Column {
                get {
                    return this.columnFTPPort1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server1Column {
                get {
                    return this.columnServer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share1Column {
                get {
                    return this.columnShare1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath1Column {
                get {
                    return this.columnFSPath1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort1Column {
                get {
                    return this.columnFSPort1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer2Column {
                get {
                    return this.columnFTPServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath2Column {
                get {
                    return this.columnFTPPath2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser2Column {
                get {
                    return this.columnFTPUser2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword2Column {
                get {
                    return this.columnFTPPassword2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort2Column {
                get {
                    return this.columnFTPPort2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server2Column {
                get {
                    return this.columnServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share2Column {
                get {
                    return this.columnShare2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath2Column {
                get {
                    return this.columnFSPath2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort2Column {
                get {
                    return this.columnFSPort2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer3Column {
                get {
                    return this.columnFTPServer3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath3Column {
                get {
                    return this.columnFTPPath3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser3Column {
                get {
                    return this.columnFTPUser3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword3Column {
                get {
                    return this.columnFTPPassword3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort3Column {
                get {
                    return this.columnFTPPort3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server3Column {
                get {
                    return this.columnServer3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share3Column {
                get {
                    return this.columnShare3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath3Column {
                get {
                    return this.columnFSPath3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort3Column {
                get {
                    return this.columnFSPort3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer4Column {
                get {
                    return this.columnFTPServer4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath4Column {
                get {
                    return this.columnFTPPath4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser4Column {
                get {
                    return this.columnFTPUser4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword4Column {
                get {
                    return this.columnFTPPassword4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort4Column {
                get {
                    return this.columnFTPPort4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server4Column {
                get {
                    return this.columnServer4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share4Column {
                get {
                    return this.columnShare4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath4Column {
                get {
                    return this.columnFSPath4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort4Column {
                get {
                    return this.columnFSPort4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow this[int index] {
                get {
                    return ((StorageZoneInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoRowChangeEventHandler StorageZoneInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStorageZoneInfoRow(StorageZoneInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow AddStorageZoneInfoRow(
                        System.Guid StorageID, 
                        int StorageZone, 
                        string FTPServer1, 
                        string FTPPath1, 
                        string FTPUser1, 
                        string FTPPassword1, 
                        int FTPPort1, 
                        string Server1, 
                        string Share1, 
                        string FSPath1, 
                        int FSPort1, 
                        string FTPServer2, 
                        string FTPPath2, 
                        string FTPUser2, 
                        string FTPPassword2, 
                        int FTPPort2, 
                        string Server2, 
                        string Share2, 
                        string FSPath2, 
                        int FSPort2, 
                        string FTPServer3, 
                        string FTPPath3, 
                        string FTPUser3, 
                        string FTPPassword3, 
                        int FTPPort3, 
                        string Server3, 
                        string Share3, 
                        string FSPath3, 
                        int FSPort3, 
                        string FTPServer4, 
                        string FTPPath4, 
                        string FTPUser4, 
                        string FTPPassword4, 
                        int FTPPort4, 
                        string Server4, 
                        string Share4, 
                        string FSPath4, 
                        int FSPort4, 
                        string Name) {
                StorageZoneInfoRow rowStorageZoneInfoRow = ((StorageZoneInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StorageID,
                        StorageZone,
                        FTPServer1,
                        FTPPath1,
                        FTPUser1,
                        FTPPassword1,
                        FTPPort1,
                        Server1,
                        Share1,
                        FSPath1,
                        FSPort1,
                        FTPServer2,
                        FTPPath2,
                        FTPUser2,
                        FTPPassword2,
                        FTPPort2,
                        Server2,
                        Share2,
                        FSPath2,
                        FSPort2,
                        FTPServer3,
                        FTPPath3,
                        FTPUser3,
                        FTPPassword3,
                        FTPPort3,
                        Server3,
                        Share3,
                        FSPath3,
                        FSPort3,
                        FTPServer4,
                        FTPPath4,
                        FTPUser4,
                        FTPPassword4,
                        FTPPort4,
                        Server4,
                        Share4,
                        FSPath4,
                        FSPort4,
                        Name};
                rowStorageZoneInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStorageZoneInfoRow);
                return rowStorageZoneInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow FindByStorageIDStorageZone(System.Guid StorageID, int StorageZone) {
                return ((StorageZoneInfoRow)(this.Rows.Find(new object[] {
                            StorageID,
                            StorageZone})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StorageZoneInfoDataTable cln = ((StorageZoneInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StorageZoneInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStorageID = base.Columns["StorageID"];
                this.columnStorageZone = base.Columns["StorageZone"];
                this.columnFTPServer1 = base.Columns["FTPServer1"];
                this.columnFTPPath1 = base.Columns["FTPPath1"];
                this.columnFTPUser1 = base.Columns["FTPUser1"];
                this.columnFTPPassword1 = base.Columns["FTPPassword1"];
                this.columnFTPPort1 = base.Columns["FTPPort1"];
                this.columnServer1 = base.Columns["Server1"];
                this.columnShare1 = base.Columns["Share1"];
                this.columnFSPath1 = base.Columns["FSPath1"];
                this.columnFSPort1 = base.Columns["FSPort1"];
                this.columnFTPServer2 = base.Columns["FTPServer2"];
                this.columnFTPPath2 = base.Columns["FTPPath2"];
                this.columnFTPUser2 = base.Columns["FTPUser2"];
                this.columnFTPPassword2 = base.Columns["FTPPassword2"];
                this.columnFTPPort2 = base.Columns["FTPPort2"];
                this.columnServer2 = base.Columns["Server2"];
                this.columnShare2 = base.Columns["Share2"];
                this.columnFSPath2 = base.Columns["FSPath2"];
                this.columnFSPort2 = base.Columns["FSPort2"];
                this.columnFTPServer3 = base.Columns["FTPServer3"];
                this.columnFTPPath3 = base.Columns["FTPPath3"];
                this.columnFTPUser3 = base.Columns["FTPUser3"];
                this.columnFTPPassword3 = base.Columns["FTPPassword3"];
                this.columnFTPPort3 = base.Columns["FTPPort3"];
                this.columnServer3 = base.Columns["Server3"];
                this.columnShare3 = base.Columns["Share3"];
                this.columnFSPath3 = base.Columns["FSPath3"];
                this.columnFSPort3 = base.Columns["FSPort3"];
                this.columnFTPServer4 = base.Columns["FTPServer4"];
                this.columnFTPPath4 = base.Columns["FTPPath4"];
                this.columnFTPUser4 = base.Columns["FTPUser4"];
                this.columnFTPPassword4 = base.Columns["FTPPassword4"];
                this.columnFTPPort4 = base.Columns["FTPPort4"];
                this.columnServer4 = base.Columns["Server4"];
                this.columnShare4 = base.Columns["Share4"];
                this.columnFSPath4 = base.Columns["FSPath4"];
                this.columnFSPort4 = base.Columns["FSPort4"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnStorageZone = new global::System.Data.DataColumn("StorageZone", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageZone);
                this.columnFTPServer1 = new global::System.Data.DataColumn("FTPServer1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer1);
                this.columnFTPPath1 = new global::System.Data.DataColumn("FTPPath1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath1);
                this.columnFTPUser1 = new global::System.Data.DataColumn("FTPUser1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser1);
                this.columnFTPPassword1 = new global::System.Data.DataColumn("FTPPassword1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword1);
                this.columnFTPPort1 = new global::System.Data.DataColumn("FTPPort1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort1);
                this.columnServer1 = new global::System.Data.DataColumn("Server1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer1);
                this.columnShare1 = new global::System.Data.DataColumn("Share1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare1);
                this.columnFSPath1 = new global::System.Data.DataColumn("FSPath1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath1);
                this.columnFSPort1 = new global::System.Data.DataColumn("FSPort1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort1);
                this.columnFTPServer2 = new global::System.Data.DataColumn("FTPServer2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer2);
                this.columnFTPPath2 = new global::System.Data.DataColumn("FTPPath2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath2);
                this.columnFTPUser2 = new global::System.Data.DataColumn("FTPUser2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser2);
                this.columnFTPPassword2 = new global::System.Data.DataColumn("FTPPassword2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword2);
                this.columnFTPPort2 = new global::System.Data.DataColumn("FTPPort2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort2);
                this.columnServer2 = new global::System.Data.DataColumn("Server2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer2);
                this.columnShare2 = new global::System.Data.DataColumn("Share2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare2);
                this.columnFSPath2 = new global::System.Data.DataColumn("FSPath2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath2);
                this.columnFSPort2 = new global::System.Data.DataColumn("FSPort2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort2);
                this.columnFTPServer3 = new global::System.Data.DataColumn("FTPServer3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer3);
                this.columnFTPPath3 = new global::System.Data.DataColumn("FTPPath3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath3);
                this.columnFTPUser3 = new global::System.Data.DataColumn("FTPUser3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser3);
                this.columnFTPPassword3 = new global::System.Data.DataColumn("FTPPassword3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword3);
                this.columnFTPPort3 = new global::System.Data.DataColumn("FTPPort3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort3);
                this.columnServer3 = new global::System.Data.DataColumn("Server3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer3);
                this.columnShare3 = new global::System.Data.DataColumn("Share3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare3);
                this.columnFSPath3 = new global::System.Data.DataColumn("FSPath3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath3);
                this.columnFSPort3 = new global::System.Data.DataColumn("FSPort3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort3);
                this.columnFTPServer4 = new global::System.Data.DataColumn("FTPServer4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer4);
                this.columnFTPPath4 = new global::System.Data.DataColumn("FTPPath4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath4);
                this.columnFTPUser4 = new global::System.Data.DataColumn("FTPUser4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser4);
                this.columnFTPPassword4 = new global::System.Data.DataColumn("FTPPassword4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword4);
                this.columnFTPPort4 = new global::System.Data.DataColumn("FTPPort4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort4);
                this.columnServer4 = new global::System.Data.DataColumn("Server4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer4);
                this.columnShare4 = new global::System.Data.DataColumn("Share4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare4);
                this.columnFSPath4 = new global::System.Data.DataColumn("FSPath4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath4);
                this.columnFSPort4 = new global::System.Data.DataColumn("FSPort4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort4);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStorageID,
                                this.columnStorageZone}, true));
                this.columnStorageID.AllowDBNull = false;
                this.columnStorageZone.AllowDBNull = false;
                this.columnFTPServer1.MaxLength = 256;
                this.columnFTPPath1.MaxLength = 256;
                this.columnFTPUser1.MaxLength = 256;
                this.columnFTPPassword1.MaxLength = 256;
                this.columnServer1.MaxLength = 256;
                this.columnShare1.MaxLength = 256;
                this.columnFSPath1.MaxLength = 256;
                this.columnFTPServer2.MaxLength = 256;
                this.columnFTPPath2.MaxLength = 256;
                this.columnFTPUser2.MaxLength = 256;
                this.columnFTPPassword2.MaxLength = 256;
                this.columnServer2.MaxLength = 256;
                this.columnShare2.MaxLength = 256;
                this.columnFSPath2.MaxLength = 256;
                this.columnFTPServer3.MaxLength = 256;
                this.columnFTPPath3.MaxLength = 256;
                this.columnFTPUser3.MaxLength = 256;
                this.columnFTPPassword3.MaxLength = 256;
                this.columnServer3.MaxLength = 256;
                this.columnShare3.MaxLength = 256;
                this.columnFSPath3.MaxLength = 256;
                this.columnFTPServer4.MaxLength = 256;
                this.columnFTPPath4.MaxLength = 256;
                this.columnFTPUser4.MaxLength = 256;
                this.columnFTPPassword4.MaxLength = 256;
                this.columnServer4.MaxLength = 256;
                this.columnShare4.MaxLength = 256;
                this.columnFSPath4.MaxLength = 256;
                this.columnName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow NewStorageZoneInfoRow() {
                return ((StorageZoneInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StorageZoneInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StorageZoneInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StorageZoneInfoRowChanged != null)) {
                    this.StorageZoneInfoRowChanged(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StorageZoneInfoRowChanging != null)) {
                    this.StorageZoneInfoRowChanging(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StorageZoneInfoRowDeleted != null)) {
                    this.StorageZoneInfoRowDeleted(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StorageZoneInfoRowDeleting != null)) {
                    this.StorageZoneInfoRowDeleting(this, new StorageZoneInfoRowChangeEvent(((StorageZoneInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStorageZoneInfoRow(StorageZoneInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XStudioDS ds = new XStudioDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StorageZoneInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LibStoragesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLibStoragesID;
            
            private global::System.Data.DataColumn columnProgramLibID;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnStorageIndex;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesDataTable() {
                this.TableName = "LibStorages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LibStoragesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LibStoragesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibStoragesIDColumn {
                get {
                    return this.columnLibStoragesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibIDColumn {
                get {
                    return this.columnProgramLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIndexColumn {
                get {
                    return this.columnStorageIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRow this[int index] {
                get {
                    return ((LibStoragesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesRowChangeEventHandler LibStoragesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesRowChangeEventHandler LibStoragesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesRowChangeEventHandler LibStoragesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesRowChangeEventHandler LibStoragesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLibStoragesRow(LibStoragesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRow AddLibStoragesRow(System.Guid LibStoragesID, ProgramLibRow parentProgramLibRowByFK_LIBSTORA_REFERENCE_PROGRAML, StoragesRow parentStoragesRowByFK_LIBSTORA_REFERENCE_STORAGES, int StorageIndex, int MaxSpaceMB, int FreeSpaceMB, int MaxSpaceHour, int FreeSpaceHour) {
                LibStoragesRow rowLibStoragesRow = ((LibStoragesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LibStoragesID,
                        null,
                        null,
                        StorageIndex,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour};
                if ((parentProgramLibRowByFK_LIBSTORA_REFERENCE_PROGRAML != null)) {
                    columnValuesArray[1] = parentProgramLibRowByFK_LIBSTORA_REFERENCE_PROGRAML[0];
                }
                if ((parentStoragesRowByFK_LIBSTORA_REFERENCE_STORAGES != null)) {
                    columnValuesArray[2] = parentStoragesRowByFK_LIBSTORA_REFERENCE_STORAGES[0];
                }
                rowLibStoragesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLibStoragesRow);
                return rowLibStoragesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRow FindByLibStoragesID(System.Guid LibStoragesID) {
                return ((LibStoragesRow)(this.Rows.Find(new object[] {
                            LibStoragesID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LibStoragesDataTable cln = ((LibStoragesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LibStoragesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLibStoragesID = base.Columns["LibStoragesID"];
                this.columnProgramLibID = base.Columns["ProgramLibID"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnStorageIndex = base.Columns["StorageIndex"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLibStoragesID = new global::System.Data.DataColumn("LibStoragesID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibStoragesID);
                this.columnProgramLibID = new global::System.Data.DataColumn("ProgramLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibID);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnStorageIndex = new global::System.Data.DataColumn("StorageIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageIndex);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLibStoragesID}, true));
                this.columnLibStoragesID.AllowDBNull = false;
                this.columnLibStoragesID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRow NewLibStoragesRow() {
                return ((LibStoragesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LibStoragesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LibStoragesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LibStoragesRowChanged != null)) {
                    this.LibStoragesRowChanged(this, new LibStoragesRowChangeEvent(((LibStoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LibStoragesRowChanging != null)) {
                    this.LibStoragesRowChanging(this, new LibStoragesRowChangeEvent(((LibStoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LibStoragesRowDeleted != null)) {
                    this.LibStoragesRowDeleted(this, new LibStoragesRowChangeEvent(((LibStoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LibStoragesRowDeleting != null)) {
                    this.LibStoragesRowDeleting(this, new LibStoragesRowChangeEvent(((LibStoragesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLibStoragesRow(LibStoragesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XStudioDS ds = new XStudioDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LibStoragesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UserSpaceInObjDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnObjectID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnSpaceMB;
            
            private global::System.Data.DataColumn columnSpaceHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjDataTable() {
                this.TableName = "UserSpaceInObj";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UserSpaceInObjDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UserSpaceInObjDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObjectIDColumn {
                get {
                    return this.columnObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpaceMBColumn {
                get {
                    return this.columnSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpaceHourColumn {
                get {
                    return this.columnSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjRow this[int index] {
                get {
                    return ((UserSpaceInObjRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjRowChangeEventHandler UserSpaceInObjRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjRowChangeEventHandler UserSpaceInObjRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjRowChangeEventHandler UserSpaceInObjRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjRowChangeEventHandler UserSpaceInObjRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUserSpaceInObjRow(UserSpaceInObjRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjRow AddUserSpaceInObjRow(System.Guid ObjectID, System.Guid UserID, int SpaceMB, int SpaceHour) {
                UserSpaceInObjRow rowUserSpaceInObjRow = ((UserSpaceInObjRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ObjectID,
                        UserID,
                        SpaceMB,
                        SpaceHour};
                rowUserSpaceInObjRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUserSpaceInObjRow);
                return rowUserSpaceInObjRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjRow FindByObjectIDUserID(System.Guid ObjectID, System.Guid UserID) {
                return ((UserSpaceInObjRow)(this.Rows.Find(new object[] {
                            ObjectID,
                            UserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UserSpaceInObjDataTable cln = ((UserSpaceInObjDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UserSpaceInObjDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnObjectID = base.Columns["ObjectID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnSpaceMB = base.Columns["SpaceMB"];
                this.columnSpaceHour = base.Columns["SpaceHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnObjectID = new global::System.Data.DataColumn("ObjectID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnSpaceMB = new global::System.Data.DataColumn("SpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpaceMB);
                this.columnSpaceHour = new global::System.Data.DataColumn("SpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpaceHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnObjectID,
                                this.columnUserID}, true));
                this.columnObjectID.AllowDBNull = false;
                this.columnUserID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjRow NewUserSpaceInObjRow() {
                return ((UserSpaceInObjRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UserSpaceInObjRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UserSpaceInObjRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UserSpaceInObjRowChanged != null)) {
                    this.UserSpaceInObjRowChanged(this, new UserSpaceInObjRowChangeEvent(((UserSpaceInObjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UserSpaceInObjRowChanging != null)) {
                    this.UserSpaceInObjRowChanging(this, new UserSpaceInObjRowChangeEvent(((UserSpaceInObjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UserSpaceInObjRowDeleted != null)) {
                    this.UserSpaceInObjRowDeleted(this, new UserSpaceInObjRowChangeEvent(((UserSpaceInObjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UserSpaceInObjRowDeleting != null)) {
                    this.UserSpaceInObjRowDeleting(this, new UserSpaceInObjRowChangeEvent(((UserSpaceInObjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUserSpaceInObjRow(UserSpaceInObjRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XStudioDS ds = new XStudioDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UserSpaceInObjDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProgramDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProgramID;
            
            private global::System.Data.DataColumn columnProgramLibID;
            
            private global::System.Data.DataColumn columnFolderID;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnProgramType;
            
            private global::System.Data.DataColumn columnTags;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDuration;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnCreatorName;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnProjectFileName;
            
            private global::System.Data.DataColumn columnProjectLastEditTime;
            
            private global::System.Data.DataColumn columnSoundFileName;
            
            private global::System.Data.DataColumn columnSoundFileLastEditTime;
            
            private global::System.Data.DataColumn columnLocked;
            
            private global::System.Data.DataColumn columnLockedByUserID;
            
            private global::System.Data.DataColumn columnLockedDateTime;
            
            private global::System.Data.DataColumn columnReleased;
            
            private global::System.Data.DataColumn columnReleasedByUserID;
            
            private global::System.Data.DataColumn columnReleasedDateTime;
            
            private global::System.Data.DataColumn columnApplied;
            
            private global::System.Data.DataColumn columnAppliedByUserID;
            
            private global::System.Data.DataColumn columnAppliedDateTime;
            
            private global::System.Data.DataColumn columnArchived;
            
            private global::System.Data.DataColumn columnArchivedByUserID;
            
            private global::System.Data.DataColumn columnArchivedDateTime;
            
            private global::System.Data.DataColumn columnArchiveApplyCode;
            
            private global::System.Data.DataColumn columnArchiveApplied;
            
            private global::System.Data.DataColumn columnArchiveAppliedByUserID;
            
            private global::System.Data.DataColumn columnArchiveAppliedDateTime;
            
            private global::System.Data.DataColumn columnRelObj_OriginalProgramID;
            
            private global::System.Data.DataColumn columnRelObj_OnAirProgramID;
            
            private global::System.Data.DataColumn columnIsMixDone;
            
            private global::System.Data.DataColumn columnSuperViseStatus;
            
            private global::System.Data.DataColumn columnSuperViseUserID;
            
            private global::System.Data.DataColumn columnSuperVisedDateTime;
            
            private global::System.Data.DataColumn columnPacketName;
            
            private global::System.Data.DataColumn columnProgramCode;
            
            private global::System.Data.DataColumn columnProgramAdminUserName;
            
            private global::System.Data.DataColumn columnProgramMasterTitle;
            
            private global::System.Data.DataColumn columnProgramTotalCount;
            
            private global::System.Data.DataColumn columnProgramSubNumber;
            
            private global::System.Data.DataColumn columnProgramLanauage;
            
            private global::System.Data.DataColumn columnProgramOnairDate;
            
            private global::System.Data.DataColumn columnProgramAuthor1;
            
            private global::System.Data.DataColumn columnProgramSponsor;
            
            private global::System.Data.DataColumn columnChannelName;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnOnairType;
            
            private global::System.Data.DataColumn columnCopyrightName;
            
            private global::System.Data.DataColumn columnPlayer;
            
            private global::System.Data.DataColumn columnPlayer1;
            
            private global::System.Data.DataColumn columnPlayer2;
            
            private global::System.Data.DataColumn columnProgramLength;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnDeletedDateTime;
            
            private global::System.Data.DataColumn columnProgramReport;
            
            private global::System.Data.DataColumn columnProgramSubTitle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramDataTable() {
                this.TableName = "Program";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProgramDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramIDColumn {
                get {
                    return this.columnProgramID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibIDColumn {
                get {
                    return this.columnProgramLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderIDColumn {
                get {
                    return this.columnFolderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramTypeColumn {
                get {
                    return this.columnProgramType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TagsColumn {
                get {
                    return this.columnTags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorNameColumn {
                get {
                    return this.columnCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectFileNameColumn {
                get {
                    return this.columnProjectFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectLastEditTimeColumn {
                get {
                    return this.columnProjectLastEditTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SoundFileNameColumn {
                get {
                    return this.columnSoundFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SoundFileLastEditTimeColumn {
                get {
                    return this.columnSoundFileLastEditTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockedColumn {
                get {
                    return this.columnLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockedByUserIDColumn {
                get {
                    return this.columnLockedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockedDateTimeColumn {
                get {
                    return this.columnLockedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReleasedColumn {
                get {
                    return this.columnReleased;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReleasedByUserIDColumn {
                get {
                    return this.columnReleasedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReleasedDateTimeColumn {
                get {
                    return this.columnReleasedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppliedColumn {
                get {
                    return this.columnApplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppliedByUserIDColumn {
                get {
                    return this.columnAppliedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppliedDateTimeColumn {
                get {
                    return this.columnAppliedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchivedColumn {
                get {
                    return this.columnArchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchivedByUserIDColumn {
                get {
                    return this.columnArchivedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchivedDateTimeColumn {
                get {
                    return this.columnArchivedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchiveApplyCodeColumn {
                get {
                    return this.columnArchiveApplyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchiveAppliedColumn {
                get {
                    return this.columnArchiveApplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchiveAppliedByUserIDColumn {
                get {
                    return this.columnArchiveAppliedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchiveAppliedDateTimeColumn {
                get {
                    return this.columnArchiveAppliedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelObj_OriginalProgramIDColumn {
                get {
                    return this.columnRelObj_OriginalProgramID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelObj_OnAirProgramIDColumn {
                get {
                    return this.columnRelObj_OnAirProgramID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsMixDoneColumn {
                get {
                    return this.columnIsMixDone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuperViseStatusColumn {
                get {
                    return this.columnSuperViseStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuperViseUserIDColumn {
                get {
                    return this.columnSuperViseUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuperVisedDateTimeColumn {
                get {
                    return this.columnSuperVisedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PacketNameColumn {
                get {
                    return this.columnPacketName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramCodeColumn {
                get {
                    return this.columnProgramCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramAdminUserNameColumn {
                get {
                    return this.columnProgramAdminUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramMasterTitleColumn {
                get {
                    return this.columnProgramMasterTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramTotalCountColumn {
                get {
                    return this.columnProgramTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramSubNumberColumn {
                get {
                    return this.columnProgramSubNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLanauageColumn {
                get {
                    return this.columnProgramLanauage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramOnairDateColumn {
                get {
                    return this.columnProgramOnairDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramAuthor1Column {
                get {
                    return this.columnProgramAuthor1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramSponsorColumn {
                get {
                    return this.columnProgramSponsor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChannelNameColumn {
                get {
                    return this.columnChannelName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OnairTypeColumn {
                get {
                    return this.columnOnairType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CopyrightNameColumn {
                get {
                    return this.columnCopyrightName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlayerColumn {
                get {
                    return this.columnPlayer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Player1Column {
                get {
                    return this.columnPlayer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Player2Column {
                get {
                    return this.columnPlayer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLengthColumn {
                get {
                    return this.columnProgramLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeletedDateTimeColumn {
                get {
                    return this.columnDeletedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramReportColumn {
                get {
                    return this.columnProgramReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramSubTitleColumn {
                get {
                    return this.columnProgramSubTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramRow this[int index] {
                get {
                    return ((ProgramRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramRowChangeEventHandler ProgramRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramRowChangeEventHandler ProgramRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramRowChangeEventHandler ProgramRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramRowChangeEventHandler ProgramRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProgramRow(ProgramRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramRow AddProgramRow(
                        System.Guid ProgramID, 
                        System.Guid ProgramLibID, 
                        System.Guid FolderID, 
                        string Title, 
                        short ProgramType, 
                        string Tags, 
                        string Description, 
                        int Duration, 
                        System.Guid CreatorID, 
                        string CreatorName, 
                        System.DateTime CreateDateTime, 
                        System.Guid StorageID, 
                        string ProjectFileName, 
                        System.DateTime ProjectLastEditTime, 
                        string SoundFileName, 
                        System.DateTime SoundFileLastEditTime, 
                        bool Locked, 
                        System.Guid LockedByUserID, 
                        System.DateTime LockedDateTime, 
                        bool Released, 
                        System.Guid ReleasedByUserID, 
                        System.DateTime ReleasedDateTime, 
                        bool Applied, 
                        System.Guid AppliedByUserID, 
                        System.DateTime AppliedDateTime, 
                        bool Archived, 
                        System.Guid ArchivedByUserID, 
                        System.DateTime ArchivedDateTime, 
                        string ArchiveApplyCode, 
                        bool ArchiveApplied, 
                        System.Guid ArchiveAppliedByUserID, 
                        System.DateTime ArchiveAppliedDateTime, 
                        System.Guid RelObj_OriginalProgramID, 
                        System.Guid RelObj_OnAirProgramID, 
                        short IsMixDone, 
                        short SuperViseStatus, 
                        System.Guid SuperViseUserID, 
                        System.DateTime SuperVisedDateTime, 
                        string PacketName, 
                        string ProgramCode, 
                        string ProgramAdminUserName, 
                        string ProgramMasterTitle, 
                        string ProgramTotalCount, 
                        string ProgramSubNumber, 
                        string ProgramLanauage, 
                        System.DateTime ProgramOnairDate, 
                        string ProgramAuthor1, 
                        string ProgramSponsor, 
                        string ChannelName, 
                        string Department, 
                        string OnairType, 
                        string CopyrightName, 
                        string Player, 
                        string Player1, 
                        string Player2, 
                        double ProgramLength, 
                        bool IsDeleted, 
                        System.DateTime DeletedDateTime, 
                        string ProgramReport, 
                        string ProgramSubTitle) {
                ProgramRow rowProgramRow = ((ProgramRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProgramID,
                        ProgramLibID,
                        FolderID,
                        Title,
                        ProgramType,
                        Tags,
                        Description,
                        Duration,
                        CreatorID,
                        CreatorName,
                        CreateDateTime,
                        StorageID,
                        ProjectFileName,
                        ProjectLastEditTime,
                        SoundFileName,
                        SoundFileLastEditTime,
                        Locked,
                        LockedByUserID,
                        LockedDateTime,
                        Released,
                        ReleasedByUserID,
                        ReleasedDateTime,
                        Applied,
                        AppliedByUserID,
                        AppliedDateTime,
                        Archived,
                        ArchivedByUserID,
                        ArchivedDateTime,
                        ArchiveApplyCode,
                        ArchiveApplied,
                        ArchiveAppliedByUserID,
                        ArchiveAppliedDateTime,
                        RelObj_OriginalProgramID,
                        RelObj_OnAirProgramID,
                        IsMixDone,
                        SuperViseStatus,
                        SuperViseUserID,
                        SuperVisedDateTime,
                        PacketName,
                        ProgramCode,
                        ProgramAdminUserName,
                        ProgramMasterTitle,
                        ProgramTotalCount,
                        ProgramSubNumber,
                        ProgramLanauage,
                        ProgramOnairDate,
                        ProgramAuthor1,
                        ProgramSponsor,
                        ChannelName,
                        Department,
                        OnairType,
                        CopyrightName,
                        Player,
                        Player1,
                        Player2,
                        ProgramLength,
                        IsDeleted,
                        DeletedDateTime,
                        ProgramReport,
                        ProgramSubTitle};
                rowProgramRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProgramRow);
                return rowProgramRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramRow FindByProgramID(System.Guid ProgramID) {
                return ((ProgramRow)(this.Rows.Find(new object[] {
                            ProgramID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProgramDataTable cln = ((ProgramDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProgramDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProgramID = base.Columns["ProgramID"];
                this.columnProgramLibID = base.Columns["ProgramLibID"];
                this.columnFolderID = base.Columns["FolderID"];
                this.columnTitle = base.Columns["Title"];
                this.columnProgramType = base.Columns["ProgramType"];
                this.columnTags = base.Columns["Tags"];
                this.columnDescription = base.Columns["Description"];
                this.columnDuration = base.Columns["Duration"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnCreatorName = base.Columns["CreatorName"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnProjectFileName = base.Columns["ProjectFileName"];
                this.columnProjectLastEditTime = base.Columns["ProjectLastEditTime"];
                this.columnSoundFileName = base.Columns["SoundFileName"];
                this.columnSoundFileLastEditTime = base.Columns["SoundFileLastEditTime"];
                this.columnLocked = base.Columns["Locked"];
                this.columnLockedByUserID = base.Columns["LockedByUserID"];
                this.columnLockedDateTime = base.Columns["LockedDateTime"];
                this.columnReleased = base.Columns["Released"];
                this.columnReleasedByUserID = base.Columns["ReleasedByUserID"];
                this.columnReleasedDateTime = base.Columns["ReleasedDateTime"];
                this.columnApplied = base.Columns["Applied"];
                this.columnAppliedByUserID = base.Columns["AppliedByUserID"];
                this.columnAppliedDateTime = base.Columns["AppliedDateTime"];
                this.columnArchived = base.Columns["Archived"];
                this.columnArchivedByUserID = base.Columns["ArchivedByUserID"];
                this.columnArchivedDateTime = base.Columns["ArchivedDateTime"];
                this.columnArchiveApplyCode = base.Columns["ArchiveApplyCode"];
                this.columnArchiveApplied = base.Columns["ArchiveApplied"];
                this.columnArchiveAppliedByUserID = base.Columns["ArchiveAppliedByUserID"];
                this.columnArchiveAppliedDateTime = base.Columns["ArchiveAppliedDateTime"];
                this.columnRelObj_OriginalProgramID = base.Columns["RelObj_OriginalProgramID"];
                this.columnRelObj_OnAirProgramID = base.Columns["RelObj_OnAirProgramID"];
                this.columnIsMixDone = base.Columns["IsMixDone"];
                this.columnSuperViseStatus = base.Columns["SuperViseStatus"];
                this.columnSuperViseUserID = base.Columns["SuperViseUserID"];
                this.columnSuperVisedDateTime = base.Columns["SuperVisedDateTime"];
                this.columnPacketName = base.Columns["PacketName"];
                this.columnProgramCode = base.Columns["ProgramCode"];
                this.columnProgramAdminUserName = base.Columns["ProgramAdminUserName"];
                this.columnProgramMasterTitle = base.Columns["ProgramMasterTitle"];
                this.columnProgramTotalCount = base.Columns["ProgramTotalCount"];
                this.columnProgramSubNumber = base.Columns["ProgramSubNumber"];
                this.columnProgramLanauage = base.Columns["ProgramLanauage"];
                this.columnProgramOnairDate = base.Columns["ProgramOnairDate"];
                this.columnProgramAuthor1 = base.Columns["ProgramAuthor1"];
                this.columnProgramSponsor = base.Columns["ProgramSponsor"];
                this.columnChannelName = base.Columns["ChannelName"];
                this.columnDepartment = base.Columns["Department"];
                this.columnOnairType = base.Columns["OnairType"];
                this.columnCopyrightName = base.Columns["CopyrightName"];
                this.columnPlayer = base.Columns["Player"];
                this.columnPlayer1 = base.Columns["Player1"];
                this.columnPlayer2 = base.Columns["Player2"];
                this.columnProgramLength = base.Columns["ProgramLength"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnDeletedDateTime = base.Columns["DeletedDateTime"];
                this.columnProgramReport = base.Columns["ProgramReport"];
                this.columnProgramSubTitle = base.Columns["ProgramSubTitle"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProgramID = new global::System.Data.DataColumn("ProgramID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramID);
                this.columnProgramLibID = new global::System.Data.DataColumn("ProgramLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibID);
                this.columnFolderID = new global::System.Data.DataColumn("FolderID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderID);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnProgramType = new global::System.Data.DataColumn("ProgramType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramType);
                this.columnTags = new global::System.Data.DataColumn("Tags", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTags);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnCreatorName = new global::System.Data.DataColumn("CreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorName);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnProjectFileName = new global::System.Data.DataColumn("ProjectFileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectFileName);
                this.columnProjectLastEditTime = new global::System.Data.DataColumn("ProjectLastEditTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectLastEditTime);
                this.columnSoundFileName = new global::System.Data.DataColumn("SoundFileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoundFileName);
                this.columnSoundFileLastEditTime = new global::System.Data.DataColumn("SoundFileLastEditTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoundFileLastEditTime);
                this.columnLocked = new global::System.Data.DataColumn("Locked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocked);
                this.columnLockedByUserID = new global::System.Data.DataColumn("LockedByUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedByUserID);
                this.columnLockedDateTime = new global::System.Data.DataColumn("LockedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedDateTime);
                this.columnReleased = new global::System.Data.DataColumn("Released", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReleased);
                this.columnReleasedByUserID = new global::System.Data.DataColumn("ReleasedByUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReleasedByUserID);
                this.columnReleasedDateTime = new global::System.Data.DataColumn("ReleasedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReleasedDateTime);
                this.columnApplied = new global::System.Data.DataColumn("Applied", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplied);
                this.columnAppliedByUserID = new global::System.Data.DataColumn("AppliedByUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppliedByUserID);
                this.columnAppliedDateTime = new global::System.Data.DataColumn("AppliedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppliedDateTime);
                this.columnArchived = new global::System.Data.DataColumn("Archived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchived);
                this.columnArchivedByUserID = new global::System.Data.DataColumn("ArchivedByUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivedByUserID);
                this.columnArchivedDateTime = new global::System.Data.DataColumn("ArchivedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivedDateTime);
                this.columnArchiveApplyCode = new global::System.Data.DataColumn("ArchiveApplyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchiveApplyCode);
                this.columnArchiveApplied = new global::System.Data.DataColumn("ArchiveApplied", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchiveApplied);
                this.columnArchiveAppliedByUserID = new global::System.Data.DataColumn("ArchiveAppliedByUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchiveAppliedByUserID);
                this.columnArchiveAppliedDateTime = new global::System.Data.DataColumn("ArchiveAppliedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchiveAppliedDateTime);
                this.columnRelObj_OriginalProgramID = new global::System.Data.DataColumn("RelObj_OriginalProgramID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelObj_OriginalProgramID);
                this.columnRelObj_OnAirProgramID = new global::System.Data.DataColumn("RelObj_OnAirProgramID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelObj_OnAirProgramID);
                this.columnIsMixDone = new global::System.Data.DataColumn("IsMixDone", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMixDone);
                this.columnSuperViseStatus = new global::System.Data.DataColumn("SuperViseStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuperViseStatus);
                this.columnSuperViseUserID = new global::System.Data.DataColumn("SuperViseUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuperViseUserID);
                this.columnSuperVisedDateTime = new global::System.Data.DataColumn("SuperVisedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuperVisedDateTime);
                this.columnPacketName = new global::System.Data.DataColumn("PacketName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacketName);
                this.columnProgramCode = new global::System.Data.DataColumn("ProgramCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramCode);
                this.columnProgramAdminUserName = new global::System.Data.DataColumn("ProgramAdminUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramAdminUserName);
                this.columnProgramMasterTitle = new global::System.Data.DataColumn("ProgramMasterTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramMasterTitle);
                this.columnProgramTotalCount = new global::System.Data.DataColumn("ProgramTotalCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramTotalCount);
                this.columnProgramSubNumber = new global::System.Data.DataColumn("ProgramSubNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramSubNumber);
                this.columnProgramLanauage = new global::System.Data.DataColumn("ProgramLanauage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLanauage);
                this.columnProgramOnairDate = new global::System.Data.DataColumn("ProgramOnairDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramOnairDate);
                this.columnProgramAuthor1 = new global::System.Data.DataColumn("ProgramAuthor1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramAuthor1);
                this.columnProgramSponsor = new global::System.Data.DataColumn("ProgramSponsor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramSponsor);
                this.columnChannelName = new global::System.Data.DataColumn("ChannelName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannelName);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnOnairType = new global::System.Data.DataColumn("OnairType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnairType);
                this.columnCopyrightName = new global::System.Data.DataColumn("CopyrightName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopyrightName);
                this.columnPlayer = new global::System.Data.DataColumn("Player", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer);
                this.columnPlayer1 = new global::System.Data.DataColumn("Player1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer1);
                this.columnPlayer2 = new global::System.Data.DataColumn("Player2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayer2);
                this.columnProgramLength = new global::System.Data.DataColumn("ProgramLength", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLength);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnDeletedDateTime = new global::System.Data.DataColumn("DeletedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDateTime);
                this.columnProgramReport = new global::System.Data.DataColumn("ProgramReport", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramReport);
                this.columnProgramSubTitle = new global::System.Data.DataColumn("ProgramSubTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramSubTitle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProgramID}, true));
                this.columnProgramID.AllowDBNull = false;
                this.columnProgramID.Unique = true;
                this.columnTitle.MaxLength = 200;
                this.columnTags.MaxLength = 500;
                this.columnDescription.MaxLength = 1073741823;
                this.columnCreatorName.MaxLength = 50;
                this.columnProjectFileName.MaxLength = 500;
                this.columnSoundFileName.MaxLength = 500;
                this.columnArchiveApplyCode.MaxLength = 50;
                this.columnPacketName.MaxLength = 50;
                this.columnProgramCode.MaxLength = 50;
                this.columnProgramAdminUserName.MaxLength = 50;
                this.columnProgramMasterTitle.MaxLength = 50;
                this.columnProgramTotalCount.MaxLength = 50;
                this.columnProgramSubNumber.MaxLength = 50;
                this.columnProgramLanauage.MaxLength = 50;
                this.columnProgramAuthor1.MaxLength = 50;
                this.columnProgramSponsor.MaxLength = 50;
                this.columnChannelName.MaxLength = 50;
                this.columnDepartment.MaxLength = 50;
                this.columnOnairType.MaxLength = 50;
                this.columnCopyrightName.MaxLength = 500;
                this.columnPlayer.MaxLength = 50;
                this.columnPlayer1.MaxLength = 50;
                this.columnPlayer2.MaxLength = 50;
                this.columnProgramReport.MaxLength = 1073741823;
                this.columnProgramSubTitle.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramRow NewProgramRow() {
                return ((ProgramRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProgramRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProgramRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProgramRowChanged != null)) {
                    this.ProgramRowChanged(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProgramRowChanging != null)) {
                    this.ProgramRowChanging(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProgramRowDeleted != null)) {
                    this.ProgramRowDeleted(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProgramRowDeleting != null)) {
                    this.ProgramRowDeleting(this, new ProgramRowChangeEvent(((ProgramRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProgramRow(ProgramRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XStudioDS ds = new XStudioDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProgramDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProgramLibRow : global::System.Data.DataRow {
            
            private ProgramLibDataTable tableProgramLib;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramLibRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProgramLib = ((ProgramLibDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramLibID {
                get {
                    return ((global::System.Guid)(this[this.tableProgramLib.ProgramLibIDColumn]));
                }
                set {
                    this[this.tableProgramLib.ProgramLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramLibName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLib.ProgramLibNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“ProgramLibName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.ProgramLibNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int programLibNum {
                get {
                    try {
                        return ((int)(this[this.tableProgramLib.programLibNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“programLibNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.programLibNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgramLib.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“CreatorID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatorName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLib.CreatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“CreatorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.CreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgramLib.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“CreateDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBServer {
                get {
                    try {
                        return ((string)(this[this.tableProgramLib.DBServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“DBServer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.DBServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBServer_Bak {
                get {
                    try {
                        return ((string)(this[this.tableProgramLib.DBServer_BakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“DBServer_Bak”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.DBServer_BakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLib.DBNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“DBName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.DBNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBName_Bak {
                get {
                    try {
                        return ((string)(this[this.tableProgramLib.DBName_BakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“DBName_Bak”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.DBName_BakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProgramLibType {
                get {
                    try {
                        return ((int)(this[this.tableProgramLib.ProgramLibTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“ProgramLibType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.ProgramLibTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableProgramLib.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableProgramLib.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableProgramLib.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableProgramLib.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLib.ShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLib”中列“ShortName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLib.ShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibNameNull() {
                return this.IsNull(this.tableProgramLib.ProgramLibNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibNameNull() {
                this[this.tableProgramLib.ProgramLibNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprogramLibNumNull() {
                return this.IsNull(this.tableProgramLib.programLibNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprogramLibNumNull() {
                this[this.tableProgramLib.programLibNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableProgramLib.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableProgramLib.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorNameNull() {
                return this.IsNull(this.tableProgramLib.CreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorNameNull() {
                this[this.tableProgramLib.CreatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableProgramLib.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tableProgramLib.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBServerNull() {
                return this.IsNull(this.tableProgramLib.DBServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBServerNull() {
                this[this.tableProgramLib.DBServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBServer_BakNull() {
                return this.IsNull(this.tableProgramLib.DBServer_BakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBServer_BakNull() {
                this[this.tableProgramLib.DBServer_BakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBNameNull() {
                return this.IsNull(this.tableProgramLib.DBNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBNameNull() {
                this[this.tableProgramLib.DBNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBName_BakNull() {
                return this.IsNull(this.tableProgramLib.DBName_BakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBName_BakNull() {
                this[this.tableProgramLib.DBName_BakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibTypeNull() {
                return this.IsNull(this.tableProgramLib.ProgramLibTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibTypeNull() {
                this[this.tableProgramLib.ProgramLibTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableProgramLib.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableProgramLib.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableProgramLib.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableProgramLib.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableProgramLib.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableProgramLib.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableProgramLib.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableProgramLib.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortNameNull() {
                return this.IsNull(this.tableProgramLib.ShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortNameNull() {
                this[this.tableProgramLib.ShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderRow[] GetFolderRows() {
                if ((this.Table.ChildRelations["FK_Folder_ProgramLib"] == null)) {
                    return new FolderRow[0];
                }
                else {
                    return ((FolderRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Folder_ProgramLib"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRow[] GetLibStoragesRows() {
                if ((this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_PROGRAML"] == null)) {
                    return new LibStoragesRow[0];
                }
                else {
                    return ((LibStoragesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_PROGRAML"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FolderRow : global::System.Data.DataRow {
            
            private FolderDataTable tableFolder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FolderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFolder = ((FolderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid FolderID {
                get {
                    return ((global::System.Guid)(this[this.tableFolder.FolderIDColumn]));
                }
                set {
                    this[this.tableFolder.FolderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FolderName {
                get {
                    try {
                        return ((string)(this[this.tableFolder.FolderNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“FolderName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.FolderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramLibID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolder.ProgramLibIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“ProgramLibID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.ProgramLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short FolderType {
                get {
                    try {
                        return ((short)(this[this.tableFolder.FolderTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“FolderType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.FolderTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ParentID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolder.ParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“ParentID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.ParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolder.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“CreatorID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatorName {
                get {
                    try {
                        return ((string)(this[this.tableFolder.CreatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“CreatorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.CreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFolder.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“CreateDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Shared {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.SharedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“Shared”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.SharedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SuperviseLevel {
                get {
                    try {
                        return ((short)(this[this.tableFolder.SuperviseLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“SuperviseLevel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.SuperviseLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MaterialAccess {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.MaterialAccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“MaterialAccess”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.MaterialAccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ProjectAccess {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.ProjectAccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“ProjectAccess”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.ProjectAccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TelephoneAccess {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.TelephoneAccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“TelephoneAccess”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.TelephoneAccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access1 {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.Access1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“Access1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.Access1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access2 {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.Access2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“Access2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.Access2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access3 {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.Access3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“Access3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.Access3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access4 {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.Access4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“Access4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.Access4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access5 {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.Access5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“Access5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.Access5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableFolder.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableFolder.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableFolder.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableFolder.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaterialMB {
                get {
                    try {
                        return ((int)(this[this.tableFolder.MaterialMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“MaterialMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.MaterialMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaterialHour {
                get {
                    try {
                        return ((int)(this[this.tableFolder.MaterialHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“MaterialHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.MaterialHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectMB {
                get {
                    try {
                        return ((int)(this[this.tableFolder.ProjectMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“ProjectMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.ProjectMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectHour {
                get {
                    try {
                        return ((int)(this[this.tableFolder.ProjectHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“ProjectHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.ProjectHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TelephoneMB {
                get {
                    try {
                        return ((int)(this[this.tableFolder.TelephoneMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“TelephoneMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.TelephoneMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TelephoneHour {
                get {
                    try {
                        return ((int)(this[this.tableFolder.TelephoneHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“TelephoneHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.TelephoneHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RootID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolder.RootIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“RootID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.RootIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortName {
                get {
                    try {
                        return ((string)(this[this.tableFolder.ShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“ShortName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.ShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TelephoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableFolder.TelephoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“TelephoneNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.TelephoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeedExport {
                get {
                    try {
                        return ((bool)(this[this.tableFolder.IsNeedExportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“IsNeedExport”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.IsNeedExportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KeepDays {
                get {
                    try {
                        return ((int)(this[this.tableFolder.KeepDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Folder”中列“KeepDays”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolder.KeepDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRow ProgramLibRow {
                get {
                    return ((ProgramLibRow)(this.GetParentRow(this.Table.ParentRelations["FK_Folder_ProgramLib"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Folder_ProgramLib"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFolderNameNull() {
                return this.IsNull(this.tableFolder.FolderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFolderNameNull() {
                this[this.tableFolder.FolderNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibIDNull() {
                return this.IsNull(this.tableFolder.ProgramLibIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibIDNull() {
                this[this.tableFolder.ProgramLibIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFolderTypeNull() {
                return this.IsNull(this.tableFolder.FolderTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFolderTypeNull() {
                this[this.tableFolder.FolderTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentIDNull() {
                return this.IsNull(this.tableFolder.ParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentIDNull() {
                this[this.tableFolder.ParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableFolder.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableFolder.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorNameNull() {
                return this.IsNull(this.tableFolder.CreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorNameNull() {
                this[this.tableFolder.CreatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableFolder.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tableFolder.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSharedNull() {
                return this.IsNull(this.tableFolder.SharedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSharedNull() {
                this[this.tableFolder.SharedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuperviseLevelNull() {
                return this.IsNull(this.tableFolder.SuperviseLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuperviseLevelNull() {
                this[this.tableFolder.SuperviseLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialAccessNull() {
                return this.IsNull(this.tableFolder.MaterialAccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialAccessNull() {
                this[this.tableFolder.MaterialAccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectAccessNull() {
                return this.IsNull(this.tableFolder.ProjectAccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectAccessNull() {
                this[this.tableFolder.ProjectAccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneAccessNull() {
                return this.IsNull(this.tableFolder.TelephoneAccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneAccessNull() {
                this[this.tableFolder.TelephoneAccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess1Null() {
                return this.IsNull(this.tableFolder.Access1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess1Null() {
                this[this.tableFolder.Access1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess2Null() {
                return this.IsNull(this.tableFolder.Access2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess2Null() {
                this[this.tableFolder.Access2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess3Null() {
                return this.IsNull(this.tableFolder.Access3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess3Null() {
                this[this.tableFolder.Access3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess4Null() {
                return this.IsNull(this.tableFolder.Access4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess4Null() {
                this[this.tableFolder.Access4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess5Null() {
                return this.IsNull(this.tableFolder.Access5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess5Null() {
                this[this.tableFolder.Access5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableFolder.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableFolder.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableFolder.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableFolder.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableFolder.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableFolder.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableFolder.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableFolder.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialMBNull() {
                return this.IsNull(this.tableFolder.MaterialMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialMBNull() {
                this[this.tableFolder.MaterialMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialHourNull() {
                return this.IsNull(this.tableFolder.MaterialHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialHourNull() {
                this[this.tableFolder.MaterialHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectMBNull() {
                return this.IsNull(this.tableFolder.ProjectMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectMBNull() {
                this[this.tableFolder.ProjectMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectHourNull() {
                return this.IsNull(this.tableFolder.ProjectHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectHourNull() {
                this[this.tableFolder.ProjectHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneMBNull() {
                return this.IsNull(this.tableFolder.TelephoneMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneMBNull() {
                this[this.tableFolder.TelephoneMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneHourNull() {
                return this.IsNull(this.tableFolder.TelephoneHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneHourNull() {
                this[this.tableFolder.TelephoneHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRootIDNull() {
                return this.IsNull(this.tableFolder.RootIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRootIDNull() {
                this[this.tableFolder.RootIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortNameNull() {
                return this.IsNull(this.tableFolder.ShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortNameNull() {
                this[this.tableFolder.ShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneNumberNull() {
                return this.IsNull(this.tableFolder.TelephoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneNumberNull() {
                this[this.tableFolder.TelephoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsNeedExportNull() {
                return this.IsNull(this.tableFolder.IsNeedExportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsNeedExportNull() {
                this[this.tableFolder.IsNeedExportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKeepDaysNull() {
                return this.IsNull(this.tableFolder.KeepDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKeepDaysNull() {
                this[this.tableFolder.KeepDaysColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StoragesRow : global::System.Data.DataRow {
            
            private StoragesDataTable tableStorages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoragesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStorages = ((StoragesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    return ((global::System.Guid)(this[this.tableStorages.StorageIDColumn]));
                }
                set {
                    this[this.tableStorages.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StorageName {
                get {
                    try {
                        return ((string)(this[this.tableStorages.StorageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“StorageName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.StorageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server {
                get {
                    try {
                        return ((string)(this[this.tableStorages.ServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“Server”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.ServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share {
                get {
                    try {
                        return ((string)(this[this.tableStorages.ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“Share”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer {
                get {
                    try {
                        return ((string)(this[this.tableStorages.FTPServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FTPServer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FTPServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath {
                get {
                    try {
                        return ((string)(this[this.tableStorages.FTPPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FTPPath”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FTPPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser {
                get {
                    try {
                        return ((string)(this[this.tableStorages.FTPUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FTPUser”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FTPUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword {
                get {
                    try {
                        return ((string)(this[this.tableStorages.FTPPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FTPPassword”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FTPPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort {
                get {
                    try {
                        return ((int)(this[this.tableStorages.FTPPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FTPPort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FTPPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublicServer {
                get {
                    try {
                        return ((string)(this[this.tableStorages.PublicServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“PublicServer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.PublicServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PublicPort {
                get {
                    try {
                        return ((int)(this[this.tableStorages.PublicPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“PublicPort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.PublicPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublicUser {
                get {
                    try {
                        return ((string)(this[this.tableStorages.PublicUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“PublicUser”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.PublicUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublicPassword {
                get {
                    try {
                        return ((string)(this[this.tableStorages.PublicPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“PublicPassword”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.PublicPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableStorages.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableStorages.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableStorages.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableStorages.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Storages”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorages.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageNameNull() {
                return this.IsNull(this.tableStorages.StorageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageNameNull() {
                this[this.tableStorages.StorageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServerNull() {
                return this.IsNull(this.tableStorages.ServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServerNull() {
                this[this.tableStorages.ServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShareNull() {
                return this.IsNull(this.tableStorages.ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShareNull() {
                this[this.tableStorages.ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServerNull() {
                return this.IsNull(this.tableStorages.FTPServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServerNull() {
                this[this.tableStorages.FTPServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPathNull() {
                return this.IsNull(this.tableStorages.FTPPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPathNull() {
                this[this.tableStorages.FTPPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUserNull() {
                return this.IsNull(this.tableStorages.FTPUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUserNull() {
                this[this.tableStorages.FTPUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPasswordNull() {
                return this.IsNull(this.tableStorages.FTPPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPasswordNull() {
                this[this.tableStorages.FTPPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPortNull() {
                return this.IsNull(this.tableStorages.FTPPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPortNull() {
                this[this.tableStorages.FTPPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicServerNull() {
                return this.IsNull(this.tableStorages.PublicServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicServerNull() {
                this[this.tableStorages.PublicServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicPortNull() {
                return this.IsNull(this.tableStorages.PublicPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicPortNull() {
                this[this.tableStorages.PublicPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicUserNull() {
                return this.IsNull(this.tableStorages.PublicUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicUserNull() {
                this[this.tableStorages.PublicUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicPasswordNull() {
                return this.IsNull(this.tableStorages.PublicPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicPasswordNull() {
                this[this.tableStorages.PublicPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableStorages.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableStorages.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableStorages.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableStorages.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableStorages.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableStorages.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableStorages.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableStorages.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRow[] GetLibStoragesRows() {
                if ((this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_STORAGES"] == null)) {
                    return new LibStoragesRow[0];
                }
                else {
                    return ((LibStoragesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_STORAGES"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StorageZoneInfoRow : global::System.Data.DataRow {
            
            private StorageZoneInfoDataTable tableStorageZoneInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStorageZoneInfo = ((StorageZoneInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    return ((global::System.Guid)(this[this.tableStorageZoneInfo.StorageIDColumn]));
                }
                set {
                    this[this.tableStorageZoneInfo.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StorageZone {
                get {
                    return ((int)(this[this.tableStorageZoneInfo.StorageZoneColumn]));
                }
                set {
                    this[this.tableStorageZoneInfo.StorageZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPServer1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPServer1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPServer1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPath1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPath1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPath1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPUser1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPUser1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPUser1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPassword1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPassword1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPassword1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort1 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FTPPort1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPort1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPort1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Server1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Server1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Server1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Share1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Share1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Share1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FSPath1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPath1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPath1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort1 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FSPort1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPort1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPort1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPServer2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPServer2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPServer2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPath2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPath2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPath2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPUser2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPUser2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPUser2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPassword2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPassword2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPassword2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort2 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FTPPort2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPort2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPort2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Server2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Server2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Server2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Share2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Share2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Share2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FSPath2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPath2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPath2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort2 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FSPort2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPort2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPort2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPServer3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPServer3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPServer3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPath3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPath3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPath3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPUser3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPUser3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPUser3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPassword3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPassword3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPassword3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort3 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FTPPort3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPort3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPort3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Server3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Server3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Server3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Share3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Share3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Share3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FSPath3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPath3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPath3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort3 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FSPort3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPort3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPort3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPServer4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPServer4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPServer4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPath4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPath4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPath4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPUser4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPUser4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPUser4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FTPPassword4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPassword4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPassword4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort4 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FTPPort4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FTPPort4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FTPPort4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Server4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Server4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Server4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.Share4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Share4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.Share4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.FSPath4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPath4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPath4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort4 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfo.FSPort4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“FSPort4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.FSPort4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfo.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfo”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfo.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer1Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPServer1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer1Null() {
                this[this.tableStorageZoneInfo.FTPServer1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath1Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPath1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath1Null() {
                this[this.tableStorageZoneInfo.FTPPath1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser1Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPUser1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser1Null() {
                this[this.tableStorageZoneInfo.FTPUser1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword1Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPassword1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword1Null() {
                this[this.tableStorageZoneInfo.FTPPassword1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort1Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPort1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort1Null() {
                this[this.tableStorageZoneInfo.FTPPort1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer1Null() {
                return this.IsNull(this.tableStorageZoneInfo.Server1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer1Null() {
                this[this.tableStorageZoneInfo.Server1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare1Null() {
                return this.IsNull(this.tableStorageZoneInfo.Share1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare1Null() {
                this[this.tableStorageZoneInfo.Share1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath1Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPath1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath1Null() {
                this[this.tableStorageZoneInfo.FSPath1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort1Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPort1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort1Null() {
                this[this.tableStorageZoneInfo.FSPort1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer2Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPServer2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer2Null() {
                this[this.tableStorageZoneInfo.FTPServer2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath2Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPath2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath2Null() {
                this[this.tableStorageZoneInfo.FTPPath2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser2Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPUser2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser2Null() {
                this[this.tableStorageZoneInfo.FTPUser2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword2Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPassword2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword2Null() {
                this[this.tableStorageZoneInfo.FTPPassword2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort2Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPort2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort2Null() {
                this[this.tableStorageZoneInfo.FTPPort2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer2Null() {
                return this.IsNull(this.tableStorageZoneInfo.Server2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer2Null() {
                this[this.tableStorageZoneInfo.Server2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare2Null() {
                return this.IsNull(this.tableStorageZoneInfo.Share2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare2Null() {
                this[this.tableStorageZoneInfo.Share2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath2Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPath2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath2Null() {
                this[this.tableStorageZoneInfo.FSPath2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort2Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPort2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort2Null() {
                this[this.tableStorageZoneInfo.FSPort2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer3Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPServer3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer3Null() {
                this[this.tableStorageZoneInfo.FTPServer3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath3Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPath3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath3Null() {
                this[this.tableStorageZoneInfo.FTPPath3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser3Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPUser3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser3Null() {
                this[this.tableStorageZoneInfo.FTPUser3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword3Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPassword3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword3Null() {
                this[this.tableStorageZoneInfo.FTPPassword3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort3Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPort3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort3Null() {
                this[this.tableStorageZoneInfo.FTPPort3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer3Null() {
                return this.IsNull(this.tableStorageZoneInfo.Server3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer3Null() {
                this[this.tableStorageZoneInfo.Server3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare3Null() {
                return this.IsNull(this.tableStorageZoneInfo.Share3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare3Null() {
                this[this.tableStorageZoneInfo.Share3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath3Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPath3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath3Null() {
                this[this.tableStorageZoneInfo.FSPath3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort3Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPort3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort3Null() {
                this[this.tableStorageZoneInfo.FSPort3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer4Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPServer4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer4Null() {
                this[this.tableStorageZoneInfo.FTPServer4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath4Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPath4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath4Null() {
                this[this.tableStorageZoneInfo.FTPPath4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser4Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPUser4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser4Null() {
                this[this.tableStorageZoneInfo.FTPUser4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword4Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPassword4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword4Null() {
                this[this.tableStorageZoneInfo.FTPPassword4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort4Null() {
                return this.IsNull(this.tableStorageZoneInfo.FTPPort4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort4Null() {
                this[this.tableStorageZoneInfo.FTPPort4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer4Null() {
                return this.IsNull(this.tableStorageZoneInfo.Server4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer4Null() {
                this[this.tableStorageZoneInfo.Server4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare4Null() {
                return this.IsNull(this.tableStorageZoneInfo.Share4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare4Null() {
                this[this.tableStorageZoneInfo.Share4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath4Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPath4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath4Null() {
                this[this.tableStorageZoneInfo.FSPath4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort4Null() {
                return this.IsNull(this.tableStorageZoneInfo.FSPort4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort4Null() {
                this[this.tableStorageZoneInfo.FSPort4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableStorageZoneInfo.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableStorageZoneInfo.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LibStoragesRow : global::System.Data.DataRow {
            
            private LibStoragesDataTable tableLibStorages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LibStoragesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLibStorages = ((LibStoragesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LibStoragesID {
                get {
                    return ((global::System.Guid)(this[this.tableLibStorages.LibStoragesIDColumn]));
                }
                set {
                    this[this.tableLibStorages.LibStoragesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramLibID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLibStorages.ProgramLibIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStorages”中列“ProgramLibID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStorages.ProgramLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLibStorages.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStorages”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStorages.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StorageIndex {
                get {
                    try {
                        return ((int)(this[this.tableLibStorages.StorageIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStorages”中列“StorageIndex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStorages.StorageIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableLibStorages.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStorages”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStorages.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableLibStorages.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStorages”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStorages.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableLibStorages.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStorages”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStorages.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableLibStorages.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStorages”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStorages.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRow ProgramLibRow {
                get {
                    return ((ProgramLibRow)(this.GetParentRow(this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_PROGRAML"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_PROGRAML"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow StoragesRow {
                get {
                    return ((StoragesRow)(this.GetParentRow(this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_STORAGES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_STORAGES"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibIDNull() {
                return this.IsNull(this.tableLibStorages.ProgramLibIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibIDNull() {
                this[this.tableLibStorages.ProgramLibIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableLibStorages.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageIDNull() {
                this[this.tableLibStorages.StorageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageIndexNull() {
                return this.IsNull(this.tableLibStorages.StorageIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageIndexNull() {
                this[this.tableLibStorages.StorageIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableLibStorages.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableLibStorages.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableLibStorages.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableLibStorages.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableLibStorages.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableLibStorages.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableLibStorages.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableLibStorages.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UserSpaceInObjRow : global::System.Data.DataRow {
            
            private UserSpaceInObjDataTable tableUserSpaceInObj;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UserSpaceInObjRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUserSpaceInObj = ((UserSpaceInObjDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ObjectID {
                get {
                    return ((global::System.Guid)(this[this.tableUserSpaceInObj.ObjectIDColumn]));
                }
                set {
                    this[this.tableUserSpaceInObj.ObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid UserID {
                get {
                    return ((global::System.Guid)(this[this.tableUserSpaceInObj.UserIDColumn]));
                }
                set {
                    this[this.tableUserSpaceInObj.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableUserSpaceInObj.SpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“UserSpaceInObj”中列“SpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUserSpaceInObj.SpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableUserSpaceInObj.SpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“UserSpaceInObj”中列“SpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUserSpaceInObj.SpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpaceMBNull() {
                return this.IsNull(this.tableUserSpaceInObj.SpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpaceMBNull() {
                this[this.tableUserSpaceInObj.SpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpaceHourNull() {
                return this.IsNull(this.tableUserSpaceInObj.SpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpaceHourNull() {
                this[this.tableUserSpaceInObj.SpaceHourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProgramRow : global::System.Data.DataRow {
            
            private ProgramDataTable tableProgram;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProgram = ((ProgramDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramID {
                get {
                    return ((global::System.Guid)(this[this.tableProgram.ProgramIDColumn]));
                }
                set {
                    this[this.tableProgram.ProgramIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramLibID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.ProgramLibIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramLibID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid FolderID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.FolderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“FolderID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.FolderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableProgram.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ProgramType {
                get {
                    try {
                        return ((short)(this[this.tableProgram.ProgramTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tags {
                get {
                    try {
                        return ((string)(this[this.tableProgram.TagsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Tags”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.TagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableProgram.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Description”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Duration {
                get {
                    try {
                        return ((int)(this[this.tableProgram.DurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Duration”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.DurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“CreatorID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatorName {
                get {
                    try {
                        return ((string)(this[this.tableProgram.CreatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“CreatorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.CreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“CreateDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProjectFileName {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProjectFileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProjectFileName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProjectFileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ProjectLastEditTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.ProjectLastEditTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProjectLastEditTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProjectLastEditTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SoundFileName {
                get {
                    try {
                        return ((string)(this[this.tableProgram.SoundFileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“SoundFileName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.SoundFileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SoundFileLastEditTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.SoundFileLastEditTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“SoundFileLastEditTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.SoundFileLastEditTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Locked {
                get {
                    try {
                        return ((bool)(this[this.tableProgram.LockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Locked”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.LockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LockedByUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.LockedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“LockedByUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.LockedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LockedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.LockedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“LockedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.LockedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Released {
                get {
                    try {
                        return ((bool)(this[this.tableProgram.ReleasedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Released”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ReleasedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ReleasedByUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.ReleasedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ReleasedByUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ReleasedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReleasedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.ReleasedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ReleasedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ReleasedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Applied {
                get {
                    try {
                        return ((bool)(this[this.tableProgram.AppliedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Applied”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.AppliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid AppliedByUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.AppliedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“AppliedByUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.AppliedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AppliedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.AppliedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“AppliedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.AppliedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Archived {
                get {
                    try {
                        return ((bool)(this[this.tableProgram.ArchivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Archived”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ArchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ArchivedByUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.ArchivedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ArchivedByUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ArchivedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ArchivedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.ArchivedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ArchivedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ArchivedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArchiveApplyCode {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ArchiveApplyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ArchiveApplyCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ArchiveApplyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ArchiveApplied {
                get {
                    try {
                        return ((bool)(this[this.tableProgram.ArchiveAppliedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ArchiveApplied”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ArchiveAppliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ArchiveAppliedByUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.ArchiveAppliedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ArchiveAppliedByUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ArchiveAppliedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ArchiveAppliedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.ArchiveAppliedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ArchiveAppliedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ArchiveAppliedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelObj_OriginalProgramID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.RelObj_OriginalProgramIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“RelObj_OriginalProgramID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.RelObj_OriginalProgramIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelObj_OnAirProgramID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.RelObj_OnAirProgramIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“RelObj_OnAirProgramID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.RelObj_OnAirProgramIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short IsMixDone {
                get {
                    try {
                        return ((short)(this[this.tableProgram.IsMixDoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“IsMixDone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.IsMixDoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SuperViseStatus {
                get {
                    try {
                        return ((short)(this[this.tableProgram.SuperViseStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“SuperViseStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.SuperViseStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SuperViseUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgram.SuperViseUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“SuperViseUserID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.SuperViseUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SuperVisedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.SuperVisedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“SuperVisedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.SuperVisedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PacketName {
                get {
                    try {
                        return ((string)(this[this.tableProgram.PacketNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“PacketName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.PacketNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramCode {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramAdminUserName {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramAdminUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramAdminUserName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramAdminUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramMasterTitle {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramMasterTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramMasterTitle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramMasterTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramTotalCount {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramTotalCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramSubNumber {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramSubNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramSubNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramSubNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramLanauage {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramLanauageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramLanauage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramLanauageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ProgramOnairDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.ProgramOnairDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramOnairDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramOnairDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramAuthor1 {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramAuthor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramAuthor1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramAuthor1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramSponsor {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramSponsorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramSponsor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramSponsorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChannelName {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ChannelNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ChannelName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ChannelNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableProgram.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Department”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OnairType {
                get {
                    try {
                        return ((string)(this[this.tableProgram.OnairTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“OnairType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.OnairTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CopyrightName {
                get {
                    try {
                        return ((string)(this[this.tableProgram.CopyrightNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“CopyrightName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.CopyrightNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Player {
                get {
                    try {
                        return ((string)(this[this.tableProgram.PlayerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Player”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.PlayerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Player1 {
                get {
                    try {
                        return ((string)(this[this.tableProgram.Player1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Player1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.Player1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Player2 {
                get {
                    try {
                        return ((string)(this[this.tableProgram.Player2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“Player2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.Player2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ProgramLength {
                get {
                    try {
                        return ((double)(this[this.tableProgram.ProgramLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramLength”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tableProgram.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“IsDeleted”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DeletedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgram.DeletedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“DeletedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.DeletedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramReport {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramReport”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramSubTitle {
                get {
                    try {
                        return ((string)(this[this.tableProgram.ProgramSubTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Program”中列“ProgramSubTitle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgram.ProgramSubTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibIDNull() {
                return this.IsNull(this.tableProgram.ProgramLibIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibIDNull() {
                this[this.tableProgram.ProgramLibIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFolderIDNull() {
                return this.IsNull(this.tableProgram.FolderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFolderIDNull() {
                this[this.tableProgram.FolderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableProgram.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableProgram.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramTypeNull() {
                return this.IsNull(this.tableProgram.ProgramTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramTypeNull() {
                this[this.tableProgram.ProgramTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTagsNull() {
                return this.IsNull(this.tableProgram.TagsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTagsNull() {
                this[this.tableProgram.TagsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableProgram.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableProgram.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDurationNull() {
                return this.IsNull(this.tableProgram.DurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDurationNull() {
                this[this.tableProgram.DurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableProgram.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableProgram.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorNameNull() {
                return this.IsNull(this.tableProgram.CreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorNameNull() {
                this[this.tableProgram.CreatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableProgram.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tableProgram.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableProgram.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageIDNull() {
                this[this.tableProgram.StorageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectFileNameNull() {
                return this.IsNull(this.tableProgram.ProjectFileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectFileNameNull() {
                this[this.tableProgram.ProjectFileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectLastEditTimeNull() {
                return this.IsNull(this.tableProgram.ProjectLastEditTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectLastEditTimeNull() {
                this[this.tableProgram.ProjectLastEditTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSoundFileNameNull() {
                return this.IsNull(this.tableProgram.SoundFileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSoundFileNameNull() {
                this[this.tableProgram.SoundFileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSoundFileLastEditTimeNull() {
                return this.IsNull(this.tableProgram.SoundFileLastEditTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSoundFileLastEditTimeNull() {
                this[this.tableProgram.SoundFileLastEditTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockedNull() {
                return this.IsNull(this.tableProgram.LockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockedNull() {
                this[this.tableProgram.LockedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockedByUserIDNull() {
                return this.IsNull(this.tableProgram.LockedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockedByUserIDNull() {
                this[this.tableProgram.LockedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockedDateTimeNull() {
                return this.IsNull(this.tableProgram.LockedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockedDateTimeNull() {
                this[this.tableProgram.LockedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReleasedNull() {
                return this.IsNull(this.tableProgram.ReleasedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReleasedNull() {
                this[this.tableProgram.ReleasedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReleasedByUserIDNull() {
                return this.IsNull(this.tableProgram.ReleasedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReleasedByUserIDNull() {
                this[this.tableProgram.ReleasedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReleasedDateTimeNull() {
                return this.IsNull(this.tableProgram.ReleasedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReleasedDateTimeNull() {
                this[this.tableProgram.ReleasedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppliedNull() {
                return this.IsNull(this.tableProgram.AppliedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppliedNull() {
                this[this.tableProgram.AppliedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppliedByUserIDNull() {
                return this.IsNull(this.tableProgram.AppliedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppliedByUserIDNull() {
                this[this.tableProgram.AppliedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppliedDateTimeNull() {
                return this.IsNull(this.tableProgram.AppliedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppliedDateTimeNull() {
                this[this.tableProgram.AppliedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchivedNull() {
                return this.IsNull(this.tableProgram.ArchivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchivedNull() {
                this[this.tableProgram.ArchivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchivedByUserIDNull() {
                return this.IsNull(this.tableProgram.ArchivedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchivedByUserIDNull() {
                this[this.tableProgram.ArchivedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchivedDateTimeNull() {
                return this.IsNull(this.tableProgram.ArchivedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchivedDateTimeNull() {
                this[this.tableProgram.ArchivedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchiveApplyCodeNull() {
                return this.IsNull(this.tableProgram.ArchiveApplyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchiveApplyCodeNull() {
                this[this.tableProgram.ArchiveApplyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchiveAppliedNull() {
                return this.IsNull(this.tableProgram.ArchiveAppliedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchiveAppliedNull() {
                this[this.tableProgram.ArchiveAppliedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchiveAppliedByUserIDNull() {
                return this.IsNull(this.tableProgram.ArchiveAppliedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchiveAppliedByUserIDNull() {
                this[this.tableProgram.ArchiveAppliedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchiveAppliedDateTimeNull() {
                return this.IsNull(this.tableProgram.ArchiveAppliedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchiveAppliedDateTimeNull() {
                this[this.tableProgram.ArchiveAppliedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelObj_OriginalProgramIDNull() {
                return this.IsNull(this.tableProgram.RelObj_OriginalProgramIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelObj_OriginalProgramIDNull() {
                this[this.tableProgram.RelObj_OriginalProgramIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelObj_OnAirProgramIDNull() {
                return this.IsNull(this.tableProgram.RelObj_OnAirProgramIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelObj_OnAirProgramIDNull() {
                this[this.tableProgram.RelObj_OnAirProgramIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsMixDoneNull() {
                return this.IsNull(this.tableProgram.IsMixDoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsMixDoneNull() {
                this[this.tableProgram.IsMixDoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuperViseStatusNull() {
                return this.IsNull(this.tableProgram.SuperViseStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuperViseStatusNull() {
                this[this.tableProgram.SuperViseStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuperViseUserIDNull() {
                return this.IsNull(this.tableProgram.SuperViseUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuperViseUserIDNull() {
                this[this.tableProgram.SuperViseUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuperVisedDateTimeNull() {
                return this.IsNull(this.tableProgram.SuperVisedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuperVisedDateTimeNull() {
                this[this.tableProgram.SuperVisedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPacketNameNull() {
                return this.IsNull(this.tableProgram.PacketNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPacketNameNull() {
                this[this.tableProgram.PacketNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramCodeNull() {
                return this.IsNull(this.tableProgram.ProgramCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramCodeNull() {
                this[this.tableProgram.ProgramCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramAdminUserNameNull() {
                return this.IsNull(this.tableProgram.ProgramAdminUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramAdminUserNameNull() {
                this[this.tableProgram.ProgramAdminUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramMasterTitleNull() {
                return this.IsNull(this.tableProgram.ProgramMasterTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramMasterTitleNull() {
                this[this.tableProgram.ProgramMasterTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramTotalCountNull() {
                return this.IsNull(this.tableProgram.ProgramTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramTotalCountNull() {
                this[this.tableProgram.ProgramTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramSubNumberNull() {
                return this.IsNull(this.tableProgram.ProgramSubNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramSubNumberNull() {
                this[this.tableProgram.ProgramSubNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLanauageNull() {
                return this.IsNull(this.tableProgram.ProgramLanauageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLanauageNull() {
                this[this.tableProgram.ProgramLanauageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramOnairDateNull() {
                return this.IsNull(this.tableProgram.ProgramOnairDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramOnairDateNull() {
                this[this.tableProgram.ProgramOnairDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramAuthor1Null() {
                return this.IsNull(this.tableProgram.ProgramAuthor1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramAuthor1Null() {
                this[this.tableProgram.ProgramAuthor1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramSponsorNull() {
                return this.IsNull(this.tableProgram.ProgramSponsorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramSponsorNull() {
                this[this.tableProgram.ProgramSponsorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChannelNameNull() {
                return this.IsNull(this.tableProgram.ChannelNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChannelNameNull() {
                this[this.tableProgram.ChannelNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableProgram.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepartmentNull() {
                this[this.tableProgram.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnairTypeNull() {
                return this.IsNull(this.tableProgram.OnairTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOnairTypeNull() {
                this[this.tableProgram.OnairTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCopyrightNameNull() {
                return this.IsNull(this.tableProgram.CopyrightNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCopyrightNameNull() {
                this[this.tableProgram.CopyrightNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlayerNull() {
                return this.IsNull(this.tableProgram.PlayerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlayerNull() {
                this[this.tableProgram.PlayerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlayer1Null() {
                return this.IsNull(this.tableProgram.Player1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlayer1Null() {
                this[this.tableProgram.Player1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlayer2Null() {
                return this.IsNull(this.tableProgram.Player2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlayer2Null() {
                this[this.tableProgram.Player2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLengthNull() {
                return this.IsNull(this.tableProgram.ProgramLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLengthNull() {
                this[this.tableProgram.ProgramLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tableProgram.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsDeletedNull() {
                this[this.tableProgram.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedDateTimeNull() {
                return this.IsNull(this.tableProgram.DeletedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedDateTimeNull() {
                this[this.tableProgram.DeletedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramReportNull() {
                return this.IsNull(this.tableProgram.ProgramReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramReportNull() {
                this[this.tableProgram.ProgramReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramSubTitleNull() {
                return this.IsNull(this.tableProgram.ProgramSubTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramSubTitleNull() {
                this[this.tableProgram.ProgramSubTitleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProgramLibRowChangeEvent : global::System.EventArgs {
            
            private ProgramLibRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRowChangeEvent(ProgramLibRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FolderRowChangeEvent : global::System.EventArgs {
            
            private FolderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderRowChangeEvent(FolderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StoragesRowChangeEvent : global::System.EventArgs {
            
            private StoragesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRowChangeEvent(StoragesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StorageZoneInfoRowChangeEvent : global::System.EventArgs {
            
            private StorageZoneInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRowChangeEvent(StorageZoneInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LibStoragesRowChangeEvent : global::System.EventArgs {
            
            private LibStoragesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRowChangeEvent(LibStoragesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UserSpaceInObjRowChangeEvent : global::System.EventArgs {
            
            private UserSpaceInObjRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjRowChangeEvent(UserSpaceInObjRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProgramRowChangeEvent : global::System.EventArgs {
            
            private ProgramRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramRowChangeEvent(ProgramRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NewsRoomDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NewsRoomDS : global::System.Data.DataSet {
        
        private ProgramLibNRDataTable tableProgramLibNR;
        
        private FolderNRDataTable tableFolderNR;
        
        private StoragesNRDataTable tableStoragesNR;
        
        private StorageZoneInfoNRDataTable tableStorageZoneInfoNR;
        
        private LibStoragesNRDataTable tableLibStoragesNR;
        
        private UserSpaceInObjNRDataTable tableUserSpaceInObjNR;
        
        private global::System.Data.DataRelation relationFK_Folder_ProgramLib;
        
        private global::System.Data.DataRelation relationFK_LIBSTORA_REFERENCE_PROGRAML;
        
        private global::System.Data.DataRelation relationFK_LIBSTORA_REFERENCE_STORAGES;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NewsRoomDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected NewsRoomDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProgramLibNR"] != null)) {
                    base.Tables.Add(new ProgramLibNRDataTable(ds.Tables["ProgramLibNR"]));
                }
                if ((ds.Tables["FolderNR"] != null)) {
                    base.Tables.Add(new FolderNRDataTable(ds.Tables["FolderNR"]));
                }
                if ((ds.Tables["StoragesNR"] != null)) {
                    base.Tables.Add(new StoragesNRDataTable(ds.Tables["StoragesNR"]));
                }
                if ((ds.Tables["StorageZoneInfoNR"] != null)) {
                    base.Tables.Add(new StorageZoneInfoNRDataTable(ds.Tables["StorageZoneInfoNR"]));
                }
                if ((ds.Tables["LibStoragesNR"] != null)) {
                    base.Tables.Add(new LibStoragesNRDataTable(ds.Tables["LibStoragesNR"]));
                }
                if ((ds.Tables["UserSpaceInObjNR"] != null)) {
                    base.Tables.Add(new UserSpaceInObjNRDataTable(ds.Tables["UserSpaceInObjNR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProgramLibNRDataTable ProgramLibNR {
            get {
                return this.tableProgramLibNR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FolderNRDataTable FolderNR {
            get {
                return this.tableFolderNR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StoragesNRDataTable StoragesNR {
            get {
                return this.tableStoragesNR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StorageZoneInfoNRDataTable StorageZoneInfoNR {
            get {
                return this.tableStorageZoneInfoNR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LibStoragesNRDataTable LibStoragesNR {
            get {
                return this.tableLibStoragesNR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UserSpaceInObjNRDataTable UserSpaceInObjNR {
            get {
                return this.tableUserSpaceInObjNR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NewsRoomDS cln = ((NewsRoomDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProgramLibNR"] != null)) {
                    base.Tables.Add(new ProgramLibNRDataTable(ds.Tables["ProgramLibNR"]));
                }
                if ((ds.Tables["FolderNR"] != null)) {
                    base.Tables.Add(new FolderNRDataTable(ds.Tables["FolderNR"]));
                }
                if ((ds.Tables["StoragesNR"] != null)) {
                    base.Tables.Add(new StoragesNRDataTable(ds.Tables["StoragesNR"]));
                }
                if ((ds.Tables["StorageZoneInfoNR"] != null)) {
                    base.Tables.Add(new StorageZoneInfoNRDataTable(ds.Tables["StorageZoneInfoNR"]));
                }
                if ((ds.Tables["LibStoragesNR"] != null)) {
                    base.Tables.Add(new LibStoragesNRDataTable(ds.Tables["LibStoragesNR"]));
                }
                if ((ds.Tables["UserSpaceInObjNR"] != null)) {
                    base.Tables.Add(new UserSpaceInObjNRDataTable(ds.Tables["UserSpaceInObjNR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProgramLibNR = ((ProgramLibNRDataTable)(base.Tables["ProgramLibNR"]));
            if ((initTable == true)) {
                if ((this.tableProgramLibNR != null)) {
                    this.tableProgramLibNR.InitVars();
                }
            }
            this.tableFolderNR = ((FolderNRDataTable)(base.Tables["FolderNR"]));
            if ((initTable == true)) {
                if ((this.tableFolderNR != null)) {
                    this.tableFolderNR.InitVars();
                }
            }
            this.tableStoragesNR = ((StoragesNRDataTable)(base.Tables["StoragesNR"]));
            if ((initTable == true)) {
                if ((this.tableStoragesNR != null)) {
                    this.tableStoragesNR.InitVars();
                }
            }
            this.tableStorageZoneInfoNR = ((StorageZoneInfoNRDataTable)(base.Tables["StorageZoneInfoNR"]));
            if ((initTable == true)) {
                if ((this.tableStorageZoneInfoNR != null)) {
                    this.tableStorageZoneInfoNR.InitVars();
                }
            }
            this.tableLibStoragesNR = ((LibStoragesNRDataTable)(base.Tables["LibStoragesNR"]));
            if ((initTable == true)) {
                if ((this.tableLibStoragesNR != null)) {
                    this.tableLibStoragesNR.InitVars();
                }
            }
            this.tableUserSpaceInObjNR = ((UserSpaceInObjNRDataTable)(base.Tables["UserSpaceInObjNR"]));
            if ((initTable == true)) {
                if ((this.tableUserSpaceInObjNR != null)) {
                    this.tableUserSpaceInObjNR.InitVars();
                }
            }
            this.relationFK_Folder_ProgramLib = this.Relations["FK_Folder_ProgramLib"];
            this.relationFK_LIBSTORA_REFERENCE_PROGRAML = this.Relations["FK_LIBSTORA_REFERENCE_PROGRAML"];
            this.relationFK_LIBSTORA_REFERENCE_STORAGES = this.Relations["FK_LIBSTORA_REFERENCE_STORAGES"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NewsRoomDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NewsRoomDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProgramLibNR = new ProgramLibNRDataTable();
            base.Tables.Add(this.tableProgramLibNR);
            this.tableFolderNR = new FolderNRDataTable();
            base.Tables.Add(this.tableFolderNR);
            this.tableStoragesNR = new StoragesNRDataTable();
            base.Tables.Add(this.tableStoragesNR);
            this.tableStorageZoneInfoNR = new StorageZoneInfoNRDataTable();
            base.Tables.Add(this.tableStorageZoneInfoNR);
            this.tableLibStoragesNR = new LibStoragesNRDataTable();
            base.Tables.Add(this.tableLibStoragesNR);
            this.tableUserSpaceInObjNR = new UserSpaceInObjNRDataTable();
            base.Tables.Add(this.tableUserSpaceInObjNR);
            this.relationFK_Folder_ProgramLib = new global::System.Data.DataRelation("FK_Folder_ProgramLib", new global::System.Data.DataColumn[] {
                        this.tableProgramLibNR.ProgramLibIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFolderNR.ProgramLibIDColumn}, false);
            this.Relations.Add(this.relationFK_Folder_ProgramLib);
            this.relationFK_LIBSTORA_REFERENCE_PROGRAML = new global::System.Data.DataRelation("FK_LIBSTORA_REFERENCE_PROGRAML", new global::System.Data.DataColumn[] {
                        this.tableProgramLibNR.ProgramLibIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLibStoragesNR.ProgramLibIDColumn}, false);
            this.Relations.Add(this.relationFK_LIBSTORA_REFERENCE_PROGRAML);
            this.relationFK_LIBSTORA_REFERENCE_STORAGES = new global::System.Data.DataRelation("FK_LIBSTORA_REFERENCE_STORAGES", new global::System.Data.DataColumn[] {
                        this.tableStoragesNR.StorageIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLibStoragesNR.StorageIDColumn}, false);
            this.Relations.Add(this.relationFK_LIBSTORA_REFERENCE_STORAGES);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProgramLibNR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFolderNR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStoragesNR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStorageZoneInfoNR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLibStoragesNR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUserSpaceInObjNR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NewsRoomDS ds = new NewsRoomDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProgramLibNRRowChangeEventHandler(object sender, ProgramLibNRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FolderNRRowChangeEventHandler(object sender, FolderNRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StoragesNRRowChangeEventHandler(object sender, StoragesNRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StorageZoneInfoNRRowChangeEventHandler(object sender, StorageZoneInfoNRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LibStoragesNRRowChangeEventHandler(object sender, LibStoragesNRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UserSpaceInObjNRRowChangeEventHandler(object sender, UserSpaceInObjNRRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProgramLibNRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProgramLibID;
            
            private global::System.Data.DataColumn columnProgramLibName;
            
            private global::System.Data.DataColumn columnprogramLibNum;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnCreatorName;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnDBServer;
            
            private global::System.Data.DataColumn columnDBServer_Bak;
            
            private global::System.Data.DataColumn columnDBName;
            
            private global::System.Data.DataColumn columnDBName_Bak;
            
            private global::System.Data.DataColumn columnProgramLibType;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            private global::System.Data.DataColumn columnShortName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRDataTable() {
                this.TableName = "ProgramLibNR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramLibNRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProgramLibNRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibIDColumn {
                get {
                    return this.columnProgramLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibNameColumn {
                get {
                    return this.columnProgramLibName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn programLibNumColumn {
                get {
                    return this.columnprogramLibNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorNameColumn {
                get {
                    return this.columnCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBServerColumn {
                get {
                    return this.columnDBServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBServer_BakColumn {
                get {
                    return this.columnDBServer_Bak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBNameColumn {
                get {
                    return this.columnDBName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBName_BakColumn {
                get {
                    return this.columnDBName_Bak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibTypeColumn {
                get {
                    return this.columnProgramLibType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortNameColumn {
                get {
                    return this.columnShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRow this[int index] {
                get {
                    return ((ProgramLibNRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibNRRowChangeEventHandler ProgramLibNRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibNRRowChangeEventHandler ProgramLibNRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibNRRowChangeEventHandler ProgramLibNRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramLibNRRowChangeEventHandler ProgramLibNRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProgramLibNRRow(ProgramLibNRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRow AddProgramLibNRRow(
                        System.Guid ProgramLibID, 
                        string ProgramLibName, 
                        int programLibNum, 
                        System.Guid CreatorID, 
                        string CreatorName, 
                        System.DateTime CreateDateTime, 
                        string DBServer, 
                        string DBServer_Bak, 
                        string DBName, 
                        string DBName_Bak, 
                        int ProgramLibType, 
                        int MaxSpaceMB, 
                        int FreeSpaceMB, 
                        int MaxSpaceHour, 
                        int FreeSpaceHour, 
                        string ShortName) {
                ProgramLibNRRow rowProgramLibNRRow = ((ProgramLibNRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProgramLibID,
                        ProgramLibName,
                        programLibNum,
                        CreatorID,
                        CreatorName,
                        CreateDateTime,
                        DBServer,
                        DBServer_Bak,
                        DBName,
                        DBName_Bak,
                        ProgramLibType,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour,
                        ShortName};
                rowProgramLibNRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProgramLibNRRow);
                return rowProgramLibNRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRow FindByProgramLibID(System.Guid ProgramLibID) {
                return ((ProgramLibNRRow)(this.Rows.Find(new object[] {
                            ProgramLibID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProgramLibNRDataTable cln = ((ProgramLibNRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProgramLibNRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProgramLibID = base.Columns["ProgramLibID"];
                this.columnProgramLibName = base.Columns["ProgramLibName"];
                this.columnprogramLibNum = base.Columns["programLibNum"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnCreatorName = base.Columns["CreatorName"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnDBServer = base.Columns["DBServer"];
                this.columnDBServer_Bak = base.Columns["DBServer_Bak"];
                this.columnDBName = base.Columns["DBName"];
                this.columnDBName_Bak = base.Columns["DBName_Bak"];
                this.columnProgramLibType = base.Columns["ProgramLibType"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
                this.columnShortName = base.Columns["ShortName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProgramLibID = new global::System.Data.DataColumn("ProgramLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibID);
                this.columnProgramLibName = new global::System.Data.DataColumn("ProgramLibName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibName);
                this.columnprogramLibNum = new global::System.Data.DataColumn("programLibNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprogramLibNum);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnCreatorName = new global::System.Data.DataColumn("CreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorName);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnDBServer = new global::System.Data.DataColumn("DBServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBServer);
                this.columnDBServer_Bak = new global::System.Data.DataColumn("DBServer_Bak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBServer_Bak);
                this.columnDBName = new global::System.Data.DataColumn("DBName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBName);
                this.columnDBName_Bak = new global::System.Data.DataColumn("DBName_Bak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBName_Bak);
                this.columnProgramLibType = new global::System.Data.DataColumn("ProgramLibType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibType);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.columnShortName = new global::System.Data.DataColumn("ShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProgramLibID}, true));
                this.columnProgramLibID.AllowDBNull = false;
                this.columnProgramLibID.Unique = true;
                this.columnProgramLibName.MaxLength = 100;
                this.columnCreatorName.MaxLength = 50;
                this.columnDBServer.MaxLength = 50;
                this.columnDBServer_Bak.MaxLength = 50;
                this.columnDBName.MaxLength = 100;
                this.columnDBName_Bak.MaxLength = 100;
                this.columnShortName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRow NewProgramLibNRRow() {
                return ((ProgramLibNRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProgramLibNRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProgramLibNRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProgramLibNRRowChanged != null)) {
                    this.ProgramLibNRRowChanged(this, new ProgramLibNRRowChangeEvent(((ProgramLibNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProgramLibNRRowChanging != null)) {
                    this.ProgramLibNRRowChanging(this, new ProgramLibNRRowChangeEvent(((ProgramLibNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProgramLibNRRowDeleted != null)) {
                    this.ProgramLibNRRowDeleted(this, new ProgramLibNRRowChangeEvent(((ProgramLibNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProgramLibNRRowDeleting != null)) {
                    this.ProgramLibNRRowDeleting(this, new ProgramLibNRRowChangeEvent(((ProgramLibNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProgramLibNRRow(ProgramLibNRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewsRoomDS ds = new NewsRoomDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProgramLibNRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FolderNRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFolderID;
            
            private global::System.Data.DataColumn columnFolderName;
            
            private global::System.Data.DataColumn columnProgramLibID;
            
            private global::System.Data.DataColumn columnFolderType;
            
            private global::System.Data.DataColumn columnParentID;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnCreatorName;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnShared;
            
            private global::System.Data.DataColumn columnSuperviseLevel;
            
            private global::System.Data.DataColumn columnMaterialAccess;
            
            private global::System.Data.DataColumn columnProjectAccess;
            
            private global::System.Data.DataColumn columnTelephoneAccess;
            
            private global::System.Data.DataColumn columnAccess1;
            
            private global::System.Data.DataColumn columnAccess2;
            
            private global::System.Data.DataColumn columnAccess3;
            
            private global::System.Data.DataColumn columnAccess4;
            
            private global::System.Data.DataColumn columnAccess5;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            private global::System.Data.DataColumn columnMaterialMB;
            
            private global::System.Data.DataColumn columnMaterialHour;
            
            private global::System.Data.DataColumn columnProjectMB;
            
            private global::System.Data.DataColumn columnProjectHour;
            
            private global::System.Data.DataColumn columnTelephoneMB;
            
            private global::System.Data.DataColumn columnTelephoneHour;
            
            private global::System.Data.DataColumn columnRootID;
            
            private global::System.Data.DataColumn columnShortName;
            
            private global::System.Data.DataColumn columnTelephoneNumber;
            
            private global::System.Data.DataColumn columnIsNeedExport;
            
            private global::System.Data.DataColumn columnKeepDays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRDataTable() {
                this.TableName = "FolderNR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FolderNRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FolderNRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderIDColumn {
                get {
                    return this.columnFolderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderNameColumn {
                get {
                    return this.columnFolderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibIDColumn {
                get {
                    return this.columnProgramLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FolderTypeColumn {
                get {
                    return this.columnFolderType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorNameColumn {
                get {
                    return this.columnCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SharedColumn {
                get {
                    return this.columnShared;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuperviseLevelColumn {
                get {
                    return this.columnSuperviseLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialAccessColumn {
                get {
                    return this.columnMaterialAccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectAccessColumn {
                get {
                    return this.columnProjectAccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneAccessColumn {
                get {
                    return this.columnTelephoneAccess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access1Column {
                get {
                    return this.columnAccess1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access2Column {
                get {
                    return this.columnAccess2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access3Column {
                get {
                    return this.columnAccess3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access4Column {
                get {
                    return this.columnAccess4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Access5Column {
                get {
                    return this.columnAccess5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialMBColumn {
                get {
                    return this.columnMaterialMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialHourColumn {
                get {
                    return this.columnMaterialHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectMBColumn {
                get {
                    return this.columnProjectMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectHourColumn {
                get {
                    return this.columnProjectHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneMBColumn {
                get {
                    return this.columnTelephoneMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneHourColumn {
                get {
                    return this.columnTelephoneHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RootIDColumn {
                get {
                    return this.columnRootID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortNameColumn {
                get {
                    return this.columnShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneNumberColumn {
                get {
                    return this.columnTelephoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsNeedExportColumn {
                get {
                    return this.columnIsNeedExport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeepDaysColumn {
                get {
                    return this.columnKeepDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRRow this[int index] {
                get {
                    return ((FolderNRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderNRRowChangeEventHandler FolderNRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderNRRowChangeEventHandler FolderNRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderNRRowChangeEventHandler FolderNRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FolderNRRowChangeEventHandler FolderNRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFolderNRRow(FolderNRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRRow AddFolderNRRow(
                        System.Guid FolderID, 
                        string FolderName, 
                        ProgramLibNRRow parentProgramLibNRRowByFK_Folder_ProgramLib, 
                        short FolderType, 
                        System.Guid ParentID, 
                        System.Guid CreatorID, 
                        string CreatorName, 
                        System.DateTime CreateDateTime, 
                        bool Shared, 
                        short SuperviseLevel, 
                        bool MaterialAccess, 
                        bool ProjectAccess, 
                        bool TelephoneAccess, 
                        bool Access1, 
                        bool Access2, 
                        bool Access3, 
                        bool Access4, 
                        bool Access5, 
                        int MaxSpaceMB, 
                        int FreeSpaceMB, 
                        int MaxSpaceHour, 
                        int FreeSpaceHour, 
                        int MaterialMB, 
                        int MaterialHour, 
                        int ProjectMB, 
                        int ProjectHour, 
                        int TelephoneMB, 
                        int TelephoneHour, 
                        System.Guid RootID, 
                        string ShortName, 
                        string TelephoneNumber, 
                        bool IsNeedExport, 
                        int KeepDays) {
                FolderNRRow rowFolderNRRow = ((FolderNRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FolderID,
                        FolderName,
                        null,
                        FolderType,
                        ParentID,
                        CreatorID,
                        CreatorName,
                        CreateDateTime,
                        Shared,
                        SuperviseLevel,
                        MaterialAccess,
                        ProjectAccess,
                        TelephoneAccess,
                        Access1,
                        Access2,
                        Access3,
                        Access4,
                        Access5,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour,
                        MaterialMB,
                        MaterialHour,
                        ProjectMB,
                        ProjectHour,
                        TelephoneMB,
                        TelephoneHour,
                        RootID,
                        ShortName,
                        TelephoneNumber,
                        IsNeedExport,
                        KeepDays};
                if ((parentProgramLibNRRowByFK_Folder_ProgramLib != null)) {
                    columnValuesArray[2] = parentProgramLibNRRowByFK_Folder_ProgramLib[0];
                }
                rowFolderNRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFolderNRRow);
                return rowFolderNRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRRow FindByFolderID(System.Guid FolderID) {
                return ((FolderNRRow)(this.Rows.Find(new object[] {
                            FolderID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FolderNRDataTable cln = ((FolderNRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FolderNRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFolderID = base.Columns["FolderID"];
                this.columnFolderName = base.Columns["FolderName"];
                this.columnProgramLibID = base.Columns["ProgramLibID"];
                this.columnFolderType = base.Columns["FolderType"];
                this.columnParentID = base.Columns["ParentID"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnCreatorName = base.Columns["CreatorName"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnShared = base.Columns["Shared"];
                this.columnSuperviseLevel = base.Columns["SuperviseLevel"];
                this.columnMaterialAccess = base.Columns["MaterialAccess"];
                this.columnProjectAccess = base.Columns["ProjectAccess"];
                this.columnTelephoneAccess = base.Columns["TelephoneAccess"];
                this.columnAccess1 = base.Columns["Access1"];
                this.columnAccess2 = base.Columns["Access2"];
                this.columnAccess3 = base.Columns["Access3"];
                this.columnAccess4 = base.Columns["Access4"];
                this.columnAccess5 = base.Columns["Access5"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
                this.columnMaterialMB = base.Columns["MaterialMB"];
                this.columnMaterialHour = base.Columns["MaterialHour"];
                this.columnProjectMB = base.Columns["ProjectMB"];
                this.columnProjectHour = base.Columns["ProjectHour"];
                this.columnTelephoneMB = base.Columns["TelephoneMB"];
                this.columnTelephoneHour = base.Columns["TelephoneHour"];
                this.columnRootID = base.Columns["RootID"];
                this.columnShortName = base.Columns["ShortName"];
                this.columnTelephoneNumber = base.Columns["TelephoneNumber"];
                this.columnIsNeedExport = base.Columns["IsNeedExport"];
                this.columnKeepDays = base.Columns["KeepDays"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFolderID = new global::System.Data.DataColumn("FolderID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderID);
                this.columnFolderName = new global::System.Data.DataColumn("FolderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderName);
                this.columnProgramLibID = new global::System.Data.DataColumn("ProgramLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibID);
                this.columnFolderType = new global::System.Data.DataColumn("FolderType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolderType);
                this.columnParentID = new global::System.Data.DataColumn("ParentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentID);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnCreatorName = new global::System.Data.DataColumn("CreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorName);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnShared = new global::System.Data.DataColumn("Shared", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShared);
                this.columnSuperviseLevel = new global::System.Data.DataColumn("SuperviseLevel", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuperviseLevel);
                this.columnMaterialAccess = new global::System.Data.DataColumn("MaterialAccess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialAccess);
                this.columnProjectAccess = new global::System.Data.DataColumn("ProjectAccess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectAccess);
                this.columnTelephoneAccess = new global::System.Data.DataColumn("TelephoneAccess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneAccess);
                this.columnAccess1 = new global::System.Data.DataColumn("Access1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess1);
                this.columnAccess2 = new global::System.Data.DataColumn("Access2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess2);
                this.columnAccess3 = new global::System.Data.DataColumn("Access3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess3);
                this.columnAccess4 = new global::System.Data.DataColumn("Access4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess4);
                this.columnAccess5 = new global::System.Data.DataColumn("Access5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccess5);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.columnMaterialMB = new global::System.Data.DataColumn("MaterialMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialMB);
                this.columnMaterialHour = new global::System.Data.DataColumn("MaterialHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialHour);
                this.columnProjectMB = new global::System.Data.DataColumn("ProjectMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectMB);
                this.columnProjectHour = new global::System.Data.DataColumn("ProjectHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectHour);
                this.columnTelephoneMB = new global::System.Data.DataColumn("TelephoneMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneMB);
                this.columnTelephoneHour = new global::System.Data.DataColumn("TelephoneHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneHour);
                this.columnRootID = new global::System.Data.DataColumn("RootID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRootID);
                this.columnShortName = new global::System.Data.DataColumn("ShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortName);
                this.columnTelephoneNumber = new global::System.Data.DataColumn("TelephoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneNumber);
                this.columnIsNeedExport = new global::System.Data.DataColumn("IsNeedExport", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNeedExport);
                this.columnKeepDays = new global::System.Data.DataColumn("KeepDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeepDays);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFolderID}, true));
                this.columnFolderID.AllowDBNull = false;
                this.columnFolderID.Unique = true;
                this.columnFolderName.MaxLength = 200;
                this.columnCreatorName.MaxLength = 50;
                this.columnShortName.MaxLength = 50;
                this.columnTelephoneNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRRow NewFolderNRRow() {
                return ((FolderNRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FolderNRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FolderNRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FolderNRRowChanged != null)) {
                    this.FolderNRRowChanged(this, new FolderNRRowChangeEvent(((FolderNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FolderNRRowChanging != null)) {
                    this.FolderNRRowChanging(this, new FolderNRRowChangeEvent(((FolderNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FolderNRRowDeleted != null)) {
                    this.FolderNRRowDeleted(this, new FolderNRRowChangeEvent(((FolderNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FolderNRRowDeleting != null)) {
                    this.FolderNRRowDeleting(this, new FolderNRRowChangeEvent(((FolderNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFolderNRRow(FolderNRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewsRoomDS ds = new NewsRoomDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FolderNRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StoragesNRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnStorageName;
            
            private global::System.Data.DataColumn columnServer;
            
            private global::System.Data.DataColumn columnShare;
            
            private global::System.Data.DataColumn columnFTPServer;
            
            private global::System.Data.DataColumn columnFTPPath;
            
            private global::System.Data.DataColumn columnFTPUser;
            
            private global::System.Data.DataColumn columnFTPPassword;
            
            private global::System.Data.DataColumn columnFTPPort;
            
            private global::System.Data.DataColumn columnPublicServer;
            
            private global::System.Data.DataColumn columnPublicPort;
            
            private global::System.Data.DataColumn columnPublicUser;
            
            private global::System.Data.DataColumn columnPublicPassword;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRDataTable() {
                this.TableName = "StoragesNR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoragesNRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StoragesNRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageNameColumn {
                get {
                    return this.columnStorageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServerColumn {
                get {
                    return this.columnServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareColumn {
                get {
                    return this.columnShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServerColumn {
                get {
                    return this.columnFTPServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPathColumn {
                get {
                    return this.columnFTPPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUserColumn {
                get {
                    return this.columnFTPUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPasswordColumn {
                get {
                    return this.columnFTPPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPortColumn {
                get {
                    return this.columnFTPPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicServerColumn {
                get {
                    return this.columnPublicServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicPortColumn {
                get {
                    return this.columnPublicPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicUserColumn {
                get {
                    return this.columnPublicUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublicPasswordColumn {
                get {
                    return this.columnPublicPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRRow this[int index] {
                get {
                    return ((StoragesNRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesNRRowChangeEventHandler StoragesNRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesNRRowChangeEventHandler StoragesNRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesNRRowChangeEventHandler StoragesNRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoragesNRRowChangeEventHandler StoragesNRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStoragesNRRow(StoragesNRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRRow AddStoragesNRRow(
                        System.Guid StorageID, 
                        string StorageName, 
                        string Server, 
                        string Share, 
                        string FTPServer, 
                        string FTPPath, 
                        string FTPUser, 
                        string FTPPassword, 
                        int FTPPort, 
                        string PublicServer, 
                        int PublicPort, 
                        string PublicUser, 
                        string PublicPassword, 
                        int MaxSpaceMB, 
                        int FreeSpaceMB, 
                        int MaxSpaceHour, 
                        int FreeSpaceHour) {
                StoragesNRRow rowStoragesNRRow = ((StoragesNRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StorageID,
                        StorageName,
                        Server,
                        Share,
                        FTPServer,
                        FTPPath,
                        FTPUser,
                        FTPPassword,
                        FTPPort,
                        PublicServer,
                        PublicPort,
                        PublicUser,
                        PublicPassword,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour};
                rowStoragesNRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStoragesNRRow);
                return rowStoragesNRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRRow FindByStorageID(System.Guid StorageID) {
                return ((StoragesNRRow)(this.Rows.Find(new object[] {
                            StorageID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StoragesNRDataTable cln = ((StoragesNRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StoragesNRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStorageID = base.Columns["StorageID"];
                this.columnStorageName = base.Columns["StorageName"];
                this.columnServer = base.Columns["Server"];
                this.columnShare = base.Columns["Share"];
                this.columnFTPServer = base.Columns["FTPServer"];
                this.columnFTPPath = base.Columns["FTPPath"];
                this.columnFTPUser = base.Columns["FTPUser"];
                this.columnFTPPassword = base.Columns["FTPPassword"];
                this.columnFTPPort = base.Columns["FTPPort"];
                this.columnPublicServer = base.Columns["PublicServer"];
                this.columnPublicPort = base.Columns["PublicPort"];
                this.columnPublicUser = base.Columns["PublicUser"];
                this.columnPublicPassword = base.Columns["PublicPassword"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnStorageName = new global::System.Data.DataColumn("StorageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageName);
                this.columnServer = new global::System.Data.DataColumn("Server", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer);
                this.columnShare = new global::System.Data.DataColumn("Share", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare);
                this.columnFTPServer = new global::System.Data.DataColumn("FTPServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer);
                this.columnFTPPath = new global::System.Data.DataColumn("FTPPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath);
                this.columnFTPUser = new global::System.Data.DataColumn("FTPUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser);
                this.columnFTPPassword = new global::System.Data.DataColumn("FTPPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword);
                this.columnFTPPort = new global::System.Data.DataColumn("FTPPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort);
                this.columnPublicServer = new global::System.Data.DataColumn("PublicServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicServer);
                this.columnPublicPort = new global::System.Data.DataColumn("PublicPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicPort);
                this.columnPublicUser = new global::System.Data.DataColumn("PublicUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicUser);
                this.columnPublicPassword = new global::System.Data.DataColumn("PublicPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicPassword);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStorageID}, true));
                this.columnStorageID.AllowDBNull = false;
                this.columnStorageID.Unique = true;
                this.columnStorageName.MaxLength = 256;
                this.columnServer.MaxLength = 256;
                this.columnShare.MaxLength = 256;
                this.columnFTPServer.MaxLength = 256;
                this.columnFTPPath.MaxLength = 256;
                this.columnFTPUser.MaxLength = 256;
                this.columnFTPPassword.MaxLength = 256;
                this.columnPublicServer.MaxLength = 256;
                this.columnPublicUser.MaxLength = 256;
                this.columnPublicPassword.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRRow NewStoragesNRRow() {
                return ((StoragesNRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StoragesNRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StoragesNRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StoragesNRRowChanged != null)) {
                    this.StoragesNRRowChanged(this, new StoragesNRRowChangeEvent(((StoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StoragesNRRowChanging != null)) {
                    this.StoragesNRRowChanging(this, new StoragesNRRowChangeEvent(((StoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StoragesNRRowDeleted != null)) {
                    this.StoragesNRRowDeleted(this, new StoragesNRRowChangeEvent(((StoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StoragesNRRowDeleting != null)) {
                    this.StoragesNRRowDeleting(this, new StoragesNRRowChangeEvent(((StoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStoragesNRRow(StoragesNRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewsRoomDS ds = new NewsRoomDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StoragesNRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StorageZoneInfoNRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnStorageZone;
            
            private global::System.Data.DataColumn columnFTPServer1;
            
            private global::System.Data.DataColumn columnFTPPath1;
            
            private global::System.Data.DataColumn columnFTPUser1;
            
            private global::System.Data.DataColumn columnFTPPassword1;
            
            private global::System.Data.DataColumn columnFTPPort1;
            
            private global::System.Data.DataColumn columnServer1;
            
            private global::System.Data.DataColumn columnShare1;
            
            private global::System.Data.DataColumn columnFSPath1;
            
            private global::System.Data.DataColumn columnFSPort1;
            
            private global::System.Data.DataColumn columnFTPServer2;
            
            private global::System.Data.DataColumn columnFTPPath2;
            
            private global::System.Data.DataColumn columnFTPUser2;
            
            private global::System.Data.DataColumn columnFTPPassword2;
            
            private global::System.Data.DataColumn columnFTPPort2;
            
            private global::System.Data.DataColumn columnServer2;
            
            private global::System.Data.DataColumn columnShare2;
            
            private global::System.Data.DataColumn columnFSPath2;
            
            private global::System.Data.DataColumn columnFSPort2;
            
            private global::System.Data.DataColumn columnFTPServer3;
            
            private global::System.Data.DataColumn columnFTPPath3;
            
            private global::System.Data.DataColumn columnFTPUser3;
            
            private global::System.Data.DataColumn columnFTPPassword3;
            
            private global::System.Data.DataColumn columnFTPPort3;
            
            private global::System.Data.DataColumn columnServer3;
            
            private global::System.Data.DataColumn columnShare3;
            
            private global::System.Data.DataColumn columnFSPath3;
            
            private global::System.Data.DataColumn columnFSPort3;
            
            private global::System.Data.DataColumn columnFTPServer4;
            
            private global::System.Data.DataColumn columnFTPPath4;
            
            private global::System.Data.DataColumn columnFTPUser4;
            
            private global::System.Data.DataColumn columnFTPPassword4;
            
            private global::System.Data.DataColumn columnFTPPort4;
            
            private global::System.Data.DataColumn columnServer4;
            
            private global::System.Data.DataColumn columnShare4;
            
            private global::System.Data.DataColumn columnFSPath4;
            
            private global::System.Data.DataColumn columnFSPort4;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoNRDataTable() {
                this.TableName = "StorageZoneInfoNR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneInfoNRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StorageZoneInfoNRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageZoneColumn {
                get {
                    return this.columnStorageZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer1Column {
                get {
                    return this.columnFTPServer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath1Column {
                get {
                    return this.columnFTPPath1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser1Column {
                get {
                    return this.columnFTPUser1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword1Column {
                get {
                    return this.columnFTPPassword1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort1Column {
                get {
                    return this.columnFTPPort1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server1Column {
                get {
                    return this.columnServer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share1Column {
                get {
                    return this.columnShare1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath1Column {
                get {
                    return this.columnFSPath1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort1Column {
                get {
                    return this.columnFSPort1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer2Column {
                get {
                    return this.columnFTPServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath2Column {
                get {
                    return this.columnFTPPath2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser2Column {
                get {
                    return this.columnFTPUser2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword2Column {
                get {
                    return this.columnFTPPassword2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort2Column {
                get {
                    return this.columnFTPPort2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server2Column {
                get {
                    return this.columnServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share2Column {
                get {
                    return this.columnShare2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath2Column {
                get {
                    return this.columnFSPath2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort2Column {
                get {
                    return this.columnFSPort2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer3Column {
                get {
                    return this.columnFTPServer3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath3Column {
                get {
                    return this.columnFTPPath3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser3Column {
                get {
                    return this.columnFTPUser3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword3Column {
                get {
                    return this.columnFTPPassword3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort3Column {
                get {
                    return this.columnFTPPort3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server3Column {
                get {
                    return this.columnServer3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share3Column {
                get {
                    return this.columnShare3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath3Column {
                get {
                    return this.columnFSPath3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort3Column {
                get {
                    return this.columnFSPort3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPServer4Column {
                get {
                    return this.columnFTPServer4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPath4Column {
                get {
                    return this.columnFTPPath4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPUser4Column {
                get {
                    return this.columnFTPUser4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPassword4Column {
                get {
                    return this.columnFTPPassword4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTPPort4Column {
                get {
                    return this.columnFTPPort4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Server4Column {
                get {
                    return this.columnServer4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Share4Column {
                get {
                    return this.columnShare4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPath4Column {
                get {
                    return this.columnFSPath4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSPort4Column {
                get {
                    return this.columnFSPort4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoNRRow this[int index] {
                get {
                    return ((StorageZoneInfoNRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoNRRowChangeEventHandler StorageZoneInfoNRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoNRRowChangeEventHandler StorageZoneInfoNRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoNRRowChangeEventHandler StorageZoneInfoNRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StorageZoneInfoNRRowChangeEventHandler StorageZoneInfoNRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStorageZoneInfoNRRow(StorageZoneInfoNRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoNRRow AddStorageZoneInfoNRRow(
                        System.Guid StorageID, 
                        int StorageZone, 
                        string FTPServer1, 
                        string FTPPath1, 
                        string FTPUser1, 
                        string FTPPassword1, 
                        int FTPPort1, 
                        string Server1, 
                        string Share1, 
                        string FSPath1, 
                        int FSPort1, 
                        string FTPServer2, 
                        string FTPPath2, 
                        string FTPUser2, 
                        string FTPPassword2, 
                        int FTPPort2, 
                        string Server2, 
                        string Share2, 
                        string FSPath2, 
                        int FSPort2, 
                        string FTPServer3, 
                        string FTPPath3, 
                        string FTPUser3, 
                        string FTPPassword3, 
                        int FTPPort3, 
                        string Server3, 
                        string Share3, 
                        string FSPath3, 
                        int FSPort3, 
                        string FTPServer4, 
                        string FTPPath4, 
                        string FTPUser4, 
                        string FTPPassword4, 
                        int FTPPort4, 
                        string Server4, 
                        string Share4, 
                        string FSPath4, 
                        int FSPort4, 
                        string Name) {
                StorageZoneInfoNRRow rowStorageZoneInfoNRRow = ((StorageZoneInfoNRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StorageID,
                        StorageZone,
                        FTPServer1,
                        FTPPath1,
                        FTPUser1,
                        FTPPassword1,
                        FTPPort1,
                        Server1,
                        Share1,
                        FSPath1,
                        FSPort1,
                        FTPServer2,
                        FTPPath2,
                        FTPUser2,
                        FTPPassword2,
                        FTPPort2,
                        Server2,
                        Share2,
                        FSPath2,
                        FSPort2,
                        FTPServer3,
                        FTPPath3,
                        FTPUser3,
                        FTPPassword3,
                        FTPPort3,
                        Server3,
                        Share3,
                        FSPath3,
                        FSPort3,
                        FTPServer4,
                        FTPPath4,
                        FTPUser4,
                        FTPPassword4,
                        FTPPort4,
                        Server4,
                        Share4,
                        FSPath4,
                        FSPort4,
                        Name};
                rowStorageZoneInfoNRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStorageZoneInfoNRRow);
                return rowStorageZoneInfoNRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoNRRow FindByStorageIDStorageZone(System.Guid StorageID, int StorageZone) {
                return ((StorageZoneInfoNRRow)(this.Rows.Find(new object[] {
                            StorageID,
                            StorageZone})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StorageZoneInfoNRDataTable cln = ((StorageZoneInfoNRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StorageZoneInfoNRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStorageID = base.Columns["StorageID"];
                this.columnStorageZone = base.Columns["StorageZone"];
                this.columnFTPServer1 = base.Columns["FTPServer1"];
                this.columnFTPPath1 = base.Columns["FTPPath1"];
                this.columnFTPUser1 = base.Columns["FTPUser1"];
                this.columnFTPPassword1 = base.Columns["FTPPassword1"];
                this.columnFTPPort1 = base.Columns["FTPPort1"];
                this.columnServer1 = base.Columns["Server1"];
                this.columnShare1 = base.Columns["Share1"];
                this.columnFSPath1 = base.Columns["FSPath1"];
                this.columnFSPort1 = base.Columns["FSPort1"];
                this.columnFTPServer2 = base.Columns["FTPServer2"];
                this.columnFTPPath2 = base.Columns["FTPPath2"];
                this.columnFTPUser2 = base.Columns["FTPUser2"];
                this.columnFTPPassword2 = base.Columns["FTPPassword2"];
                this.columnFTPPort2 = base.Columns["FTPPort2"];
                this.columnServer2 = base.Columns["Server2"];
                this.columnShare2 = base.Columns["Share2"];
                this.columnFSPath2 = base.Columns["FSPath2"];
                this.columnFSPort2 = base.Columns["FSPort2"];
                this.columnFTPServer3 = base.Columns["FTPServer3"];
                this.columnFTPPath3 = base.Columns["FTPPath3"];
                this.columnFTPUser3 = base.Columns["FTPUser3"];
                this.columnFTPPassword3 = base.Columns["FTPPassword3"];
                this.columnFTPPort3 = base.Columns["FTPPort3"];
                this.columnServer3 = base.Columns["Server3"];
                this.columnShare3 = base.Columns["Share3"];
                this.columnFSPath3 = base.Columns["FSPath3"];
                this.columnFSPort3 = base.Columns["FSPort3"];
                this.columnFTPServer4 = base.Columns["FTPServer4"];
                this.columnFTPPath4 = base.Columns["FTPPath4"];
                this.columnFTPUser4 = base.Columns["FTPUser4"];
                this.columnFTPPassword4 = base.Columns["FTPPassword4"];
                this.columnFTPPort4 = base.Columns["FTPPort4"];
                this.columnServer4 = base.Columns["Server4"];
                this.columnShare4 = base.Columns["Share4"];
                this.columnFSPath4 = base.Columns["FSPath4"];
                this.columnFSPort4 = base.Columns["FSPort4"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnStorageZone = new global::System.Data.DataColumn("StorageZone", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageZone);
                this.columnFTPServer1 = new global::System.Data.DataColumn("FTPServer1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer1);
                this.columnFTPPath1 = new global::System.Data.DataColumn("FTPPath1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath1);
                this.columnFTPUser1 = new global::System.Data.DataColumn("FTPUser1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser1);
                this.columnFTPPassword1 = new global::System.Data.DataColumn("FTPPassword1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword1);
                this.columnFTPPort1 = new global::System.Data.DataColumn("FTPPort1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort1);
                this.columnServer1 = new global::System.Data.DataColumn("Server1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer1);
                this.columnShare1 = new global::System.Data.DataColumn("Share1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare1);
                this.columnFSPath1 = new global::System.Data.DataColumn("FSPath1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath1);
                this.columnFSPort1 = new global::System.Data.DataColumn("FSPort1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort1);
                this.columnFTPServer2 = new global::System.Data.DataColumn("FTPServer2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer2);
                this.columnFTPPath2 = new global::System.Data.DataColumn("FTPPath2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath2);
                this.columnFTPUser2 = new global::System.Data.DataColumn("FTPUser2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser2);
                this.columnFTPPassword2 = new global::System.Data.DataColumn("FTPPassword2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword2);
                this.columnFTPPort2 = new global::System.Data.DataColumn("FTPPort2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort2);
                this.columnServer2 = new global::System.Data.DataColumn("Server2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer2);
                this.columnShare2 = new global::System.Data.DataColumn("Share2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare2);
                this.columnFSPath2 = new global::System.Data.DataColumn("FSPath2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath2);
                this.columnFSPort2 = new global::System.Data.DataColumn("FSPort2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort2);
                this.columnFTPServer3 = new global::System.Data.DataColumn("FTPServer3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer3);
                this.columnFTPPath3 = new global::System.Data.DataColumn("FTPPath3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath3);
                this.columnFTPUser3 = new global::System.Data.DataColumn("FTPUser3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser3);
                this.columnFTPPassword3 = new global::System.Data.DataColumn("FTPPassword3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword3);
                this.columnFTPPort3 = new global::System.Data.DataColumn("FTPPort3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort3);
                this.columnServer3 = new global::System.Data.DataColumn("Server3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer3);
                this.columnShare3 = new global::System.Data.DataColumn("Share3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare3);
                this.columnFSPath3 = new global::System.Data.DataColumn("FSPath3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath3);
                this.columnFSPort3 = new global::System.Data.DataColumn("FSPort3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort3);
                this.columnFTPServer4 = new global::System.Data.DataColumn("FTPServer4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPServer4);
                this.columnFTPPath4 = new global::System.Data.DataColumn("FTPPath4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPath4);
                this.columnFTPUser4 = new global::System.Data.DataColumn("FTPUser4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPUser4);
                this.columnFTPPassword4 = new global::System.Data.DataColumn("FTPPassword4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPassword4);
                this.columnFTPPort4 = new global::System.Data.DataColumn("FTPPort4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTPPort4);
                this.columnServer4 = new global::System.Data.DataColumn("Server4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServer4);
                this.columnShare4 = new global::System.Data.DataColumn("Share4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShare4);
                this.columnFSPath4 = new global::System.Data.DataColumn("FSPath4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPath4);
                this.columnFSPort4 = new global::System.Data.DataColumn("FSPort4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPort4);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStorageID,
                                this.columnStorageZone}, true));
                this.columnStorageID.AllowDBNull = false;
                this.columnStorageZone.AllowDBNull = false;
                this.columnFTPServer1.MaxLength = 256;
                this.columnFTPPath1.MaxLength = 256;
                this.columnFTPUser1.MaxLength = 256;
                this.columnFTPPassword1.MaxLength = 256;
                this.columnServer1.MaxLength = 256;
                this.columnShare1.MaxLength = 256;
                this.columnFSPath1.MaxLength = 256;
                this.columnFTPServer2.MaxLength = 256;
                this.columnFTPPath2.MaxLength = 256;
                this.columnFTPUser2.MaxLength = 256;
                this.columnFTPPassword2.MaxLength = 256;
                this.columnServer2.MaxLength = 256;
                this.columnShare2.MaxLength = 256;
                this.columnFSPath2.MaxLength = 256;
                this.columnFTPServer3.MaxLength = 256;
                this.columnFTPPath3.MaxLength = 256;
                this.columnFTPUser3.MaxLength = 256;
                this.columnFTPPassword3.MaxLength = 256;
                this.columnServer3.MaxLength = 256;
                this.columnShare3.MaxLength = 256;
                this.columnFSPath3.MaxLength = 256;
                this.columnFTPServer4.MaxLength = 256;
                this.columnFTPPath4.MaxLength = 256;
                this.columnFTPUser4.MaxLength = 256;
                this.columnFTPPassword4.MaxLength = 256;
                this.columnServer4.MaxLength = 256;
                this.columnShare4.MaxLength = 256;
                this.columnFSPath4.MaxLength = 256;
                this.columnName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoNRRow NewStorageZoneInfoNRRow() {
                return ((StorageZoneInfoNRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StorageZoneInfoNRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StorageZoneInfoNRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StorageZoneInfoNRRowChanged != null)) {
                    this.StorageZoneInfoNRRowChanged(this, new StorageZoneInfoNRRowChangeEvent(((StorageZoneInfoNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StorageZoneInfoNRRowChanging != null)) {
                    this.StorageZoneInfoNRRowChanging(this, new StorageZoneInfoNRRowChangeEvent(((StorageZoneInfoNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StorageZoneInfoNRRowDeleted != null)) {
                    this.StorageZoneInfoNRRowDeleted(this, new StorageZoneInfoNRRowChangeEvent(((StorageZoneInfoNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StorageZoneInfoNRRowDeleting != null)) {
                    this.StorageZoneInfoNRRowDeleting(this, new StorageZoneInfoNRRowChangeEvent(((StorageZoneInfoNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStorageZoneInfoNRRow(StorageZoneInfoNRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewsRoomDS ds = new NewsRoomDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StorageZoneInfoNRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LibStoragesNRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLibStoragesID;
            
            private global::System.Data.DataColumn columnProgramLibID;
            
            private global::System.Data.DataColumn columnStorageID;
            
            private global::System.Data.DataColumn columnStorageIndex;
            
            private global::System.Data.DataColumn columnMaxSpaceMB;
            
            private global::System.Data.DataColumn columnFreeSpaceMB;
            
            private global::System.Data.DataColumn columnMaxSpaceHour;
            
            private global::System.Data.DataColumn columnFreeSpaceHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRDataTable() {
                this.TableName = "LibStoragesNR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LibStoragesNRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LibStoragesNRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibStoragesIDColumn {
                get {
                    return this.columnLibStoragesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgramLibIDColumn {
                get {
                    return this.columnProgramLibID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIDColumn {
                get {
                    return this.columnStorageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StorageIndexColumn {
                get {
                    return this.columnStorageIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceMBColumn {
                get {
                    return this.columnMaxSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceMBColumn {
                get {
                    return this.columnFreeSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxSpaceHourColumn {
                get {
                    return this.columnMaxSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeSpaceHourColumn {
                get {
                    return this.columnFreeSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRow this[int index] {
                get {
                    return ((LibStoragesNRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesNRRowChangeEventHandler LibStoragesNRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesNRRowChangeEventHandler LibStoragesNRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesNRRowChangeEventHandler LibStoragesNRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LibStoragesNRRowChangeEventHandler LibStoragesNRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLibStoragesNRRow(LibStoragesNRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRow AddLibStoragesNRRow(System.Guid LibStoragesID, ProgramLibNRRow parentProgramLibNRRowByFK_LIBSTORA_REFERENCE_PROGRAML, StoragesNRRow parentStoragesNRRowByFK_LIBSTORA_REFERENCE_STORAGES, int StorageIndex, int MaxSpaceMB, int FreeSpaceMB, int MaxSpaceHour, int FreeSpaceHour) {
                LibStoragesNRRow rowLibStoragesNRRow = ((LibStoragesNRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LibStoragesID,
                        null,
                        null,
                        StorageIndex,
                        MaxSpaceMB,
                        FreeSpaceMB,
                        MaxSpaceHour,
                        FreeSpaceHour};
                if ((parentProgramLibNRRowByFK_LIBSTORA_REFERENCE_PROGRAML != null)) {
                    columnValuesArray[1] = parentProgramLibNRRowByFK_LIBSTORA_REFERENCE_PROGRAML[0];
                }
                if ((parentStoragesNRRowByFK_LIBSTORA_REFERENCE_STORAGES != null)) {
                    columnValuesArray[2] = parentStoragesNRRowByFK_LIBSTORA_REFERENCE_STORAGES[0];
                }
                rowLibStoragesNRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLibStoragesNRRow);
                return rowLibStoragesNRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRow FindByLibStoragesID(System.Guid LibStoragesID) {
                return ((LibStoragesNRRow)(this.Rows.Find(new object[] {
                            LibStoragesID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LibStoragesNRDataTable cln = ((LibStoragesNRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LibStoragesNRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLibStoragesID = base.Columns["LibStoragesID"];
                this.columnProgramLibID = base.Columns["ProgramLibID"];
                this.columnStorageID = base.Columns["StorageID"];
                this.columnStorageIndex = base.Columns["StorageIndex"];
                this.columnMaxSpaceMB = base.Columns["MaxSpaceMB"];
                this.columnFreeSpaceMB = base.Columns["FreeSpaceMB"];
                this.columnMaxSpaceHour = base.Columns["MaxSpaceHour"];
                this.columnFreeSpaceHour = base.Columns["FreeSpaceHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLibStoragesID = new global::System.Data.DataColumn("LibStoragesID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibStoragesID);
                this.columnProgramLibID = new global::System.Data.DataColumn("ProgramLibID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramLibID);
                this.columnStorageID = new global::System.Data.DataColumn("StorageID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageID);
                this.columnStorageIndex = new global::System.Data.DataColumn("StorageIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageIndex);
                this.columnMaxSpaceMB = new global::System.Data.DataColumn("MaxSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceMB);
                this.columnFreeSpaceMB = new global::System.Data.DataColumn("FreeSpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceMB);
                this.columnMaxSpaceHour = new global::System.Data.DataColumn("MaxSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxSpaceHour);
                this.columnFreeSpaceHour = new global::System.Data.DataColumn("FreeSpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSpaceHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLibStoragesID}, true));
                this.columnLibStoragesID.AllowDBNull = false;
                this.columnLibStoragesID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRow NewLibStoragesNRRow() {
                return ((LibStoragesNRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LibStoragesNRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LibStoragesNRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LibStoragesNRRowChanged != null)) {
                    this.LibStoragesNRRowChanged(this, new LibStoragesNRRowChangeEvent(((LibStoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LibStoragesNRRowChanging != null)) {
                    this.LibStoragesNRRowChanging(this, new LibStoragesNRRowChangeEvent(((LibStoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LibStoragesNRRowDeleted != null)) {
                    this.LibStoragesNRRowDeleted(this, new LibStoragesNRRowChangeEvent(((LibStoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LibStoragesNRRowDeleting != null)) {
                    this.LibStoragesNRRowDeleting(this, new LibStoragesNRRowChangeEvent(((LibStoragesNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLibStoragesNRRow(LibStoragesNRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewsRoomDS ds = new NewsRoomDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LibStoragesNRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UserSpaceInObjNRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnObjectID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnSpaceMB;
            
            private global::System.Data.DataColumn columnSpaceHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjNRDataTable() {
                this.TableName = "UserSpaceInObjNR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UserSpaceInObjNRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UserSpaceInObjNRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObjectIDColumn {
                get {
                    return this.columnObjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpaceMBColumn {
                get {
                    return this.columnSpaceMB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpaceHourColumn {
                get {
                    return this.columnSpaceHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjNRRow this[int index] {
                get {
                    return ((UserSpaceInObjNRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjNRRowChangeEventHandler UserSpaceInObjNRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjNRRowChangeEventHandler UserSpaceInObjNRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjNRRowChangeEventHandler UserSpaceInObjNRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UserSpaceInObjNRRowChangeEventHandler UserSpaceInObjNRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUserSpaceInObjNRRow(UserSpaceInObjNRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjNRRow AddUserSpaceInObjNRRow(System.Guid ObjectID, System.Guid UserID, int SpaceMB, int SpaceHour) {
                UserSpaceInObjNRRow rowUserSpaceInObjNRRow = ((UserSpaceInObjNRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ObjectID,
                        UserID,
                        SpaceMB,
                        SpaceHour};
                rowUserSpaceInObjNRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUserSpaceInObjNRRow);
                return rowUserSpaceInObjNRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjNRRow FindByObjectIDUserID(System.Guid ObjectID, System.Guid UserID) {
                return ((UserSpaceInObjNRRow)(this.Rows.Find(new object[] {
                            ObjectID,
                            UserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UserSpaceInObjNRDataTable cln = ((UserSpaceInObjNRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UserSpaceInObjNRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnObjectID = base.Columns["ObjectID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnSpaceMB = base.Columns["SpaceMB"];
                this.columnSpaceHour = base.Columns["SpaceHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnObjectID = new global::System.Data.DataColumn("ObjectID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnSpaceMB = new global::System.Data.DataColumn("SpaceMB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpaceMB);
                this.columnSpaceHour = new global::System.Data.DataColumn("SpaceHour", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpaceHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnObjectID,
                                this.columnUserID}, true));
                this.columnObjectID.AllowDBNull = false;
                this.columnUserID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjNRRow NewUserSpaceInObjNRRow() {
                return ((UserSpaceInObjNRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UserSpaceInObjNRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UserSpaceInObjNRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UserSpaceInObjNRRowChanged != null)) {
                    this.UserSpaceInObjNRRowChanged(this, new UserSpaceInObjNRRowChangeEvent(((UserSpaceInObjNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UserSpaceInObjNRRowChanging != null)) {
                    this.UserSpaceInObjNRRowChanging(this, new UserSpaceInObjNRRowChangeEvent(((UserSpaceInObjNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UserSpaceInObjNRRowDeleted != null)) {
                    this.UserSpaceInObjNRRowDeleted(this, new UserSpaceInObjNRRowChangeEvent(((UserSpaceInObjNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UserSpaceInObjNRRowDeleting != null)) {
                    this.UserSpaceInObjNRRowDeleting(this, new UserSpaceInObjNRRowChangeEvent(((UserSpaceInObjNRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUserSpaceInObjNRRow(UserSpaceInObjNRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewsRoomDS ds = new NewsRoomDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UserSpaceInObjNRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProgramLibNRRow : global::System.Data.DataRow {
            
            private ProgramLibNRDataTable tableProgramLibNR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramLibNRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProgramLibNR = ((ProgramLibNRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramLibID {
                get {
                    return ((global::System.Guid)(this[this.tableProgramLibNR.ProgramLibIDColumn]));
                }
                set {
                    this[this.tableProgramLibNR.ProgramLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProgramLibName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLibNR.ProgramLibNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“ProgramLibName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.ProgramLibNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int programLibNum {
                get {
                    try {
                        return ((int)(this[this.tableProgramLibNR.programLibNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“programLibNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.programLibNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProgramLibNR.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“CreatorID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatorName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLibNR.CreatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“CreatorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.CreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProgramLibNR.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“CreateDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBServer {
                get {
                    try {
                        return ((string)(this[this.tableProgramLibNR.DBServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“DBServer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.DBServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBServer_Bak {
                get {
                    try {
                        return ((string)(this[this.tableProgramLibNR.DBServer_BakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“DBServer_Bak”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.DBServer_BakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLibNR.DBNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“DBName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.DBNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DBName_Bak {
                get {
                    try {
                        return ((string)(this[this.tableProgramLibNR.DBName_BakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“DBName_Bak”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.DBName_BakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProgramLibType {
                get {
                    try {
                        return ((int)(this[this.tableProgramLibNR.ProgramLibTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“ProgramLibType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.ProgramLibTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableProgramLibNR.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableProgramLibNR.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableProgramLibNR.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableProgramLibNR.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortName {
                get {
                    try {
                        return ((string)(this[this.tableProgramLibNR.ShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProgramLibNR”中列“ShortName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProgramLibNR.ShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibNameNull() {
                return this.IsNull(this.tableProgramLibNR.ProgramLibNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibNameNull() {
                this[this.tableProgramLibNR.ProgramLibNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprogramLibNumNull() {
                return this.IsNull(this.tableProgramLibNR.programLibNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprogramLibNumNull() {
                this[this.tableProgramLibNR.programLibNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableProgramLibNR.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableProgramLibNR.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorNameNull() {
                return this.IsNull(this.tableProgramLibNR.CreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorNameNull() {
                this[this.tableProgramLibNR.CreatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableProgramLibNR.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tableProgramLibNR.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBServerNull() {
                return this.IsNull(this.tableProgramLibNR.DBServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBServerNull() {
                this[this.tableProgramLibNR.DBServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBServer_BakNull() {
                return this.IsNull(this.tableProgramLibNR.DBServer_BakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBServer_BakNull() {
                this[this.tableProgramLibNR.DBServer_BakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBNameNull() {
                return this.IsNull(this.tableProgramLibNR.DBNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBNameNull() {
                this[this.tableProgramLibNR.DBNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDBName_BakNull() {
                return this.IsNull(this.tableProgramLibNR.DBName_BakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDBName_BakNull() {
                this[this.tableProgramLibNR.DBName_BakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibTypeNull() {
                return this.IsNull(this.tableProgramLibNR.ProgramLibTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibTypeNull() {
                this[this.tableProgramLibNR.ProgramLibTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableProgramLibNR.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableProgramLibNR.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableProgramLibNR.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableProgramLibNR.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableProgramLibNR.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableProgramLibNR.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableProgramLibNR.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableProgramLibNR.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortNameNull() {
                return this.IsNull(this.tableProgramLibNR.ShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortNameNull() {
                this[this.tableProgramLibNR.ShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRRow[] GetFolderNRRows() {
                if ((this.Table.ChildRelations["FK_Folder_ProgramLib"] == null)) {
                    return new FolderNRRow[0];
                }
                else {
                    return ((FolderNRRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Folder_ProgramLib"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRow[] GetLibStoragesNRRows() {
                if ((this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_PROGRAML"] == null)) {
                    return new LibStoragesNRRow[0];
                }
                else {
                    return ((LibStoragesNRRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_PROGRAML"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FolderNRRow : global::System.Data.DataRow {
            
            private FolderNRDataTable tableFolderNR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FolderNRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFolderNR = ((FolderNRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid FolderID {
                get {
                    return ((global::System.Guid)(this[this.tableFolderNR.FolderIDColumn]));
                }
                set {
                    this[this.tableFolderNR.FolderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FolderName {
                get {
                    try {
                        return ((string)(this[this.tableFolderNR.FolderNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“FolderName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.FolderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramLibID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolderNR.ProgramLibIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“ProgramLibID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.ProgramLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short FolderType {
                get {
                    try {
                        return ((short)(this[this.tableFolderNR.FolderTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“FolderType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.FolderTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ParentID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolderNR.ParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“ParentID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.ParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid CreatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolderNR.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“CreatorID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatorName {
                get {
                    try {
                        return ((string)(this[this.tableFolderNR.CreatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“CreatorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.CreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFolderNR.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“CreateDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Shared {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.SharedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“Shared”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.SharedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SuperviseLevel {
                get {
                    try {
                        return ((short)(this[this.tableFolderNR.SuperviseLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“SuperviseLevel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.SuperviseLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MaterialAccess {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.MaterialAccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“MaterialAccess”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.MaterialAccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ProjectAccess {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.ProjectAccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“ProjectAccess”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.ProjectAccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TelephoneAccess {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.TelephoneAccessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“TelephoneAccess”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.TelephoneAccessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access1 {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.Access1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“Access1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.Access1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access2 {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.Access2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“Access2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.Access2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access3 {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.Access3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“Access3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.Access3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access4 {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.Access4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“Access4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.Access4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Access5 {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.Access5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“Access5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.Access5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaterialMB {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.MaterialMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“MaterialMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.MaterialMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaterialHour {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.MaterialHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“MaterialHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.MaterialHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectMB {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.ProjectMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“ProjectMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.ProjectMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectHour {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.ProjectHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“ProjectHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.ProjectHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TelephoneMB {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.TelephoneMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“TelephoneMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.TelephoneMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TelephoneHour {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.TelephoneHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“TelephoneHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.TelephoneHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RootID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableFolderNR.RootIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“RootID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.RootIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortName {
                get {
                    try {
                        return ((string)(this[this.tableFolderNR.ShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“ShortName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.ShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TelephoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableFolderNR.TelephoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“TelephoneNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.TelephoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeedExport {
                get {
                    try {
                        return ((bool)(this[this.tableFolderNR.IsNeedExportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“IsNeedExport”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.IsNeedExportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KeepDays {
                get {
                    try {
                        return ((int)(this[this.tableFolderNR.KeepDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FolderNR”中列“KeepDays”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFolderNR.KeepDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRow ProgramLibNRRow {
                get {
                    return ((ProgramLibNRRow)(this.GetParentRow(this.Table.ParentRelations["FK_Folder_ProgramLib"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Folder_ProgramLib"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFolderNameNull() {
                return this.IsNull(this.tableFolderNR.FolderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFolderNameNull() {
                this[this.tableFolderNR.FolderNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibIDNull() {
                return this.IsNull(this.tableFolderNR.ProgramLibIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibIDNull() {
                this[this.tableFolderNR.ProgramLibIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFolderTypeNull() {
                return this.IsNull(this.tableFolderNR.FolderTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFolderTypeNull() {
                this[this.tableFolderNR.FolderTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentIDNull() {
                return this.IsNull(this.tableFolderNR.ParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentIDNull() {
                this[this.tableFolderNR.ParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableFolderNR.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableFolderNR.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorNameNull() {
                return this.IsNull(this.tableFolderNR.CreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorNameNull() {
                this[this.tableFolderNR.CreatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableFolderNR.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tableFolderNR.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSharedNull() {
                return this.IsNull(this.tableFolderNR.SharedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSharedNull() {
                this[this.tableFolderNR.SharedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuperviseLevelNull() {
                return this.IsNull(this.tableFolderNR.SuperviseLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuperviseLevelNull() {
                this[this.tableFolderNR.SuperviseLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialAccessNull() {
                return this.IsNull(this.tableFolderNR.MaterialAccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialAccessNull() {
                this[this.tableFolderNR.MaterialAccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectAccessNull() {
                return this.IsNull(this.tableFolderNR.ProjectAccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectAccessNull() {
                this[this.tableFolderNR.ProjectAccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneAccessNull() {
                return this.IsNull(this.tableFolderNR.TelephoneAccessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneAccessNull() {
                this[this.tableFolderNR.TelephoneAccessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess1Null() {
                return this.IsNull(this.tableFolderNR.Access1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess1Null() {
                this[this.tableFolderNR.Access1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess2Null() {
                return this.IsNull(this.tableFolderNR.Access2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess2Null() {
                this[this.tableFolderNR.Access2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess3Null() {
                return this.IsNull(this.tableFolderNR.Access3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess3Null() {
                this[this.tableFolderNR.Access3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess4Null() {
                return this.IsNull(this.tableFolderNR.Access4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess4Null() {
                this[this.tableFolderNR.Access4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccess5Null() {
                return this.IsNull(this.tableFolderNR.Access5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccess5Null() {
                this[this.tableFolderNR.Access5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableFolderNR.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableFolderNR.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableFolderNR.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableFolderNR.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableFolderNR.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableFolderNR.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableFolderNR.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableFolderNR.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialMBNull() {
                return this.IsNull(this.tableFolderNR.MaterialMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialMBNull() {
                this[this.tableFolderNR.MaterialMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialHourNull() {
                return this.IsNull(this.tableFolderNR.MaterialHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialHourNull() {
                this[this.tableFolderNR.MaterialHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectMBNull() {
                return this.IsNull(this.tableFolderNR.ProjectMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectMBNull() {
                this[this.tableFolderNR.ProjectMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectHourNull() {
                return this.IsNull(this.tableFolderNR.ProjectHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectHourNull() {
                this[this.tableFolderNR.ProjectHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneMBNull() {
                return this.IsNull(this.tableFolderNR.TelephoneMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneMBNull() {
                this[this.tableFolderNR.TelephoneMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneHourNull() {
                return this.IsNull(this.tableFolderNR.TelephoneHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneHourNull() {
                this[this.tableFolderNR.TelephoneHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRootIDNull() {
                return this.IsNull(this.tableFolderNR.RootIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRootIDNull() {
                this[this.tableFolderNR.RootIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortNameNull() {
                return this.IsNull(this.tableFolderNR.ShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortNameNull() {
                this[this.tableFolderNR.ShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneNumberNull() {
                return this.IsNull(this.tableFolderNR.TelephoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneNumberNull() {
                this[this.tableFolderNR.TelephoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsNeedExportNull() {
                return this.IsNull(this.tableFolderNR.IsNeedExportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsNeedExportNull() {
                this[this.tableFolderNR.IsNeedExportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKeepDaysNull() {
                return this.IsNull(this.tableFolderNR.KeepDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKeepDaysNull() {
                this[this.tableFolderNR.KeepDaysColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StoragesNRRow : global::System.Data.DataRow {
            
            private StoragesNRDataTable tableStoragesNR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoragesNRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStoragesNR = ((StoragesNRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    return ((global::System.Guid)(this[this.tableStoragesNR.StorageIDColumn]));
                }
                set {
                    this[this.tableStoragesNR.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StorageName {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.StorageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“StorageName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.StorageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.ServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“Server”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.ServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“Share”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.FTPServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“FTPServer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.FTPServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.FTPPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“FTPPath”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.FTPPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.FTPUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“FTPUser”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.FTPUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.FTPPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“FTPPassword”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.FTPPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort {
                get {
                    try {
                        return ((int)(this[this.tableStoragesNR.FTPPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“FTPPort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.FTPPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublicServer {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.PublicServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“PublicServer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.PublicServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PublicPort {
                get {
                    try {
                        return ((int)(this[this.tableStoragesNR.PublicPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“PublicPort”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.PublicPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublicUser {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.PublicUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“PublicUser”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.PublicUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublicPassword {
                get {
                    try {
                        return ((string)(this[this.tableStoragesNR.PublicPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“PublicPassword”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.PublicPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableStoragesNR.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableStoragesNR.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableStoragesNR.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableStoragesNR.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StoragesNR”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStoragesNR.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageNameNull() {
                return this.IsNull(this.tableStoragesNR.StorageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageNameNull() {
                this[this.tableStoragesNR.StorageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServerNull() {
                return this.IsNull(this.tableStoragesNR.ServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServerNull() {
                this[this.tableStoragesNR.ServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShareNull() {
                return this.IsNull(this.tableStoragesNR.ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShareNull() {
                this[this.tableStoragesNR.ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServerNull() {
                return this.IsNull(this.tableStoragesNR.FTPServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServerNull() {
                this[this.tableStoragesNR.FTPServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPathNull() {
                return this.IsNull(this.tableStoragesNR.FTPPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPathNull() {
                this[this.tableStoragesNR.FTPPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUserNull() {
                return this.IsNull(this.tableStoragesNR.FTPUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUserNull() {
                this[this.tableStoragesNR.FTPUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPasswordNull() {
                return this.IsNull(this.tableStoragesNR.FTPPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPasswordNull() {
                this[this.tableStoragesNR.FTPPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPortNull() {
                return this.IsNull(this.tableStoragesNR.FTPPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPortNull() {
                this[this.tableStoragesNR.FTPPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicServerNull() {
                return this.IsNull(this.tableStoragesNR.PublicServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicServerNull() {
                this[this.tableStoragesNR.PublicServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicPortNull() {
                return this.IsNull(this.tableStoragesNR.PublicPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicPortNull() {
                this[this.tableStoragesNR.PublicPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicUserNull() {
                return this.IsNull(this.tableStoragesNR.PublicUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicUserNull() {
                this[this.tableStoragesNR.PublicUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublicPasswordNull() {
                return this.IsNull(this.tableStoragesNR.PublicPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublicPasswordNull() {
                this[this.tableStoragesNR.PublicPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableStoragesNR.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableStoragesNR.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableStoragesNR.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableStoragesNR.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableStoragesNR.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableStoragesNR.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableStoragesNR.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableStoragesNR.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRow[] GetLibStoragesNRRows() {
                if ((this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_STORAGES"] == null)) {
                    return new LibStoragesNRRow[0];
                }
                else {
                    return ((LibStoragesNRRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LIBSTORA_REFERENCE_STORAGES"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StorageZoneInfoNRRow : global::System.Data.DataRow {
            
            private StorageZoneInfoNRDataTable tableStorageZoneInfoNR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StorageZoneInfoNRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStorageZoneInfoNR = ((StorageZoneInfoNRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    return ((global::System.Guid)(this[this.tableStorageZoneInfoNR.StorageIDColumn]));
                }
                set {
                    this[this.tableStorageZoneInfoNR.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StorageZone {
                get {
                    return ((int)(this[this.tableStorageZoneInfoNR.StorageZoneColumn]));
                }
                set {
                    this[this.tableStorageZoneInfoNR.StorageZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPServer1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPServer1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPServer1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPath1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPath1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPath1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPUser1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPUser1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPUser1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPassword1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPassword1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPassword1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort1 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FTPPort1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPort1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPort1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Server1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Server1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Server1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Share1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Share1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Share1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath1 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FSPath1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPath1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPath1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort1 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FSPort1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPort1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPort1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPServer2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPServer2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPServer2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPath2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPath2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPath2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPUser2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPUser2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPUser2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPassword2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPassword2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPassword2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort2 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FTPPort2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPort2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPort2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Server2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Server2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Server2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Share2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Share2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Share2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath2 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FSPath2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPath2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPath2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort2 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FSPort2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPort2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPort2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPServer3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPServer3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPServer3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPath3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPath3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPath3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPUser3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPUser3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPUser3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPassword3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPassword3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPassword3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort3 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FTPPort3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPort3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPort3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Server3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Server3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Server3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Share3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Share3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Share3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath3 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FSPath3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPath3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPath3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort3 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FSPort3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPort3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPort3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPServer4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPServer4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPServer4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPServer4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPath4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPath4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPath4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPath4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPUser4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPUser4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPUser4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPUser4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTPPassword4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FTPPassword4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPassword4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPassword4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FTPPort4 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FTPPort4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FTPPort4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FTPPort4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Server4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Server4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Server4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Server4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Share4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.Share4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Share4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.Share4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSPath4 {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.FSPath4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPath4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPath4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FSPort4 {
                get {
                    try {
                        return ((int)(this[this.tableStorageZoneInfoNR.FSPort4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“FSPort4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.FSPort4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableStorageZoneInfoNR.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StorageZoneInfoNR”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStorageZoneInfoNR.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPServer1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer1Null() {
                this[this.tableStorageZoneInfoNR.FTPServer1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPath1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath1Null() {
                this[this.tableStorageZoneInfoNR.FTPPath1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPUser1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser1Null() {
                this[this.tableStorageZoneInfoNR.FTPUser1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPassword1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword1Null() {
                this[this.tableStorageZoneInfoNR.FTPPassword1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPort1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort1Null() {
                this[this.tableStorageZoneInfoNR.FTPPort1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Server1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer1Null() {
                this[this.tableStorageZoneInfoNR.Server1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Share1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare1Null() {
                this[this.tableStorageZoneInfoNR.Share1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPath1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath1Null() {
                this[this.tableStorageZoneInfoNR.FSPath1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort1Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPort1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort1Null() {
                this[this.tableStorageZoneInfoNR.FSPort1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPServer2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer2Null() {
                this[this.tableStorageZoneInfoNR.FTPServer2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPath2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath2Null() {
                this[this.tableStorageZoneInfoNR.FTPPath2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPUser2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser2Null() {
                this[this.tableStorageZoneInfoNR.FTPUser2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPassword2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword2Null() {
                this[this.tableStorageZoneInfoNR.FTPPassword2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPort2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort2Null() {
                this[this.tableStorageZoneInfoNR.FTPPort2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Server2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer2Null() {
                this[this.tableStorageZoneInfoNR.Server2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Share2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare2Null() {
                this[this.tableStorageZoneInfoNR.Share2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPath2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath2Null() {
                this[this.tableStorageZoneInfoNR.FSPath2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort2Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPort2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort2Null() {
                this[this.tableStorageZoneInfoNR.FSPort2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPServer3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer3Null() {
                this[this.tableStorageZoneInfoNR.FTPServer3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPath3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath3Null() {
                this[this.tableStorageZoneInfoNR.FTPPath3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPUser3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser3Null() {
                this[this.tableStorageZoneInfoNR.FTPUser3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPassword3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword3Null() {
                this[this.tableStorageZoneInfoNR.FTPPassword3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPort3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort3Null() {
                this[this.tableStorageZoneInfoNR.FTPPort3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Server3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer3Null() {
                this[this.tableStorageZoneInfoNR.Server3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Share3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare3Null() {
                this[this.tableStorageZoneInfoNR.Share3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPath3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath3Null() {
                this[this.tableStorageZoneInfoNR.FSPath3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort3Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPort3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort3Null() {
                this[this.tableStorageZoneInfoNR.FSPort3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPServer4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPServer4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPServer4Null() {
                this[this.tableStorageZoneInfoNR.FTPServer4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPath4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPath4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPath4Null() {
                this[this.tableStorageZoneInfoNR.FTPPath4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPUser4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPUser4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPUser4Null() {
                this[this.tableStorageZoneInfoNR.FTPUser4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPassword4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPassword4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPassword4Null() {
                this[this.tableStorageZoneInfoNR.FTPPassword4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTPPort4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FTPPort4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTPPort4Null() {
                this[this.tableStorageZoneInfoNR.FTPPort4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServer4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Server4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServer4Null() {
                this[this.tableStorageZoneInfoNR.Server4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShare4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.Share4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShare4Null() {
                this[this.tableStorageZoneInfoNR.Share4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPath4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPath4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPath4Null() {
                this[this.tableStorageZoneInfoNR.FSPath4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSPort4Null() {
                return this.IsNull(this.tableStorageZoneInfoNR.FSPort4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSPort4Null() {
                this[this.tableStorageZoneInfoNR.FSPort4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableStorageZoneInfoNR.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableStorageZoneInfoNR.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LibStoragesNRRow : global::System.Data.DataRow {
            
            private LibStoragesNRDataTable tableLibStoragesNR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LibStoragesNRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLibStoragesNR = ((LibStoragesNRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LibStoragesID {
                get {
                    return ((global::System.Guid)(this[this.tableLibStoragesNR.LibStoragesIDColumn]));
                }
                set {
                    this[this.tableLibStoragesNR.LibStoragesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProgramLibID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLibStoragesNR.ProgramLibIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStoragesNR”中列“ProgramLibID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStoragesNR.ProgramLibIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StorageID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLibStoragesNR.StorageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStoragesNR”中列“StorageID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStoragesNR.StorageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StorageIndex {
                get {
                    try {
                        return ((int)(this[this.tableLibStoragesNR.StorageIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStoragesNR”中列“StorageIndex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStoragesNR.StorageIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableLibStoragesNR.MaxSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStoragesNR”中列“MaxSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStoragesNR.MaxSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableLibStoragesNR.FreeSpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStoragesNR”中列“FreeSpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStoragesNR.FreeSpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableLibStoragesNR.MaxSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStoragesNR”中列“MaxSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStoragesNR.MaxSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeSpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableLibStoragesNR.FreeSpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LibStoragesNR”中列“FreeSpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLibStoragesNR.FreeSpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRow ProgramLibNRRow {
                get {
                    return ((ProgramLibNRRow)(this.GetParentRow(this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_PROGRAML"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_PROGRAML"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRRow StoragesNRRow {
                get {
                    return ((StoragesNRRow)(this.GetParentRow(this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_STORAGES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LIBSTORA_REFERENCE_STORAGES"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgramLibIDNull() {
                return this.IsNull(this.tableLibStoragesNR.ProgramLibIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgramLibIDNull() {
                this[this.tableLibStoragesNR.ProgramLibIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageIDNull() {
                return this.IsNull(this.tableLibStoragesNR.StorageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageIDNull() {
                this[this.tableLibStoragesNR.StorageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorageIndexNull() {
                return this.IsNull(this.tableLibStoragesNR.StorageIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorageIndexNull() {
                this[this.tableLibStoragesNR.StorageIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceMBNull() {
                return this.IsNull(this.tableLibStoragesNR.MaxSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceMBNull() {
                this[this.tableLibStoragesNR.MaxSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceMBNull() {
                return this.IsNull(this.tableLibStoragesNR.FreeSpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceMBNull() {
                this[this.tableLibStoragesNR.FreeSpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxSpaceHourNull() {
                return this.IsNull(this.tableLibStoragesNR.MaxSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxSpaceHourNull() {
                this[this.tableLibStoragesNR.MaxSpaceHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeSpaceHourNull() {
                return this.IsNull(this.tableLibStoragesNR.FreeSpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeSpaceHourNull() {
                this[this.tableLibStoragesNR.FreeSpaceHourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UserSpaceInObjNRRow : global::System.Data.DataRow {
            
            private UserSpaceInObjNRDataTable tableUserSpaceInObjNR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UserSpaceInObjNRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUserSpaceInObjNR = ((UserSpaceInObjNRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ObjectID {
                get {
                    return ((global::System.Guid)(this[this.tableUserSpaceInObjNR.ObjectIDColumn]));
                }
                set {
                    this[this.tableUserSpaceInObjNR.ObjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid UserID {
                get {
                    return ((global::System.Guid)(this[this.tableUserSpaceInObjNR.UserIDColumn]));
                }
                set {
                    this[this.tableUserSpaceInObjNR.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpaceMB {
                get {
                    try {
                        return ((int)(this[this.tableUserSpaceInObjNR.SpaceMBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“UserSpaceInObjNR”中列“SpaceMB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUserSpaceInObjNR.SpaceMBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpaceHour {
                get {
                    try {
                        return ((int)(this[this.tableUserSpaceInObjNR.SpaceHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“UserSpaceInObjNR”中列“SpaceHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUserSpaceInObjNR.SpaceHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpaceMBNull() {
                return this.IsNull(this.tableUserSpaceInObjNR.SpaceMBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpaceMBNull() {
                this[this.tableUserSpaceInObjNR.SpaceMBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpaceHourNull() {
                return this.IsNull(this.tableUserSpaceInObjNR.SpaceHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpaceHourNull() {
                this[this.tableUserSpaceInObjNR.SpaceHourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProgramLibNRRowChangeEvent : global::System.EventArgs {
            
            private ProgramLibNRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRowChangeEvent(ProgramLibNRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramLibNRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FolderNRRowChangeEvent : global::System.EventArgs {
            
            private FolderNRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRRowChangeEvent(FolderNRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FolderNRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StoragesNRRowChangeEvent : global::System.EventArgs {
            
            private StoragesNRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRRowChangeEvent(StoragesNRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoragesNRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StorageZoneInfoNRRowChangeEvent : global::System.EventArgs {
            
            private StorageZoneInfoNRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoNRRowChangeEvent(StorageZoneInfoNRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StorageZoneInfoNRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LibStoragesNRRowChangeEvent : global::System.EventArgs {
            
            private LibStoragesNRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRowChangeEvent(LibStoragesNRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LibStoragesNRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UserSpaceInObjNRRowChangeEvent : global::System.EventArgs {
            
            private UserSpaceInObjNRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjNRRowChangeEvent(UserSpaceInObjNRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UserSpaceInObjNRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InheritGGKCompletedEventHandler(object sender, InheritGGKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InheritGGKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InheritGGKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTemplateBlocksCompletedEventHandler(object sender, GetTemplateBlocksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateBlocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateBlocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.TempleteBlocksDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.TempleteBlocksDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTemplateBlockByBlockIDCompletedEventHandler(object sender, GetTemplateBlockByBlockIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateBlockByBlockIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateBlockByBlockIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.TempleteBlocksDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.TempleteBlocksDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateTemplateBlockPassSuperviseLevelCompletedEventHandler(object sender, UpdateTemplateBlockPassSuperviseLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplateBlockPassSuperviseLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplateBlockPassSuperviseLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateTemplateBlockTypeCompletedEventHandler(object sender, UpdateTemplateBlockTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplateBlockTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplateBlockTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateTemplateBlockItemsCountCompletedEventHandler(object sender, UpdateTemplateBlockItemsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplateBlockItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplateBlockItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateTemplateBlockPriorityCompletedEventHandler(object sender, UpdateTemplateBlockPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplateBlockPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplateBlockPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorages4BCCompletedEventHandler(object sender, GetStorages4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorages4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorages4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.StoragesDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.StoragesDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStoragesByWorkgroupIDCategoryTypeCompletedEventHandler(object sender, GetStoragesByWorkgroupIDCategoryTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoragesByWorkgroupIDCategoryTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoragesByWorkgroupIDCategoryTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.StoragesDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.StoragesDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageName4BCCompletedEventHandler(object sender, IsExistStorageName4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageName4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageName4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStorage4BCCompletedEventHandler(object sender, CreateStorage4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStorage4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStorage4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorage4BCCompletedEventHandler(object sender, UpdateStorage4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorage4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorage4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorage4BCCompletedEventHandler(object sender, DeleteStorage4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorage4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorage4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CopyStorage4BCCompletedEventHandler(object sender, CopyStorage4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyStorage4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyStorage4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CopyStorageAndStorageZone4BCCompletedEventHandler(object sender, CopyStorageAndStorageZone4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyStorageAndStorageZone4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyStorageAndStorageZone4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUsersSpaceByWorkgroupIDCompletedEventHandler(object sender, GetUsersSpaceByWorkgroupIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersSpaceByWorkgroupIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersSpaceByWorkgroupIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZonesCompletedEventHandler(object sender, GetStorageZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.StorageZoneDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.StorageZoneDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZoneByStorageIDCompletedEventHandler(object sender, GetStorageZoneByStorageIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZoneByStorageIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZoneByStorageIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.StorageZoneDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.StorageZoneDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingStorageZone4BCCompletedEventHandler(object sender, IsUsingStorageZone4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingStorageZone4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingStorageZone4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageID4BCCompletedEventHandler(object sender, IsExistStorageID4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageID4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageID4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZoneNumber4BCCompletedEventHandler(object sender, GetStorageZoneNumber4BCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZoneNumber4BCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZoneNumber4BCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStorageZoneCompletedEventHandler(object sender, CreateStorageZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStorageZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStorageZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorageZoneCompletedEventHandler(object sender, UpdateStorageZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorageZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorageZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorageZoneCompletedEventHandler(object sender, DeleteStorageZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorageZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorageZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CopyStorageZoneCompletedEventHandler(object sender, CopyStorageZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyStorageZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyStorageZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkgroupsCompletedEventHandler(object sender, GetWorkgroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkgroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkgroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.WorkgroupsDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.WorkgroupsDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkgroupsByStationIDCompletedEventHandler(object sender, GetWorkgroupsByStationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkgroupsByStationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkgroupsByStationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.WorkgroupsDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.WorkgroupsDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UsedSapceByWorkgroupIDInUserSpaceCompletedEventHandler(object sender, UsedSapceByWorkgroupIDInUserSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsedSapceByWorkgroupIDInUserSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsedSapceByWorkgroupIDInUserSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistWorkgroupsInStoragesCompletedEventHandler(object sender, IsExistWorkgroupsInStoragesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistWorkgroupsInStoragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistWorkgroupsInStoragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistWorkgroupsInWorkgroup2StationsCompletedEventHandler(object sender, IsExistWorkgroupsInWorkgroup2StationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistWorkgroupsInWorkgroup2StationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistWorkgroupsInWorkgroup2StationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistWorkgroupsWorkgroupNameCompletedEventHandler(object sender, IsExistWorkgroupsWorkgroupNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistWorkgroupsWorkgroupNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistWorkgroupsWorkgroupNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistWorkgroupsWorkgroupNumberCompletedEventHandler(object sender, IsExistWorkgroupsWorkgroupNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistWorkgroupsWorkgroupNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistWorkgroupsWorkgroupNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateWorkgroupCompletedEventHandler(object sender, CreateWorkgroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWorkgroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWorkgroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateWorkgroupCompletedEventHandler(object sender, UpdateWorkgroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkgroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkgroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteWorkgroupCompletedEventHandler(object sender, DeleteWorkgroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWorkgroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWorkgroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CopyWorkgroupCompletedEventHandler(object sender, CopyWorkgroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyWorkgroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyWorkgroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStationsCompletedEventHandler(object sender, GetStationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.StationsDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.StationsDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStationsInItemDictCompletedEventHandler(object sender, IsExistStationsInItemDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStationsInItemDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStationsInItemDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStationsInWorkgroup2StationsCompletedEventHandler(object sender, IsExistStationsInWorkgroup2StationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStationsInWorkgroup2StationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStationsInWorkgroup2StationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStationsStationNameCompletedEventHandler(object sender, IsExistStationsStationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStationsStationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStationsStationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStationsStationNumberCompletedEventHandler(object sender, IsExistStationsStationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStationsStationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStationsStationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStationCompletedEventHandler(object sender, CreateStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStationCompletedEventHandler(object sender, UpdateStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStationCompletedEventHandler(object sender, DeleteStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStationsIsBatchBroadcastCompletedEventHandler(object sender, UpdateStationsIsBatchBroadcastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStationsIsBatchBroadcastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStationsIsBatchBroadcastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CopyStationCompletedEventHandler(object sender, CopyStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateAir5DBCompletedEventHandler(object sender, CreateAir5DBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAir5DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAir5DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DropAir5DBCompletedEventHandler(object sender, DropAir5DBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DropAir5DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DropAir5DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkgroup2StationsCompletedEventHandler(object sender, GetWorkgroup2StationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkgroup2StationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkgroup2StationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.Workgroup2StationsDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.Workgroup2StationsDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkgroup2StationModelByStationIDCompletedEventHandler(object sender, GetWorkgroup2StationModelByStationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkgroup2StationModelByStationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkgroup2StationModelByStationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Workgroup2StationModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Workgroup2StationModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistWorkgroup2StationsCompletedEventHandler(object sender, IsExistWorkgroup2StationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistWorkgroup2StationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistWorkgroup2StationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateWorkgroup2StationsCompletedEventHandler(object sender, CreateWorkgroup2StationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWorkgroup2StationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWorkgroup2StationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteWorkgroup2StationsCompletedEventHandler(object sender, DeleteWorkgroup2StationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWorkgroup2StationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWorkgroup2StationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateWorkgroup2StationsInStationCompletedEventHandler(object sender, UpdateWorkgroup2StationsInStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkgroup2StationsInStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkgroup2StationsInStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CopyWorkgroup2StationsCompletedEventHandler(object sender, CopyWorkgroup2StationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyWorkgroup2StationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyWorkgroup2StationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateContributorCompletedEventHandler(object sender, UpdateContributorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContributorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContributorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteContributorCompletedEventHandler(object sender, DeleteContributorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContributorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContributorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMasterClassCompletedEventHandler(object sender, GetMasterClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.MasterClassDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.MasterClassDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMasterClassByFormatCompletedEventHandler(object sender, GetMasterClassByFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterClassByFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterClassByFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.MasterClassDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.MasterClassDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMasterClassByConditionCompletedEventHandler(object sender, GetMasterClassByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterClassByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterClassByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.MasterClassDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.MasterClassDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistMasterClassNameByMAFCompletedEventHandler(object sender, IsExistMasterClassNameByMAFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistMasterClassNameByMAFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistMasterClassNameByMAFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingMasterClassInMediaAssetCompletedEventHandler(object sender, IsUsingMasterClassInMediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingMasterClassInMediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingMasterClassInMediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsParentMasterClassCompletedEventHandler(object sender, IsParentMasterClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsParentMasterClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsParentMasterClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateMasterClassCompletedEventHandler(object sender, CreateMasterClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMasterClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMasterClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateMasterClassCompletedEventHandler(object sender, UpdateMasterClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMasterClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMasterClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteMasterClassCompletedEventHandler(object sender, DeleteMasterClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMasterClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMasterClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMediaAssetFormatCompletedEventHandler(object sender, GetMediaAssetFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaAssetFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaAssetFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.MediaAssetFormatDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.MediaAssetFormatDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMediaAssetFormatByFormatCompletedEventHandler(object sender, GetMediaAssetFormatByFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaAssetFormatByFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaAssetFormatByFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.MediaAssetFormatDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.MediaAssetFormatDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistWorkflowNameByTypeCompletedEventHandler(object sender, IsExistWorkflowNameByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistWorkflowNameByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistWorkflowNameByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingWorkflowInMediaAssetCompletedEventHandler(object sender, IsUsingWorkflowInMediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingWorkflowInMediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingWorkflowInMediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkflowBySystemIDTypeCompletedEventHandler(object sender, GetWorkflowBySystemIDTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkflowBySystemIDTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkflowBySystemIDTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.IWFM_WorkflowDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.IWFM_WorkflowDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIWFM_WorkflowsByObjectTypeCompletedEventHandler(object sender, GetIWFM_WorkflowsByObjectTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIWFM_WorkflowsByObjectTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIWFM_WorkflowsByObjectTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.IWFM_WorkflowDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.IWFM_WorkflowDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateWorkflowCompletedEventHandler(object sender, CreateWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateWorkflowCompletedEventHandler(object sender, UpdateWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteWorkflowCompletedEventHandler(object sender, DeleteWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistNodeNameByWorkflowCompletedEventHandler(object sender, IsExistNodeNameByWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistNodeNameByWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistNodeNameByWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetNodeByWorkflowIDCompletedEventHandler(object sender, GetNodeByWorkflowIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeByWorkflowIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeByWorkflowIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.IWFM_NodeDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.IWFM_NodeDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateWFNodesCompletedEventHandler(object sender, UpdateWFNodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWFNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWFNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIWFM_NodeSignerByNodeIDCompletedEventHandler(object sender, GetIWFM_NodeSignerByNodeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIWFM_NodeSignerByNodeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIWFM_NodeSignerByNodeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.IWFM_NodeSignerDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.IWFM_NodeSignerDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateIWFM_NodeSignerCompletedEventHandler(object sender, UpdateIWFM_NodeSignerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIWFM_NodeSignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIWFM_NodeSignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateIWF_TypeMatchWFCompletedEventHandler(object sender, UpdateIWF_TypeMatchWFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIWF_TypeMatchWFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIWF_TypeMatchWFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRelator2ContributorsCompletedEventHandler(object sender, GetRelator2ContributorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelator2ContributorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelator2ContributorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.Relator2ContributorDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.Relator2ContributorDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateRelator2ContributorCompletedEventHandler(object sender, UpdateRelator2ContributorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRelator2ContributorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRelator2ContributorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramInFolderCompletedEventHandler(object sender, IsExistProgramInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramMBInFolder4MTCompletedEventHandler(object sender, GetProgramMBInFolder4MTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramMBInFolder4MTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramMBInFolder4MTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramMBInFolder4ProjectCompletedEventHandler(object sender, GetProgramMBInFolder4ProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramMBInFolder4ProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramMBInFolder4ProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsCompletedEventHandler(object sender, GetProgramLibsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibs1CompletedEventHandler(object sender, GetProgramLibs1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibs1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibs1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int nextProgramLibNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibByIDCompletedEventHandler(object sender, GetProgramLibByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByProgramLibTypeCompletedEventHandler(object sender, GetProgramLibsByProgramLibTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByProgramLibTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByProgramLibTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByUserIDProgramLibTypeCompletedEventHandler(object sender, GetProgramLibsByUserIDProgramLibTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByUserIDProgramLibTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByUserIDProgramLibTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByUserIDCompletedEventHandler(object sender, GetProgramLibsByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByUserID1CompletedEventHandler(object sender, GetProgramLibsByUserID1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByUserID1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByUserID1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int nextProgramLibNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByStorageIDCompletedEventHandler(object sender, GetProgramLibsByStorageIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByStorageIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByStorageIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.ProgramLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.ProgramLibDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibNameCompletedEventHandler(object sender, IsExistProgramLibNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibTypeEqual1CompletedEventHandler(object sender, IsExistProgramLibTypeEqual1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibTypeEqual1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibTypeEqual1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibShortNameCompletedEventHandler(object sender, IsExistProgramLibShortNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibShortNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibShortNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibNumberCompletedEventHandler(object sender, IsExistProgramLibNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateProgramLibCompletedEventHandler(object sender, CreateProgramLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProgramLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProgramLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgramLibCompletedEventHandler(object sender, UpdateProgramLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgramLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgramLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProgramLibCompletedEventHandler(object sender, DeleteProgramLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLib2StoragesCompletedEventHandler(object sender, GetProgramLib2StoragesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLib2StoragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLib2StoragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProgramLib2StorageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProgramLib2StorageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgramLib2StoragesCompletedEventHandler(object sender, UpdateProgramLib2StoragesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgramLib2StoragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgramLib2StoragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProgramLib2StoragesCompletedEventHandler(object sender, DeleteProgramLib2StoragesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramLib2StoragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramLib2StoragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramIDInLibStoragesCompletedEventHandler(object sender, IsExistProgramIDInLibStoragesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramIDInLibStoragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramIDInLibStoragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageIDInLibStoragesCompletedEventHandler(object sender, IsExistStorageIDInLibStoragesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageIDInLibStoragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageIDInLibStoragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersCompletedEventHandler(object sender, GetFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.FolderDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.FolderDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderByFolderIDCompletedEventHandler(object sender, GetFolderByFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderByFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderByFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.FolderDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.FolderDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersByUserIDCompletedEventHandler(object sender, GetFoldersByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.FolderDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.FolderDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersByProgramLibIDCompletedEventHandler(object sender, GetFoldersByProgramLibIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByProgramLibIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByProgramLibIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.FolderDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.FolderDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersByProgramLibIDUserIDCompletedEventHandler(object sender, GetFoldersByProgramLibIDUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByProgramLibIDUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByProgramLibIDUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.FolderDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.FolderDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibIDInfolderCompletedEventHandler(object sender, IsExistProgramLibIDInfolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibIDInfolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibIDInfolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistFolderNameCompletedEventHandler(object sender, IsExistFolderNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistFolderNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistFolderNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistFolderShortNameCompletedEventHandler(object sender, IsExistFolderShortNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistFolderShortNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistFolderShortNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistFolderTelephoneNumberCompletedEventHandler(object sender, IsExistFolderTelephoneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistFolderTelephoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistFolderTelephoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateFolderCompletedEventHandler(object sender, CreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateFolderCompletedEventHandler(object sender, UpdateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteFolderCompletedEventHandler(object sender, DeleteFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorages4XStudioCompletedEventHandler(object sender, GetStorages4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorages4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorages4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.StoragesDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.StoragesDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStoragesByProgramLibID4XStudioCompletedEventHandler(object sender, GetStoragesByProgramLibID4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoragesByProgramLibID4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoragesByProgramLibID4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.StoragesDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.StoragesDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageName4XStudioCompletedEventHandler(object sender, IsExistStorageName4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageName4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageName4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStorage4XStudioCompletedEventHandler(object sender, CreateStorage4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStorage4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStorage4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorage4XStudioCompletedEventHandler(object sender, UpdateStorage4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorage4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorage4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorage4XStudioCompletedEventHandler(object sender, DeleteStorage4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorage4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorage4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZoneInfoByStorageIDCompletedEventHandler(object sender, GetStorageZoneInfoByStorageIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZoneInfoByStorageIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZoneInfoByStorageIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XStudioDS.StorageZoneInfoDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XStudioDS.StorageZoneInfoDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingStorageZone4XStudioCompletedEventHandler(object sender, IsUsingStorageZone4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingStorageZone4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingStorageZone4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageID4XStudioCompletedEventHandler(object sender, IsExistStorageID4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageID4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageID4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZoneNumber4XStudioCompletedEventHandler(object sender, GetStorageZoneNumber4XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZoneNumber4XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZoneNumber4XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStorageZoneInfoCompletedEventHandler(object sender, CreateStorageZoneInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStorageZoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStorageZoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorageZoneInfoCompletedEventHandler(object sender, UpdateStorageZoneInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorageZoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorageZoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorageZoneInfoCompletedEventHandler(object sender, DeleteStorageZoneInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorageZoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorageZoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserSpaceInObjByObjectIDCompletedEventHandler(object sender, GetUserSpaceInObjByObjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSpaceInObjByObjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSpaceInObjByObjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserSpaceModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSpaceModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserSpaceInObjByProgramLibIDCompletedEventHandler(object sender, GetUserSpaceInObjByProgramLibIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSpaceInObjByProgramLibIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSpaceInObjByProgramLibIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveUserSpaceInObjCompletedEventHandler(object sender, RemoveUserSpaceInObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserSpaceInObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserSpaceInObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddUserSpaceInObjCompletedEventHandler(object sender, AddUserSpaceInObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserSpaceInObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserSpaceInObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCategoriesCompletedEventHandler(object sender, GetCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.CategoriesDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.CategoriesDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCategoryByCategoryIDCompletedEventHandler(object sender, GetCategoryByCategoryIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryByCategoryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryByCategoryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BroadcastDS.CategoriesDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BroadcastDS.CategoriesDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCategoryPassSuperviseLevelCompletedEventHandler(object sender, UpdateCategoryPassSuperviseLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryPassSuperviseLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryPassSuperviseLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCategoryCopyToMamCompletedEventHandler(object sender, UpdateCategoryCopyToMamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryCopyToMamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryCopyToMamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCategoryPriorityCompletedEventHandler(object sender, UpdateCategoryPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsNRCompletedEventHandler(object sender, GetProgramLibsNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsNR1CompletedEventHandler(object sender, GetProgramLibsNR1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsNR1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsNR1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int nextProgramLibNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibByIDNRCompletedEventHandler(object sender, GetProgramLibByIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibByIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibByIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByProgramLibTypeNRCompletedEventHandler(object sender, GetProgramLibsByProgramLibTypeNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByProgramLibTypeNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByProgramLibTypeNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByUserIDProgramLibTypeNRCompletedEventHandler(object sender, GetProgramLibsByUserIDProgramLibTypeNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByUserIDProgramLibTypeNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByUserIDProgramLibTypeNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByUserIDNRCompletedEventHandler(object sender, GetProgramLibsByUserIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByUserIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByUserIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByUserIDNR1CompletedEventHandler(object sender, GetProgramLibsByUserIDNR1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByUserIDNR1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByUserIDNR1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int nextProgramLibNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibsByStorageIDNRCompletedEventHandler(object sender, GetProgramLibsByStorageIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibsByStorageIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibsByStorageIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.ProgramLibNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.ProgramLibNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibNameNRCompletedEventHandler(object sender, IsExistProgramLibNameNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibNameNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibNameNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibTypeEqualNR1CompletedEventHandler(object sender, IsExistProgramLibTypeEqualNR1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibTypeEqualNR1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibTypeEqualNR1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibShortNameNRCompletedEventHandler(object sender, IsExistProgramLibShortNameNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibShortNameNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibShortNameNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibNumberNRCompletedEventHandler(object sender, IsExistProgramLibNumberNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibNumberNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibNumberNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateProgramLibNRCompletedEventHandler(object sender, CreateProgramLibNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProgramLibNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProgramLibNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgramLibNRCompletedEventHandler(object sender, UpdateProgramLibNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgramLibNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgramLibNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProgramLibNRCompletedEventHandler(object sender, DeleteProgramLibNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramLibNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramLibNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLib2StoragesNRCompletedEventHandler(object sender, GetProgramLib2StoragesNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLib2StoragesNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLib2StoragesNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProgramLib2StorageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProgramLib2StorageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgramLib2StoragesNRCompletedEventHandler(object sender, UpdateProgramLib2StoragesNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgramLib2StoragesNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgramLib2StoragesNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProgramLib2StoragesNRCompletedEventHandler(object sender, DeleteProgramLib2StoragesNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramLib2StoragesNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramLib2StoragesNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramIDInLibStoragesNRCompletedEventHandler(object sender, IsExistProgramIDInLibStoragesNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramIDInLibStoragesNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramIDInLibStoragesNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageIDInLibStoragesNRCompletedEventHandler(object sender, IsExistStorageIDInLibStoragesNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageIDInLibStoragesNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageIDInLibStoragesNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersNRCompletedEventHandler(object sender, GetFoldersNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.FolderNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.FolderNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderByFolderIDNRCompletedEventHandler(object sender, GetFolderByFolderIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderByFolderIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderByFolderIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.FolderNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.FolderNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersByUserIDNRCompletedEventHandler(object sender, GetFoldersByUserIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByUserIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByUserIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.FolderNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.FolderNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersByProgramLibIDNRCompletedEventHandler(object sender, GetFoldersByProgramLibIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByProgramLibIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByProgramLibIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.FolderNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.FolderNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFoldersByProgramLibIDUserIDNRCompletedEventHandler(object sender, GetFoldersByProgramLibIDUserIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByProgramLibIDUserIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByProgramLibIDUserIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.FolderNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.FolderNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistProgramLibIDInfolderNRCompletedEventHandler(object sender, IsExistProgramLibIDInfolderNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistProgramLibIDInfolderNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistProgramLibIDInfolderNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistFolderNameNRCompletedEventHandler(object sender, IsExistFolderNameNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistFolderNameNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistFolderNameNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistFolderShortNameNRCompletedEventHandler(object sender, IsExistFolderShortNameNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistFolderShortNameNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistFolderShortNameNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistFolderTelephoneNumberNRCompletedEventHandler(object sender, IsExistFolderTelephoneNumberNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistFolderTelephoneNumberNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistFolderTelephoneNumberNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateFolderNRCompletedEventHandler(object sender, CreateFolderNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFolderNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFolderNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateFolderNRCompletedEventHandler(object sender, UpdateFolderNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteFolderNRCompletedEventHandler(object sender, DeleteFolderNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFolderNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFolderNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorages4NewsRoomCompletedEventHandler(object sender, GetStorages4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorages4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorages4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.StoragesNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.StoragesNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStoragesByProgramLibID4NewsRoomCompletedEventHandler(object sender, GetStoragesByProgramLibID4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoragesByProgramLibID4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoragesByProgramLibID4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.StoragesNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.StoragesNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageName4NewsRoomCompletedEventHandler(object sender, IsExistStorageName4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageName4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageName4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStorage4NewsRoomCompletedEventHandler(object sender, CreateStorage4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStorage4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStorage4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorage4NewsRoomCompletedEventHandler(object sender, UpdateStorage4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorage4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorage4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorage4NewsRoomCompletedEventHandler(object sender, DeleteStorage4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorage4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorage4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZoneInfoByStorageIDNRCompletedEventHandler(object sender, GetStorageZoneInfoByStorageIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZoneInfoByStorageIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZoneInfoByStorageIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsRoomDS.StorageZoneInfoNRDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsRoomDS.StorageZoneInfoNRDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingStorageZone4NewsRoomCompletedEventHandler(object sender, IsUsingStorageZone4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingStorageZone4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingStorageZone4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageID4NewsRoomCompletedEventHandler(object sender, IsExistStorageID4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageID4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageID4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZoneNumber4NewsRoomCompletedEventHandler(object sender, GetStorageZoneNumber4NewsRoomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZoneNumber4NewsRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZoneNumber4NewsRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStorageZoneInfoNRCompletedEventHandler(object sender, CreateStorageZoneInfoNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStorageZoneInfoNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStorageZoneInfoNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorageZoneInfoNRCompletedEventHandler(object sender, UpdateStorageZoneInfoNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorageZoneInfoNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorageZoneInfoNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorageZoneInfoNRCompletedEventHandler(object sender, DeleteStorageZoneInfoNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorageZoneInfoNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorageZoneInfoNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserSpaceInObjByObjectIDNRCompletedEventHandler(object sender, GetUserSpaceInObjByObjectIDNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSpaceInObjByObjectIDNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSpaceInObjByObjectIDNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserSpaceModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSpaceModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveUserSpaceInObjNRCompletedEventHandler(object sender, RemoveUserSpaceInObjNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserSpaceInObjNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserSpaceInObjNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddUserSpaceInObjNRCompletedEventHandler(object sender, AddUserSpaceInObjNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserSpaceInObjNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserSpaceInObjNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HelloWordCompletedEventHandler(object sender, HelloWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLogicLibsCompletedEventHandler(object sender, GetLogicLibsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogicLibsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogicLibsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.LogicLibDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.LogicLibDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistLogicLibNameCompletedEventHandler(object sender, IsExistLogicLibNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistLogicLibNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistLogicLibNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingLogicLibInMediaAssetCompletedEventHandler(object sender, IsUsingLogicLibInMediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingLogicLibInMediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingLogicLibInMediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingLogicLibInMediaAssetSeriesCompletedEventHandler(object sender, IsUsingLogicLibInMediaAssetSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingLogicLibInMediaAssetSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingLogicLibInMediaAssetSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistLogicLib2StorageByLogicLibIDCompletedEventHandler(object sender, IsExistLogicLib2StorageByLogicLibIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistLogicLib2StorageByLogicLibIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistLogicLib2StorageByLogicLibIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateLogicLibCompletedEventHandler(object sender, CreateLogicLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLogicLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLogicLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateLogicLibCompletedEventHandler(object sender, UpdateLogicLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLogicLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLogicLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteLogicLibCompletedEventHandler(object sender, DeleteLogicLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogicLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogicLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLogicLib2StoragesByLogicLibIDCompletedEventHandler(object sender, GetLogicLib2StoragesByLogicLibIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogicLib2StoragesByLogicLibIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogicLib2StoragesByLogicLibIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogicLib2StorageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogicLib2StorageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateLogicLib2StorageCompletedEventHandler(object sender, UpdateLogicLib2StorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLogicLib2StorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLogicLib2StorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorages4MediaAssetCompletedEventHandler(object sender, GetStorages4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorages4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorages4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.StorageDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.StorageDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistStorageName4MediaAssetCompletedEventHandler(object sender, IsExistStorageName4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistStorageName4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistStorageName4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingStorageInL2SCompletedEventHandler(object sender, IsUsingStorageInL2SCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingStorageInL2SCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingStorageInL2SCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingStorageInMediaAssetCompletedEventHandler(object sender, IsUsingStorageInMediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingStorageInMediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingStorageInMediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateStorage4MediaAssetCompletedEventHandler(object sender, CreateStorage4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStorage4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStorage4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorage4MediaAssetCompletedEventHandler(object sender, UpdateStorage4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorage4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorage4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorage4MediaAssetCompletedEventHandler(object sender, DeleteStorage4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorage4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorage4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageZoneInfoByStorageID4MediaAssetCompletedEventHandler(object sender, GetStorageZoneInfoByStorageID4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageZoneInfoByStorageID4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageZoneInfoByStorageID4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaAssetDS.StorageZoneInfoDataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaAssetDS.StorageZoneInfoDataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateStorageZoneInfo4MediaAssetCompletedEventHandler(object sender, UpdateStorageZoneInfo4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStorageZoneInfo4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStorageZoneInfo4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteStorageZoneInfo4MediaAssetCompletedEventHandler(object sender, DeleteStorageZoneInfo4MediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStorageZoneInfo4MediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStorageZoneInfo4MediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDictionaryByTableNameCompletedEventHandler(object sender, GetDictionaryByTableNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictionaryByTableNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDictionaryByTableNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DictionaryCommonModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DictionaryCommonModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDictionaryDistinctByTableNameCompletedEventHandler(object sender, GetDictionaryDistinctByTableNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictionaryDistinctByTableNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDictionaryDistinctByTableNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDictionaryDistinctByTableNameMCCompletedEventHandler(object sender, GetDictionaryDistinctByTableNameMCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictionaryDistinctByTableNameMCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDictionaryDistinctByTableNameMCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DictionaryIDNameModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DictionaryIDNameModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDictionaryByConditionCompletedEventHandler(object sender, GetDictionaryByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictionaryByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDictionaryByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DictionaryCommonModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DictionaryCommonModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingDictionaryInMediaAsset2DictionaryCompletedEventHandler(object sender, IsUsingDictionaryInMediaAsset2DictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingDictionaryInMediaAsset2DictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingDictionaryInMediaAsset2DictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistDictionaryNameCompletedEventHandler(object sender, IsExistDictionaryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistDictionaryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistDictionaryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsParentDictionaryCompletedEventHandler(object sender, IsParentDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsParentDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsParentDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateDictionaryCompletedEventHandler(object sender, CreateDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateDictionaryCompletedEventHandler(object sender, UpdateDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteDictionaryCompletedEventHandler(object sender, DeleteDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetConfigDictionaryCompletedEventHandler(object sender, GetConfigDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetContributorByConditionCompletedEventHandler(object sender, GetContributorByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContributorByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContributorByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DictContributorModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DictContributorModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetContributorByRelatorIDCompletedEventHandler(object sender, GetContributorByRelatorIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContributorByRelatorIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContributorByRelatorIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DictContributorModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DictContributorModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUsingDictionaryInContributorCompletedEventHandler(object sender, IsUsingDictionaryInContributorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingDictionaryInContributorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingDictionaryInContributorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateContributorCompletedEventHandler(object sender, CreateContributorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContributorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContributorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591