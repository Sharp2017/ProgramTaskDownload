//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WinProgramTaskActuatorDevice.XStudioWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://www.infomedia.com.cn/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsCanManageFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanCheckOtherTeleInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanOverwriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanDeleteProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanVsRECYCLEOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanUnlockUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsHasRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanVsAudioCheckSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanVsCrossSuperviceParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecycleSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCrossSuperviceParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecycleSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrossSuperviceParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgram2RecycleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnLockProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeletedProgramSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnDeleteProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaddingDeleteProgramByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaddingDeleteProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveProgram2RecycleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderUserdSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFolderUserdSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserUserdSpaceByProgramLibIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUSerSpaceByObjIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserSpaceInObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderSharedUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanBatch2OnairOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanUseRightManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanSendProgram2MeidiaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecycleSaveDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPandingDeleteProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRecycleBinFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeleteAllAMTSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllAMTSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMyAMTSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderMaxSuperlevelByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAudioCheckSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAudioCheckLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAudioCheckSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAudioCheckLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSearchPatternOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResource2UsersListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPandingDeleteMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPandingDeleteProgramCountByFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFolderNameExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserLoginExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLoginExCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserLoginExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeleteProgramByFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProgram1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramByFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsItemByObjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsAudioByNewsIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsLibInfoByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsFolderTableByNewsLibIDAndUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNewsAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNewsItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramOnairApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MaketProgramOnairApplyDoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoProgramOnairApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistWorkTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkTaskCountByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkTasksByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetWorkTaskProgramIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWorkTaskCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkTaskByWorkItemIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgram2WorkTaskStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsUseFileStreamerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsRecoverPlaylistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMonitorIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSwitchAudioEditorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSwitchMediaAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultMessageSaveDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultATMSSaveDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultProjectSaveDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShowProgramSuperviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgram2JCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJetsenWebServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJetsenWebServiceByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJetsenUumServiceWebServiceByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlowWebServiceByZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCfgServiceByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetM2ServiceByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetM3SchedulerWebServiceZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetM3ServiceByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmbServieByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmbServieBakByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetS1ServieByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetS1ServieBakByZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonProgramLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibInfoByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramLibInfoByUserIDByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrustFolderByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderTableByProgramLibIDAndUserIDAndAccessTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRightChannelTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFolderRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFolderRightsTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderTableByProgramLibIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderTableByFolderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTagsExsitOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginWithOutPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderInfoByFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeleTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUser2TeleTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderIntrustOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoggerFolderByProgramLibNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeleFolderByNameOrTeleNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageByFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageByNewsFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProgramLibNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProgramLibName2XStudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProgram2MediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProgram2Media_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgram2Media_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgram2MediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageInfoByProgramLibNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckProgramIDExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyWorkAreaByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByFullNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderFreeSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderFreeSpaceByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordAndUserSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAnotherDBUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessage2GroupUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSystemMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnReadMessageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadSystemMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemMessageBySenderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnReadSystemMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserCanSendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserCanSendGroupMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanUnlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback freeSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback importOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTargetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback callbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleLoginStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsUseJetsenUumServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsPassword2MD5OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectSaveTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsICCardLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsShowWorkTaskMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOtherBroadcastSystemServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkTaskCallBackServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSharedStorageFTPPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecycleManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnairRecycleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealDeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorPassCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicX1ZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicOnairZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJingle2MediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserSingleLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLockedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLockedUser1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserLoginInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserLoginEXOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserLoginInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItem2MeidaStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageByStorageIDAndZoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserICNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBaseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXStudioBaseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFolderRightInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyFolderInfoByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyFolderInfoByUserID1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckProgramTitleExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderInfoByFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuperviseProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramSuperviseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetISchedulerWebPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSpaceAlarmValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCanUploadWaveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetISchedulerWebPath1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetISchedulerWebPath2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetISchedulerWebPath21OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusinessServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusinessService1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogService1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogServiceByZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnairServiceByZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnairServiceBakByZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramByProgramIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgramPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgramExportedStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaddingExportProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyNetRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectByFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupervisedProgramByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPandingSuperviseProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramByObjectID1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramByObjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramByAdvanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageInfoByProgramLibIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxProgramCountByFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertToProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgramOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::WinProgramTaskActuatorDevice.Properties.Settings.Default.WinProgramTaskActuatorDevice_XStudioWebService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsCanManageFolderCompletedEventHandler IsCanManageFolderCompleted;
        
        /// <remarks/>
        public event IsCanCheckOtherTeleInFolderCompletedEventHandler IsCanCheckOtherTeleInFolderCompleted;
        
        /// <remarks/>
        public event IsCanOverwriteCompletedEventHandler IsCanOverwriteCompleted;
        
        /// <remarks/>
        public event IsCanDeleteProgramCompletedEventHandler IsCanDeleteProgramCompleted;
        
        /// <remarks/>
        public event IsCanVsRECYCLECompletedEventHandler IsCanVsRECYCLECompleted;
        
        /// <remarks/>
        public event IsCanUnlockUserCompletedEventHandler IsCanUnlockUserCompleted;
        
        /// <remarks/>
        public event IsHasRightsCompletedEventHandler IsHasRightsCompleted;
        
        /// <remarks/>
        public event IsCanVsAudioCheckSettingsCompletedEventHandler IsCanVsAudioCheckSettingsCompleted;
        
        /// <remarks/>
        public event IsCanVsCrossSuperviceParametersCompletedEventHandler IsCanVsCrossSuperviceParametersCompleted;
        
        /// <remarks/>
        public event UpdateRecycleSpaceCompletedEventHandler UpdateRecycleSpaceCompleted;
        
        /// <remarks/>
        public event UpdateCrossSuperviceParametersCompletedEventHandler UpdateCrossSuperviceParametersCompleted;
        
        /// <remarks/>
        public event GetRecycleSpaceCompletedEventHandler GetRecycleSpaceCompleted;
        
        /// <remarks/>
        public event GetCrossSuperviceParametersCompletedEventHandler GetCrossSuperviceParametersCompleted;
        
        /// <remarks/>
        public event DeleteProgram2RecycleCompletedEventHandler DeleteProgram2RecycleCompleted;
        
        /// <remarks/>
        public event UnLockProgramCompletedEventHandler UnLockProgramCompleted;
        
        /// <remarks/>
        public event GetDeletedProgramSpaceCompletedEventHandler GetDeletedProgramSpaceCompleted;
        
        /// <remarks/>
        public event UnDeleteProgramCompletedEventHandler UnDeleteProgramCompleted;
        
        /// <remarks/>
        public event GetPaddingDeleteProgramByUserIDCompletedEventHandler GetPaddingDeleteProgramByUserIDCompleted;
        
        /// <remarks/>
        public event GetPaddingDeleteProgramCompletedEventHandler GetPaddingDeleteProgramCompleted;
        
        /// <remarks/>
        public event MoveProgram2RecycleCompletedEventHandler MoveProgram2RecycleCompleted;
        
        /// <remarks/>
        public event GetFolderUserdSpaceCompletedEventHandler GetFolderUserdSpaceCompleted;
        
        /// <remarks/>
        public event GetUserFolderUserdSpaceCompletedEventHandler GetUserFolderUserdSpaceCompleted;
        
        /// <remarks/>
        public event GetUserUserdSpaceByProgramLibIDCompletedEventHandler GetUserUserdSpaceByProgramLibIDCompleted;
        
        /// <remarks/>
        public event GetUSerSpaceByObjIDCompletedEventHandler GetUSerSpaceByObjIDCompleted;
        
        /// <remarks/>
        public event UpdateUserSpaceInObjCompletedEventHandler UpdateUserSpaceInObjCompleted;
        
        /// <remarks/>
        public event GetFolderSharedUsersCompletedEventHandler GetFolderSharedUsersCompleted;
        
        /// <remarks/>
        public event IsCanBatch2OnairCompletedEventHandler IsCanBatch2OnairCompleted;
        
        /// <remarks/>
        public event IsCanUseRightManagerCompletedEventHandler IsCanUseRightManagerCompleted;
        
        /// <remarks/>
        public event IsCanSendProgram2MeidiaCompletedEventHandler IsCanSendProgram2MeidiaCompleted;
        
        /// <remarks/>
        public event GetRecycleSaveDayCompletedEventHandler GetRecycleSaveDayCompleted;
        
        /// <remarks/>
        public event GetPandingDeleteProgramCompletedEventHandler GetPandingDeleteProgramCompleted;
        
        /// <remarks/>
        public event GetUserGroupByUserIDCompletedEventHandler GetUserGroupByUserIDCompleted;
        
        /// <remarks/>
        public event IsRecycleBinFullCompletedEventHandler IsRecycleBinFullCompleted;
        
        /// <remarks/>
        public event GetDeleteAllAMTSCompletedEventHandler GetDeleteAllAMTSCompleted;
        
        /// <remarks/>
        public event DeleteAllAMTSCompletedEventHandler DeleteAllAMTSCompleted;
        
        /// <remarks/>
        public event DeleteMyAMTSCompletedEventHandler DeleteMyAMTSCompleted;
        
        /// <remarks/>
        public event GetFolderMaxSuperlevelByUserIDCompletedEventHandler GetFolderMaxSuperlevelByUserIDCompleted;
        
        /// <remarks/>
        public event GetAudioCheckSettingsCompletedEventHandler GetAudioCheckSettingsCompleted;
        
        /// <remarks/>
        public event GetAudioCheckLogsCompletedEventHandler GetAudioCheckLogsCompleted;
        
        /// <remarks/>
        public event SetAudioCheckSettingsCompletedEventHandler SetAudioCheckSettingsCompleted;
        
        /// <remarks/>
        public event SetAudioCheckLogCompletedEventHandler SetAudioCheckLogCompleted;
        
        /// <remarks/>
        public event GetSearchPatternCompletedEventHandler GetSearchPatternCompleted;
        
        /// <remarks/>
        public event GetResource2UsersListCompletedEventHandler GetResource2UsersListCompleted;
        
        /// <remarks/>
        public event GetPandingDeleteMessagesCompletedEventHandler GetPandingDeleteMessagesCompleted;
        
        /// <remarks/>
        public event DeleteMessagesCompletedEventHandler DeleteMessagesCompleted;
        
        /// <remarks/>
        public event GetPandingDeleteProgramCountByFolderCompletedEventHandler GetPandingDeleteProgramCountByFolderCompleted;
        
        /// <remarks/>
        public event CheckFolderNameExistCompletedEventHandler CheckFolderNameExistCompleted;
        
        /// <remarks/>
        public event DeleteUserLoginExCompletedEventHandler DeleteUserLoginExCompleted;
        
        /// <remarks/>
        public event GetUserLoginExCountCompletedEventHandler GetUserLoginExCountCompleted;
        
        /// <remarks/>
        public event SetUserLoginExCompletedEventHandler SetUserLoginExCompleted;
        
        /// <remarks/>
        public event GetDeleteProgramByFolderCompletedEventHandler GetDeleteProgramByFolderCompleted;
        
        /// <remarks/>
        public event GetAllProgramCompletedEventHandler GetAllProgramCompleted;
        
        /// <remarks/>
        public event GetAllProgram1CompletedEventHandler GetAllProgram1Completed;
        
        /// <remarks/>
        public event GetAdProgramCompletedEventHandler GetAdProgramCompleted;
        
        /// <remarks/>
        public event DeleteProgramByFolderCompletedEventHandler DeleteProgramByFolderCompleted;
        
        /// <remarks/>
        public event GetNewsItemByObjectIDCompletedEventHandler GetNewsItemByObjectIDCompleted;
        
        /// <remarks/>
        public event GetNewsAudioByNewsIDCompletedEventHandler GetNewsAudioByNewsIDCompleted;
        
        /// <remarks/>
        public event GetNewsLibInfoByUserIDCompletedEventHandler GetNewsLibInfoByUserIDCompleted;
        
        /// <remarks/>
        public event GetNewsFolderTableByNewsLibIDAndUserIDCompletedEventHandler GetNewsFolderTableByNewsLibIDAndUserIDCompleted;
        
        /// <remarks/>
        public event UpdateNewsAudioCompletedEventHandler UpdateNewsAudioCompleted;
        
        /// <remarks/>
        public event UpdateNewsItemCompletedEventHandler UpdateNewsItemCompleted;
        
        /// <remarks/>
        public event GetProgramOnairApplyCompletedEventHandler GetProgramOnairApplyCompleted;
        
        /// <remarks/>
        public event MaketProgramOnairApplyDoneCompletedEventHandler MaketProgramOnairApplyDoneCompleted;
        
        /// <remarks/>
        public event InsertIntoProgramOnairApplyCompletedEventHandler InsertIntoProgramOnairApplyCompleted;
        
        /// <remarks/>
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        /// <remarks/>
        public event IsExistWorkTaskCompletedEventHandler IsExistWorkTaskCompleted;
        
        /// <remarks/>
        public event GetWorkTaskCountByStatusCompletedEventHandler GetWorkTaskCountByStatusCompleted;
        
        /// <remarks/>
        public event GetWorkTasksByStatusCompletedEventHandler GetWorkTasksByStatusCompleted;
        
        /// <remarks/>
        public event UpdateTaskStatusCompletedEventHandler UpdateTaskStatusCompleted;
        
        /// <remarks/>
        public event SetWorkTaskProgramIDCompletedEventHandler SetWorkTaskProgramIDCompleted;
        
        /// <remarks/>
        public event SendWorkTaskCompleteCompletedEventHandler SendWorkTaskCompleteCompleted;
        
        /// <remarks/>
        public event GetWorkTaskByWorkItemIdCompletedEventHandler GetWorkTaskByWorkItemIdCompleted;
        
        /// <remarks/>
        public event GetProgram2WorkTaskStatusCompletedEventHandler GetProgram2WorkTaskStatusCompleted;
        
        /// <remarks/>
        public event GetIsUseFileStreamerCompletedEventHandler GetIsUseFileStreamerCompleted;
        
        /// <remarks/>
        public event GetIsRecoverPlaylistCompletedEventHandler GetIsRecoverPlaylistCompleted;
        
        /// <remarks/>
        public event GetMonitorIPCompletedEventHandler GetMonitorIPCompleted;
        
        /// <remarks/>
        public event GetSwitchAudioEditorCompletedEventHandler GetSwitchAudioEditorCompleted;
        
        /// <remarks/>
        public event GetSwitchMediaAssetCompletedEventHandler GetSwitchMediaAssetCompleted;
        
        /// <remarks/>
        public event GetDefaultMessageSaveDaysCompletedEventHandler GetDefaultMessageSaveDaysCompleted;
        
        /// <remarks/>
        public event GetDefaultATMSSaveDaysCompletedEventHandler GetDefaultATMSSaveDaysCompleted;
        
        /// <remarks/>
        public event GetDefaultProjectSaveDaysCompletedEventHandler GetDefaultProjectSaveDaysCompleted;
        
        /// <remarks/>
        public event GetShowProgramSuperviceCompletedEventHandler GetShowProgramSuperviceCompleted;
        
        /// <remarks/>
        public event UpdateProgram2JCCompletedEventHandler UpdateProgram2JCCompleted;
        
        /// <remarks/>
        public event GetJetsenWebServiceCompletedEventHandler GetJetsenWebServiceCompleted;
        
        /// <remarks/>
        public event GetJetsenWebServiceByZoneIDCompletedEventHandler GetJetsenWebServiceByZoneIDCompleted;
        
        /// <remarks/>
        public event GetJetsenUumServiceWebServiceByZoneIDCompletedEventHandler GetJetsenUumServiceWebServiceByZoneIDCompleted;
        
        /// <remarks/>
        public event GetFlowWebServiceByZoneCompletedEventHandler GetFlowWebServiceByZoneCompleted;
        
        /// <remarks/>
        public event GetCfgServiceByZoneIDCompletedEventHandler GetCfgServiceByZoneIDCompleted;
        
        /// <remarks/>
        public event GetM2ServiceByZoneIDCompletedEventHandler GetM2ServiceByZoneIDCompleted;
        
        /// <remarks/>
        public event GetM3SchedulerWebServiceZoneIDCompletedEventHandler GetM3SchedulerWebServiceZoneIDCompleted;
        
        /// <remarks/>
        public event GetM3ServiceByZoneIDCompletedEventHandler GetM3ServiceByZoneIDCompleted;
        
        /// <remarks/>
        public event GetEmbServieByZoneIDCompletedEventHandler GetEmbServieByZoneIDCompleted;
        
        /// <remarks/>
        public event GetEmbServieBakByZoneIDCompletedEventHandler GetEmbServieBakByZoneIDCompleted;
        
        /// <remarks/>
        public event GetS1ServieByZoneIDCompletedEventHandler GetS1ServieByZoneIDCompleted;
        
        /// <remarks/>
        public event GetS1ServieBakByZoneIDCompletedEventHandler GetS1ServieBakByZoneIDCompleted;
        
        /// <remarks/>
        public event GetPersonProgramLibCompletedEventHandler GetPersonProgramLibCompleted;
        
        /// <remarks/>
        public event GetProgramLibInfoByUserIDCompletedEventHandler GetProgramLibInfoByUserIDCompleted;
        
        /// <remarks/>
        public event GetProgramLibInfoByUserIDByTypeCompletedEventHandler GetProgramLibInfoByUserIDByTypeCompleted;
        
        /// <remarks/>
        public event GetTrustFolderByUserIDCompletedEventHandler GetTrustFolderByUserIDCompleted;
        
        /// <remarks/>
        public event GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompletedEventHandler GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompleted;
        
        /// <remarks/>
        public event GetRightChannelTableCompletedEventHandler GetRightChannelTableCompleted;
        
        /// <remarks/>
        public event GetProgramInFolderCompletedEventHandler GetProgramInFolderCompleted;
        
        /// <remarks/>
        public event GetFolderInFolderCompletedEventHandler GetFolderInFolderCompleted;
        
        /// <remarks/>
        public event DeleteFolderCompletedEventHandler DeleteFolderCompleted;
        
        /// <remarks/>
        public event GetUserFolderRightsCompletedEventHandler GetUserFolderRightsCompleted;
        
        /// <remarks/>
        public event GetUserFolderRightsTableCompletedEventHandler GetUserFolderRightsTableCompleted;
        
        /// <remarks/>
        public event GetFolderTableByProgramLibIDCompletedEventHandler GetFolderTableByProgramLibIDCompleted;
        
        /// <remarks/>
        public event GetFolderTableByFolderNameCompletedEventHandler GetFolderTableByFolderNameCompleted;
        
        /// <remarks/>
        public event CheckTagsExsitCompletedEventHandler CheckTagsExsitCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event UserLoginWithOutPasswordCompletedEventHandler UserLoginWithOutPasswordCompleted;
        
        /// <remarks/>
        public event UpdateFolderInfoByFolderIDCompletedEventHandler UpdateFolderInfoByFolderIDCompleted;
        
        /// <remarks/>
        public event UpdateFolderInfoCompletedEventHandler UpdateFolderInfoCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetUsersTableCompletedEventHandler GetUsersTableCompleted;
        
        /// <remarks/>
        public event GetTeleTableCompletedEventHandler GetTeleTableCompleted;
        
        /// <remarks/>
        public event GetUser2TeleTableCompletedEventHandler GetUser2TeleTableCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event UpdateFolderIntrustCompletedEventHandler UpdateFolderIntrustCompleted;
        
        /// <remarks/>
        public event GetLoggerFolderByProgramLibNameCompletedEventHandler GetLoggerFolderByProgramLibNameCompleted;
        
        /// <remarks/>
        public event GetTeleFolderByNameOrTeleNumberCompletedEventHandler GetTeleFolderByNameOrTeleNumberCompleted;
        
        /// <remarks/>
        public event GetStorageByFolderIDCompletedEventHandler GetStorageByFolderIDCompleted;
        
        /// <remarks/>
        public event GetStorageByNewsFolderIDCompletedEventHandler GetStorageByNewsFolderIDCompleted;
        
        /// <remarks/>
        public event GetFolderPathCompletedEventHandler GetFolderPathCompleted;
        
        /// <remarks/>
        public event GetAllProgramLibNameCompletedEventHandler GetAllProgramLibNameCompleted;
        
        /// <remarks/>
        public event GetAllProgramLibName2XStudioCompletedEventHandler GetAllProgramLibName2XStudioCompleted;
        
        /// <remarks/>
        public event InsertProgram2MediaCompletedEventHandler InsertProgram2MediaCompleted;
        
        /// <remarks/>
        public event InsertProgram2Media_NewCompletedEventHandler InsertProgram2Media_NewCompleted;
        
        /// <remarks/>
        public event UpdateProgram2Media_NEWCompletedEventHandler UpdateProgram2Media_NEWCompleted;
        
        /// <remarks/>
        public event UpdateProgram2MediaCompletedEventHandler UpdateProgram2MediaCompleted;
        
        /// <remarks/>
        public event GetStorageInfoByProgramLibNumberCompletedEventHandler GetStorageInfoByProgramLibNumberCompleted;
        
        /// <remarks/>
        public event CheckProgramIDExistCompletedEventHandler CheckProgramIDExistCompleted;
        
        /// <remarks/>
        public event GetMyWorkAreaByUserIDCompletedEventHandler GetMyWorkAreaByUserIDCompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserIDCompletedEventHandler GetUserInfoByUserIDCompleted;
        
        /// <remarks/>
        public event GetUserInfoByFullNameCompletedEventHandler GetUserInfoByFullNameCompleted;
        
        /// <remarks/>
        public event GetFolderFreeSpaceCompletedEventHandler GetFolderFreeSpaceCompleted;
        
        /// <remarks/>
        public event GetFolderFreeSpaceByTypeCompletedEventHandler GetFolderFreeSpaceByTypeCompleted;
        
        /// <remarks/>
        public event GetUserSettingsCompletedEventHandler GetUserSettingsCompleted;
        
        /// <remarks/>
        public event UpdateUserPasswordAndUserSettingsCompletedEventHandler UpdateUserPasswordAndUserSettingsCompleted;
        
        /// <remarks/>
        public event UpdateAnotherDBUserPasswordCompletedEventHandler UpdateAnotherDBUserPasswordCompleted;
        
        /// <remarks/>
        public event SendMessage2GroupUserCompletedEventHandler SendMessage2GroupUserCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event SendSystemMessageCompletedEventHandler SendSystemMessageCompleted;
        
        /// <remarks/>
        public event GetUnReadMessageCountCompletedEventHandler GetUnReadMessageCountCompleted;
        
        /// <remarks/>
        public event ReadMessageCompletedEventHandler ReadMessageCompleted;
        
        /// <remarks/>
        public event ReadSystemMessageCompletedEventHandler ReadSystemMessageCompleted;
        
        /// <remarks/>
        public event GetSystemMessageBySenderIDCompletedEventHandler GetSystemMessageBySenderIDCompleted;
        
        /// <remarks/>
        public event GetUnReadSystemMessageCompletedEventHandler GetUnReadSystemMessageCompleted;
        
        /// <remarks/>
        public event DeleteMessageCompletedEventHandler DeleteMessageCompleted;
        
        /// <remarks/>
        public event IsUserCanSendMessageCompletedEventHandler IsUserCanSendMessageCompleted;
        
        /// <remarks/>
        public event IsUserCanSendGroupMessageCompletedEventHandler IsUserCanSendGroupMessageCompleted;
        
        /// <remarks/>
        public event IsCanUnlockCompletedEventHandler IsCanUnlockCompleted;
        
        /// <remarks/>
        public event GetWebVersionCompletedEventHandler GetWebVersionCompleted;
        
        /// <remarks/>
        public event freeSpaceCompletedEventHandler freeSpaceCompleted;
        
        /// <remarks/>
        public event importCompletedEventHandler importCompleted;
        
        /// <remarks/>
        public event queryValidateCompletedEventHandler queryValidateCompleted;
        
        /// <remarks/>
        public event getTargetInfoCompletedEventHandler getTargetInfoCompleted;
        
        /// <remarks/>
        public event callbackCompletedEventHandler callbackCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetSingleLoginStatusCompletedEventHandler GetSingleLoginStatusCompleted;
        
        /// <remarks/>
        public event GetIsUseJetsenUumServiceCompletedEventHandler GetIsUseJetsenUumServiceCompleted;
        
        /// <remarks/>
        public event GetIsPassword2MD5CompletedEventHandler GetIsPassword2MD5Completed;
        
        /// <remarks/>
        public event GetPasswordLevelCompletedEventHandler GetPasswordLevelCompleted;
        
        /// <remarks/>
        public event GetTreeStatusCompletedEventHandler GetTreeStatusCompleted;
        
        /// <remarks/>
        public event GetTreeDisplayCompletedEventHandler GetTreeDisplayCompleted;
        
        /// <remarks/>
        public event GetProjectSaveTypeCompletedEventHandler GetProjectSaveTypeCompleted;
        
        /// <remarks/>
        public event GetIsICCardLoginCompletedEventHandler GetIsICCardLoginCompleted;
        
        /// <remarks/>
        public event GetIsShowWorkTaskMessageCompletedEventHandler GetIsShowWorkTaskMessageCompleted;
        
        /// <remarks/>
        public event GetOtherBroadcastSystemServiceCompletedEventHandler GetOtherBroadcastSystemServiceCompleted;
        
        /// <remarks/>
        public event GetWorkTaskCallBackServiceCompletedEventHandler GetWorkTaskCallBackServiceCompleted;
        
        /// <remarks/>
        public event GetSharedStorageFTPPathCompletedEventHandler GetSharedStorageFTPPathCompleted;
        
        /// <remarks/>
        public event GetRecycleManagerCompletedEventHandler GetRecycleManagerCompleted;
        
        /// <remarks/>
        public event GetOnairRecycleCompletedEventHandler GetOnairRecycleCompleted;
        
        /// <remarks/>
        public event GetRealDeleteFileCompletedEventHandler GetRealDeleteFileCompleted;
        
        /// <remarks/>
        public event GetErrorPassCountCompletedEventHandler GetErrorPassCountCompleted;
        
        /// <remarks/>
        public event GetBasicX1ZoneCompletedEventHandler GetBasicX1ZoneCompleted;
        
        /// <remarks/>
        public event GetBasicOnairZoneCompletedEventHandler GetBasicOnairZoneCompleted;
        
        /// <remarks/>
        public event GetJingle2MediaCompletedEventHandler GetJingle2MediaCompleted;
        
        /// <remarks/>
        public event IsUserSingleLoginCompletedEventHandler IsUserSingleLoginCompleted;
        
        /// <remarks/>
        public event GetLockedUserCompletedEventHandler GetLockedUserCompleted;
        
        /// <remarks/>
        public event GetLockedUser1CompletedEventHandler GetLockedUser1Completed;
        
        /// <remarks/>
        public event DeleteUserLoginInfoCompletedEventHandler DeleteUserLoginInfoCompleted;
        
        /// <remarks/>
        public event DeleteUserLoginEXCompletedEventHandler DeleteUserLoginEXCompleted;
        
        /// <remarks/>
        public event UpdateUserLoginInfoCompletedEventHandler UpdateUserLoginInfoCompleted;
        
        /// <remarks/>
        public event GetItem2MeidaStatusCompletedEventHandler GetItem2MeidaStatusCompleted;
        
        /// <remarks/>
        public event GetServerDateCompletedEventHandler GetServerDateCompleted;
        
        /// <remarks/>
        public event GetStorageByStorageIDAndZoneIDCompletedEventHandler GetStorageByStorageIDAndZoneIDCompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserLoginNameCompletedEventHandler GetUserInfoByUserLoginNameCompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserICNumberCompletedEventHandler GetUserInfoByUserICNumberCompleted;
        
        /// <remarks/>
        public event GetUserBaseInfoCompletedEventHandler GetUserBaseInfoCompleted;
        
        /// <remarks/>
        public event GetXStudioBaseInfoCompletedEventHandler GetXStudioBaseInfoCompleted;
        
        /// <remarks/>
        public event GetUserFolderRightInfoCompletedEventHandler GetUserFolderRightInfoCompleted;
        
        /// <remarks/>
        public event GetMyFolderInfoByUserIDCompletedEventHandler GetMyFolderInfoByUserIDCompleted;
        
        /// <remarks/>
        public event GetMyFolderInfoByUserID1CompletedEventHandler GetMyFolderInfoByUserID1Completed;
        
        /// <remarks/>
        public event CheckProgramTitleExistCompletedEventHandler CheckProgramTitleExistCompleted;
        
        /// <remarks/>
        public event GetFolderInfoByFolderIDCompletedEventHandler GetFolderInfoByFolderIDCompleted;
        
        /// <remarks/>
        public event GetFolderInfoByIDCompletedEventHandler GetFolderInfoByIDCompleted;
        
        /// <remarks/>
        public event SuperviseProgramCompletedEventHandler SuperviseProgramCompleted;
        
        /// <remarks/>
        public event GetProgramSuperviseStatusCompletedEventHandler GetProgramSuperviseStatusCompleted;
        
        /// <remarks/>
        public event GetISchedulerWebPathCompletedEventHandler GetISchedulerWebPathCompleted;
        
        /// <remarks/>
        public event GetUserSpaceAlarmValueCompletedEventHandler GetUserSpaceAlarmValueCompleted;
        
        /// <remarks/>
        public event IsCanUploadWaveFileCompletedEventHandler IsCanUploadWaveFileCompleted;
        
        /// <remarks/>
        public event GetISchedulerWebPath1CompletedEventHandler GetISchedulerWebPath1Completed;
        
        /// <remarks/>
        public event GetISchedulerWebPath2CompletedEventHandler GetISchedulerWebPath2Completed;
        
        /// <remarks/>
        public event GetISchedulerWebPath21CompletedEventHandler GetISchedulerWebPath21Completed;
        
        /// <remarks/>
        public event GetLogServiceCompletedEventHandler GetLogServiceCompleted;
        
        /// <remarks/>
        public event GetBusinessServiceCompletedEventHandler GetBusinessServiceCompleted;
        
        /// <remarks/>
        public event GetRadioNameCompletedEventHandler GetRadioNameCompleted;
        
        /// <remarks/>
        public event GetBusinessService1CompletedEventHandler GetBusinessService1Completed;
        
        /// <remarks/>
        public event GetLogService1CompletedEventHandler GetLogService1Completed;
        
        /// <remarks/>
        public event GetLogServiceByZoneCompletedEventHandler GetLogServiceByZoneCompleted;
        
        /// <remarks/>
        public event GetOnairServiceByZoneCompletedEventHandler GetOnairServiceByZoneCompleted;
        
        /// <remarks/>
        public event GetOnairServiceBakByZoneCompletedEventHandler GetOnairServiceBakByZoneCompleted;
        
        /// <remarks/>
        public event DeleteProgramByProgramIDCompletedEventHandler DeleteProgramByProgramIDCompleted;
        
        /// <remarks/>
        public event UpdateProgramPropertyCompletedEventHandler UpdateProgramPropertyCompleted;
        
        /// <remarks/>
        public event UpdateProgramExportedStatusCompletedEventHandler UpdateProgramExportedStatusCompleted;
        
        /// <remarks/>
        public event GetPaddingExportProgramCompletedEventHandler GetPaddingExportProgramCompleted;
        
        /// <remarks/>
        public event GetMyMessageCompletedEventHandler GetMyMessageCompleted;
        
        /// <remarks/>
        public event GetMyNetRecordCompletedEventHandler GetMyNetRecordCompleted;
        
        /// <remarks/>
        public event GetProjectByFolderIDCompletedEventHandler GetProjectByFolderIDCompleted;
        
        /// <remarks/>
        public event GetSupervisedProgramByUserIDCompletedEventHandler GetSupervisedProgramByUserIDCompleted;
        
        /// <remarks/>
        public event GetMyTaskCompletedEventHandler GetMyTaskCompleted;
        
        /// <remarks/>
        public event GetPandingSuperviseProgramCompletedEventHandler GetPandingSuperviseProgramCompleted;
        
        /// <remarks/>
        public event GetProgramByObjectID1CompletedEventHandler GetProgramByObjectID1Completed;
        
        /// <remarks/>
        public event GetProgramByObjectIDCompletedEventHandler GetProgramByObjectIDCompleted;
        
        /// <remarks/>
        public event GetProgramByAdvanceCompletedEventHandler GetProgramByAdvanceCompleted;
        
        /// <remarks/>
        public event GetStorageInfoByProgramLibIDCompletedEventHandler GetStorageInfoByProgramLibIDCompleted;
        
        /// <remarks/>
        public event GetMaxProgramCountByFolderIDCompletedEventHandler GetMaxProgramCountByFolderIDCompleted;
        
        /// <remarks/>
        public event InsertToProgramCompletedEventHandler InsertToProgramCompleted;
        
        /// <remarks/>
        public event UpdateProgramCompletedEventHandler UpdateProgramCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanManageFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanManageFolder(string userid, string folderID) {
            object[] results = this.Invoke("IsCanManageFolder", new object[] {
                        userid,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanManageFolderAsync(string userid, string folderID) {
            this.IsCanManageFolderAsync(userid, folderID, null);
        }
        
        /// <remarks/>
        public void IsCanManageFolderAsync(string userid, string folderID, object userState) {
            if ((this.IsCanManageFolderOperationCompleted == null)) {
                this.IsCanManageFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanManageFolderOperationCompleted);
            }
            this.InvokeAsync("IsCanManageFolder", new object[] {
                        userid,
                        folderID}, this.IsCanManageFolderOperationCompleted, userState);
        }
        
        private void OnIsCanManageFolderOperationCompleted(object arg) {
            if ((this.IsCanManageFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanManageFolderCompleted(this, new IsCanManageFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanCheckOtherTeleInFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanCheckOtherTeleInFolder(string userid, string folderID) {
            object[] results = this.Invoke("IsCanCheckOtherTeleInFolder", new object[] {
                        userid,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanCheckOtherTeleInFolderAsync(string userid, string folderID) {
            this.IsCanCheckOtherTeleInFolderAsync(userid, folderID, null);
        }
        
        /// <remarks/>
        public void IsCanCheckOtherTeleInFolderAsync(string userid, string folderID, object userState) {
            if ((this.IsCanCheckOtherTeleInFolderOperationCompleted == null)) {
                this.IsCanCheckOtherTeleInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanCheckOtherTeleInFolderOperationCompleted);
            }
            this.InvokeAsync("IsCanCheckOtherTeleInFolder", new object[] {
                        userid,
                        folderID}, this.IsCanCheckOtherTeleInFolderOperationCompleted, userState);
        }
        
        private void OnIsCanCheckOtherTeleInFolderOperationCompleted(object arg) {
            if ((this.IsCanCheckOtherTeleInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanCheckOtherTeleInFolderCompleted(this, new IsCanCheckOtherTeleInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanOverwrite", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanOverwrite(string userid, string folderID) {
            object[] results = this.Invoke("IsCanOverwrite", new object[] {
                        userid,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanOverwriteAsync(string userid, string folderID) {
            this.IsCanOverwriteAsync(userid, folderID, null);
        }
        
        /// <remarks/>
        public void IsCanOverwriteAsync(string userid, string folderID, object userState) {
            if ((this.IsCanOverwriteOperationCompleted == null)) {
                this.IsCanOverwriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanOverwriteOperationCompleted);
            }
            this.InvokeAsync("IsCanOverwrite", new object[] {
                        userid,
                        folderID}, this.IsCanOverwriteOperationCompleted, userState);
        }
        
        private void OnIsCanOverwriteOperationCompleted(object arg) {
            if ((this.IsCanOverwriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanOverwriteCompleted(this, new IsCanOverwriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanDeleteProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanDeleteProgram(string userid, string folderID) {
            object[] results = this.Invoke("IsCanDeleteProgram", new object[] {
                        userid,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanDeleteProgramAsync(string userid, string folderID) {
            this.IsCanDeleteProgramAsync(userid, folderID, null);
        }
        
        /// <remarks/>
        public void IsCanDeleteProgramAsync(string userid, string folderID, object userState) {
            if ((this.IsCanDeleteProgramOperationCompleted == null)) {
                this.IsCanDeleteProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanDeleteProgramOperationCompleted);
            }
            this.InvokeAsync("IsCanDeleteProgram", new object[] {
                        userid,
                        folderID}, this.IsCanDeleteProgramOperationCompleted, userState);
        }
        
        private void OnIsCanDeleteProgramOperationCompleted(object arg) {
            if ((this.IsCanDeleteProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanDeleteProgramCompleted(this, new IsCanDeleteProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanVsRECYCLE", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanVsRECYCLE(string userid) {
            object[] results = this.Invoke("IsCanVsRECYCLE", new object[] {
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanVsRECYCLEAsync(string userid) {
            this.IsCanVsRECYCLEAsync(userid, null);
        }
        
        /// <remarks/>
        public void IsCanVsRECYCLEAsync(string userid, object userState) {
            if ((this.IsCanVsRECYCLEOperationCompleted == null)) {
                this.IsCanVsRECYCLEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanVsRECYCLEOperationCompleted);
            }
            this.InvokeAsync("IsCanVsRECYCLE", new object[] {
                        userid}, this.IsCanVsRECYCLEOperationCompleted, userState);
        }
        
        private void OnIsCanVsRECYCLEOperationCompleted(object arg) {
            if ((this.IsCanVsRECYCLECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanVsRECYCLECompleted(this, new IsCanVsRECYCLECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanUnlockUser", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanUnlockUser(string userid) {
            object[] results = this.Invoke("IsCanUnlockUser", new object[] {
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanUnlockUserAsync(string userid) {
            this.IsCanUnlockUserAsync(userid, null);
        }
        
        /// <remarks/>
        public void IsCanUnlockUserAsync(string userid, object userState) {
            if ((this.IsCanUnlockUserOperationCompleted == null)) {
                this.IsCanUnlockUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanUnlockUserOperationCompleted);
            }
            this.InvokeAsync("IsCanUnlockUser", new object[] {
                        userid}, this.IsCanUnlockUserOperationCompleted, userState);
        }
        
        private void OnIsCanUnlockUserOperationCompleted(object arg) {
            if ((this.IsCanUnlockUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanUnlockUserCompleted(this, new IsCanUnlockUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsHasRights", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsHasRights(string userID, string rightskey) {
            object[] results = this.Invoke("IsHasRights", new object[] {
                        userID,
                        rightskey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsHasRightsAsync(string userID, string rightskey) {
            this.IsHasRightsAsync(userID, rightskey, null);
        }
        
        /// <remarks/>
        public void IsHasRightsAsync(string userID, string rightskey, object userState) {
            if ((this.IsHasRightsOperationCompleted == null)) {
                this.IsHasRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsHasRightsOperationCompleted);
            }
            this.InvokeAsync("IsHasRights", new object[] {
                        userID,
                        rightskey}, this.IsHasRightsOperationCompleted, userState);
        }
        
        private void OnIsHasRightsOperationCompleted(object arg) {
            if ((this.IsHasRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsHasRightsCompleted(this, new IsHasRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanVsAudioCheckSettings", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanVsAudioCheckSettings(string userid) {
            object[] results = this.Invoke("IsCanVsAudioCheckSettings", new object[] {
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanVsAudioCheckSettingsAsync(string userid) {
            this.IsCanVsAudioCheckSettingsAsync(userid, null);
        }
        
        /// <remarks/>
        public void IsCanVsAudioCheckSettingsAsync(string userid, object userState) {
            if ((this.IsCanVsAudioCheckSettingsOperationCompleted == null)) {
                this.IsCanVsAudioCheckSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanVsAudioCheckSettingsOperationCompleted);
            }
            this.InvokeAsync("IsCanVsAudioCheckSettings", new object[] {
                        userid}, this.IsCanVsAudioCheckSettingsOperationCompleted, userState);
        }
        
        private void OnIsCanVsAudioCheckSettingsOperationCompleted(object arg) {
            if ((this.IsCanVsAudioCheckSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanVsAudioCheckSettingsCompleted(this, new IsCanVsAudioCheckSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanVsCrossSuperviceParameters", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanVsCrossSuperviceParameters(string userid) {
            object[] results = this.Invoke("IsCanVsCrossSuperviceParameters", new object[] {
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanVsCrossSuperviceParametersAsync(string userid) {
            this.IsCanVsCrossSuperviceParametersAsync(userid, null);
        }
        
        /// <remarks/>
        public void IsCanVsCrossSuperviceParametersAsync(string userid, object userState) {
            if ((this.IsCanVsCrossSuperviceParametersOperationCompleted == null)) {
                this.IsCanVsCrossSuperviceParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanVsCrossSuperviceParametersOperationCompleted);
            }
            this.InvokeAsync("IsCanVsCrossSuperviceParameters", new object[] {
                        userid}, this.IsCanVsCrossSuperviceParametersOperationCompleted, userState);
        }
        
        private void OnIsCanVsCrossSuperviceParametersOperationCompleted(object arg) {
            if ((this.IsCanVsCrossSuperviceParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanVsCrossSuperviceParametersCompleted(this, new IsCanVsCrossSuperviceParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateRecycleSpace", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRecycleSpace(int space) {
            object[] results = this.Invoke("UpdateRecycleSpace", new object[] {
                        space});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRecycleSpaceAsync(int space) {
            this.UpdateRecycleSpaceAsync(space, null);
        }
        
        /// <remarks/>
        public void UpdateRecycleSpaceAsync(int space, object userState) {
            if ((this.UpdateRecycleSpaceOperationCompleted == null)) {
                this.UpdateRecycleSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecycleSpaceOperationCompleted);
            }
            this.InvokeAsync("UpdateRecycleSpace", new object[] {
                        space}, this.UpdateRecycleSpaceOperationCompleted, userState);
        }
        
        private void OnUpdateRecycleSpaceOperationCompleted(object arg) {
            if ((this.UpdateRecycleSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecycleSpaceCompleted(this, new UpdateRecycleSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateCrossSuperviceParameters", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCrossSuperviceParameters(int value) {
            object[] results = this.Invoke("UpdateCrossSuperviceParameters", new object[] {
                        value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCrossSuperviceParametersAsync(int value) {
            this.UpdateCrossSuperviceParametersAsync(value, null);
        }
        
        /// <remarks/>
        public void UpdateCrossSuperviceParametersAsync(int value, object userState) {
            if ((this.UpdateCrossSuperviceParametersOperationCompleted == null)) {
                this.UpdateCrossSuperviceParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCrossSuperviceParametersOperationCompleted);
            }
            this.InvokeAsync("UpdateCrossSuperviceParameters", new object[] {
                        value}, this.UpdateCrossSuperviceParametersOperationCompleted, userState);
        }
        
        private void OnUpdateCrossSuperviceParametersOperationCompleted(object arg) {
            if ((this.UpdateCrossSuperviceParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCrossSuperviceParametersCompleted(this, new UpdateCrossSuperviceParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetRecycleSpace", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRecycleSpace() {
            object[] results = this.Invoke("GetRecycleSpace", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecycleSpaceAsync() {
            this.GetRecycleSpaceAsync(null);
        }
        
        /// <remarks/>
        public void GetRecycleSpaceAsync(object userState) {
            if ((this.GetRecycleSpaceOperationCompleted == null)) {
                this.GetRecycleSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecycleSpaceOperationCompleted);
            }
            this.InvokeAsync("GetRecycleSpace", new object[0], this.GetRecycleSpaceOperationCompleted, userState);
        }
        
        private void OnGetRecycleSpaceOperationCompleted(object arg) {
            if ((this.GetRecycleSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecycleSpaceCompleted(this, new GetRecycleSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetCrossSuperviceParameters", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCrossSuperviceParameters() {
            object[] results = this.Invoke("GetCrossSuperviceParameters", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrossSuperviceParametersAsync() {
            this.GetCrossSuperviceParametersAsync(null);
        }
        
        /// <remarks/>
        public void GetCrossSuperviceParametersAsync(object userState) {
            if ((this.GetCrossSuperviceParametersOperationCompleted == null)) {
                this.GetCrossSuperviceParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrossSuperviceParametersOperationCompleted);
            }
            this.InvokeAsync("GetCrossSuperviceParameters", new object[0], this.GetCrossSuperviceParametersOperationCompleted, userState);
        }
        
        private void OnGetCrossSuperviceParametersOperationCompleted(object arg) {
            if ((this.GetCrossSuperviceParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrossSuperviceParametersCompleted(this, new GetCrossSuperviceParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteProgram2Recycle", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteProgram2Recycle(string programid, string programlibid) {
            object[] results = this.Invoke("DeleteProgram2Recycle", new object[] {
                        programid,
                        programlibid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgram2RecycleAsync(string programid, string programlibid) {
            this.DeleteProgram2RecycleAsync(programid, programlibid, null);
        }
        
        /// <remarks/>
        public void DeleteProgram2RecycleAsync(string programid, string programlibid, object userState) {
            if ((this.DeleteProgram2RecycleOperationCompleted == null)) {
                this.DeleteProgram2RecycleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgram2RecycleOperationCompleted);
            }
            this.InvokeAsync("DeleteProgram2Recycle", new object[] {
                        programid,
                        programlibid}, this.DeleteProgram2RecycleOperationCompleted, userState);
        }
        
        private void OnDeleteProgram2RecycleOperationCompleted(object arg) {
            if ((this.DeleteProgram2RecycleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgram2RecycleCompleted(this, new DeleteProgram2RecycleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UnLockProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnLockProgram(string userid, string programLibID, string programID) {
            object[] results = this.Invoke("UnLockProgram", new object[] {
                        userid,
                        programLibID,
                        programID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnLockProgramAsync(string userid, string programLibID, string programID) {
            this.UnLockProgramAsync(userid, programLibID, programID, null);
        }
        
        /// <remarks/>
        public void UnLockProgramAsync(string userid, string programLibID, string programID, object userState) {
            if ((this.UnLockProgramOperationCompleted == null)) {
                this.UnLockProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnLockProgramOperationCompleted);
            }
            this.InvokeAsync("UnLockProgram", new object[] {
                        userid,
                        programLibID,
                        programID}, this.UnLockProgramOperationCompleted, userState);
        }
        
        private void OnUnLockProgramOperationCompleted(object arg) {
            if ((this.UnLockProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnLockProgramCompleted(this, new UnLockProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetDeletedProgramSpace", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetDeletedProgramSpace(string programlibID) {
            object[] results = this.Invoke("GetDeletedProgramSpace", new object[] {
                        programlibID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeletedProgramSpaceAsync(string programlibID) {
            this.GetDeletedProgramSpaceAsync(programlibID, null);
        }
        
        /// <remarks/>
        public void GetDeletedProgramSpaceAsync(string programlibID, object userState) {
            if ((this.GetDeletedProgramSpaceOperationCompleted == null)) {
                this.GetDeletedProgramSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeletedProgramSpaceOperationCompleted);
            }
            this.InvokeAsync("GetDeletedProgramSpace", new object[] {
                        programlibID}, this.GetDeletedProgramSpaceOperationCompleted, userState);
        }
        
        private void OnGetDeletedProgramSpaceOperationCompleted(object arg) {
            if ((this.GetDeletedProgramSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeletedProgramSpaceCompleted(this, new GetDeletedProgramSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UnDeleteProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnDeleteProgram(string programlibID, string programid) {
            object[] results = this.Invoke("UnDeleteProgram", new object[] {
                        programlibID,
                        programid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnDeleteProgramAsync(string programlibID, string programid) {
            this.UnDeleteProgramAsync(programlibID, programid, null);
        }
        
        /// <remarks/>
        public void UnDeleteProgramAsync(string programlibID, string programid, object userState) {
            if ((this.UnDeleteProgramOperationCompleted == null)) {
                this.UnDeleteProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnDeleteProgramOperationCompleted);
            }
            this.InvokeAsync("UnDeleteProgram", new object[] {
                        programlibID,
                        programid}, this.UnDeleteProgramOperationCompleted, userState);
        }
        
        private void OnUnDeleteProgramOperationCompleted(object arg) {
            if ((this.UnDeleteProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnDeleteProgramCompleted(this, new UnDeleteProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPaddingDeleteProgramByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaddingDeleteProgramByUserID(string userID, string programLibID, string title, int page, int pageCount, int type, string start, string stop, out int count) {
            object[] results = this.Invoke("GetPaddingDeleteProgramByUserID", new object[] {
                        userID,
                        programLibID,
                        title,
                        page,
                        pageCount,
                        type,
                        start,
                        stop});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaddingDeleteProgramByUserIDAsync(string userID, string programLibID, string title, int page, int pageCount, int type, string start, string stop) {
            this.GetPaddingDeleteProgramByUserIDAsync(userID, programLibID, title, page, pageCount, type, start, stop, null);
        }
        
        /// <remarks/>
        public void GetPaddingDeleteProgramByUserIDAsync(string userID, string programLibID, string title, int page, int pageCount, int type, string start, string stop, object userState) {
            if ((this.GetPaddingDeleteProgramByUserIDOperationCompleted == null)) {
                this.GetPaddingDeleteProgramByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaddingDeleteProgramByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetPaddingDeleteProgramByUserID", new object[] {
                        userID,
                        programLibID,
                        title,
                        page,
                        pageCount,
                        type,
                        start,
                        stop}, this.GetPaddingDeleteProgramByUserIDOperationCompleted, userState);
        }
        
        private void OnGetPaddingDeleteProgramByUserIDOperationCompleted(object arg) {
            if ((this.GetPaddingDeleteProgramByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaddingDeleteProgramByUserIDCompleted(this, new GetPaddingDeleteProgramByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPaddingDeleteProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaddingDeleteProgram(string programLibID, string title, int page, int pageCount, int type, string start, string stop, out int count) {
            object[] results = this.Invoke("GetPaddingDeleteProgram", new object[] {
                        programLibID,
                        title,
                        page,
                        pageCount,
                        type,
                        start,
                        stop});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaddingDeleteProgramAsync(string programLibID, string title, int page, int pageCount, int type, string start, string stop) {
            this.GetPaddingDeleteProgramAsync(programLibID, title, page, pageCount, type, start, stop, null);
        }
        
        /// <remarks/>
        public void GetPaddingDeleteProgramAsync(string programLibID, string title, int page, int pageCount, int type, string start, string stop, object userState) {
            if ((this.GetPaddingDeleteProgramOperationCompleted == null)) {
                this.GetPaddingDeleteProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaddingDeleteProgramOperationCompleted);
            }
            this.InvokeAsync("GetPaddingDeleteProgram", new object[] {
                        programLibID,
                        title,
                        page,
                        pageCount,
                        type,
                        start,
                        stop}, this.GetPaddingDeleteProgramOperationCompleted, userState);
        }
        
        private void OnGetPaddingDeleteProgramOperationCompleted(object arg) {
            if ((this.GetPaddingDeleteProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaddingDeleteProgramCompleted(this, new GetPaddingDeleteProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/MoveProgram2Recycle", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MoveProgram2Recycle(string programXML) {
            object[] results = this.Invoke("MoveProgram2Recycle", new object[] {
                        programXML});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MoveProgram2RecycleAsync(string programXML) {
            this.MoveProgram2RecycleAsync(programXML, null);
        }
        
        /// <remarks/>
        public void MoveProgram2RecycleAsync(string programXML, object userState) {
            if ((this.MoveProgram2RecycleOperationCompleted == null)) {
                this.MoveProgram2RecycleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveProgram2RecycleOperationCompleted);
            }
            this.InvokeAsync("MoveProgram2Recycle", new object[] {
                        programXML}, this.MoveProgram2RecycleOperationCompleted, userState);
        }
        
        private void OnMoveProgram2RecycleOperationCompleted(object arg) {
            if ((this.MoveProgram2RecycleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveProgram2RecycleCompleted(this, new MoveProgram2RecycleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderUserdSpace", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFolderUserdSpace(string folderID, string programLibID, bool isprj) {
            object[] results = this.Invoke("GetFolderUserdSpace", new object[] {
                        folderID,
                        programLibID,
                        isprj});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderUserdSpaceAsync(string folderID, string programLibID, bool isprj) {
            this.GetFolderUserdSpaceAsync(folderID, programLibID, isprj, null);
        }
        
        /// <remarks/>
        public void GetFolderUserdSpaceAsync(string folderID, string programLibID, bool isprj, object userState) {
            if ((this.GetFolderUserdSpaceOperationCompleted == null)) {
                this.GetFolderUserdSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderUserdSpaceOperationCompleted);
            }
            this.InvokeAsync("GetFolderUserdSpace", new object[] {
                        folderID,
                        programLibID,
                        isprj}, this.GetFolderUserdSpaceOperationCompleted, userState);
        }
        
        private void OnGetFolderUserdSpaceOperationCompleted(object arg) {
            if ((this.GetFolderUserdSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderUserdSpaceCompleted(this, new GetFolderUserdSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserFolderUserdSpace", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserFolderUserdSpace(string folderID, string programLibID, string userID, bool isproject) {
            object[] results = this.Invoke("GetUserFolderUserdSpace", new object[] {
                        folderID,
                        programLibID,
                        userID,
                        isproject});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFolderUserdSpaceAsync(string folderID, string programLibID, string userID, bool isproject) {
            this.GetUserFolderUserdSpaceAsync(folderID, programLibID, userID, isproject, null);
        }
        
        /// <remarks/>
        public void GetUserFolderUserdSpaceAsync(string folderID, string programLibID, string userID, bool isproject, object userState) {
            if ((this.GetUserFolderUserdSpaceOperationCompleted == null)) {
                this.GetUserFolderUserdSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFolderUserdSpaceOperationCompleted);
            }
            this.InvokeAsync("GetUserFolderUserdSpace", new object[] {
                        folderID,
                        programLibID,
                        userID,
                        isproject}, this.GetUserFolderUserdSpaceOperationCompleted, userState);
        }
        
        private void OnGetUserFolderUserdSpaceOperationCompleted(object arg) {
            if ((this.GetUserFolderUserdSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFolderUserdSpaceCompleted(this, new GetUserFolderUserdSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserUserdSpaceByProgramLibID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float GetUserUserdSpaceByProgramLibID(string userID, string programLibID, bool isPrj) {
            object[] results = this.Invoke("GetUserUserdSpaceByProgramLibID", new object[] {
                        userID,
                        programLibID,
                        isPrj});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserUserdSpaceByProgramLibIDAsync(string userID, string programLibID, bool isPrj) {
            this.GetUserUserdSpaceByProgramLibIDAsync(userID, programLibID, isPrj, null);
        }
        
        /// <remarks/>
        public void GetUserUserdSpaceByProgramLibIDAsync(string userID, string programLibID, bool isPrj, object userState) {
            if ((this.GetUserUserdSpaceByProgramLibIDOperationCompleted == null)) {
                this.GetUserUserdSpaceByProgramLibIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserUserdSpaceByProgramLibIDOperationCompleted);
            }
            this.InvokeAsync("GetUserUserdSpaceByProgramLibID", new object[] {
                        userID,
                        programLibID,
                        isPrj}, this.GetUserUserdSpaceByProgramLibIDOperationCompleted, userState);
        }
        
        private void OnGetUserUserdSpaceByProgramLibIDOperationCompleted(object arg) {
            if ((this.GetUserUserdSpaceByProgramLibIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserUserdSpaceByProgramLibIDCompleted(this, new GetUserUserdSpaceByProgramLibIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUSerSpaceByObjID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUSerSpaceByObjID(string userid, string objID) {
            object[] results = this.Invoke("GetUSerSpaceByObjID", new object[] {
                        userid,
                        objID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUSerSpaceByObjIDAsync(string userid, string objID) {
            this.GetUSerSpaceByObjIDAsync(userid, objID, null);
        }
        
        /// <remarks/>
        public void GetUSerSpaceByObjIDAsync(string userid, string objID, object userState) {
            if ((this.GetUSerSpaceByObjIDOperationCompleted == null)) {
                this.GetUSerSpaceByObjIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUSerSpaceByObjIDOperationCompleted);
            }
            this.InvokeAsync("GetUSerSpaceByObjID", new object[] {
                        userid,
                        objID}, this.GetUSerSpaceByObjIDOperationCompleted, userState);
        }
        
        private void OnGetUSerSpaceByObjIDOperationCompleted(object arg) {
            if ((this.GetUSerSpaceByObjIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUSerSpaceByObjIDCompleted(this, new GetUSerSpaceByObjIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateUserSpaceInObj", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserSpaceInObj(string objID, string userid, int dbspace, int hourspace) {
            object[] results = this.Invoke("UpdateUserSpaceInObj", new object[] {
                        objID,
                        userid,
                        dbspace,
                        hourspace});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserSpaceInObjAsync(string objID, string userid, int dbspace, int hourspace) {
            this.UpdateUserSpaceInObjAsync(objID, userid, dbspace, hourspace, null);
        }
        
        /// <remarks/>
        public void UpdateUserSpaceInObjAsync(string objID, string userid, int dbspace, int hourspace, object userState) {
            if ((this.UpdateUserSpaceInObjOperationCompleted == null)) {
                this.UpdateUserSpaceInObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserSpaceInObjOperationCompleted);
            }
            this.InvokeAsync("UpdateUserSpaceInObj", new object[] {
                        objID,
                        userid,
                        dbspace,
                        hourspace}, this.UpdateUserSpaceInObjOperationCompleted, userState);
        }
        
        private void OnUpdateUserSpaceInObjOperationCompleted(object arg) {
            if ((this.UpdateUserSpaceInObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserSpaceInObjCompleted(this, new UpdateUserSpaceInObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderSharedUsers", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFolderSharedUsers(string folderID) {
            object[] results = this.Invoke("GetFolderSharedUsers", new object[] {
                        folderID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderSharedUsersAsync(string folderID) {
            this.GetFolderSharedUsersAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetFolderSharedUsersAsync(string folderID, object userState) {
            if ((this.GetFolderSharedUsersOperationCompleted == null)) {
                this.GetFolderSharedUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderSharedUsersOperationCompleted);
            }
            this.InvokeAsync("GetFolderSharedUsers", new object[] {
                        folderID}, this.GetFolderSharedUsersOperationCompleted, userState);
        }
        
        private void OnGetFolderSharedUsersOperationCompleted(object arg) {
            if ((this.GetFolderSharedUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderSharedUsersCompleted(this, new GetFolderSharedUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanBatch2Onair", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanBatch2Onair(string userID) {
            object[] results = this.Invoke("IsCanBatch2Onair", new object[] {
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanBatch2OnairAsync(string userID) {
            this.IsCanBatch2OnairAsync(userID, null);
        }
        
        /// <remarks/>
        public void IsCanBatch2OnairAsync(string userID, object userState) {
            if ((this.IsCanBatch2OnairOperationCompleted == null)) {
                this.IsCanBatch2OnairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanBatch2OnairOperationCompleted);
            }
            this.InvokeAsync("IsCanBatch2Onair", new object[] {
                        userID}, this.IsCanBatch2OnairOperationCompleted, userState);
        }
        
        private void OnIsCanBatch2OnairOperationCompleted(object arg) {
            if ((this.IsCanBatch2OnairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanBatch2OnairCompleted(this, new IsCanBatch2OnairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanUseRightManager", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanUseRightManager(string userID) {
            object[] results = this.Invoke("IsCanUseRightManager", new object[] {
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanUseRightManagerAsync(string userID) {
            this.IsCanUseRightManagerAsync(userID, null);
        }
        
        /// <remarks/>
        public void IsCanUseRightManagerAsync(string userID, object userState) {
            if ((this.IsCanUseRightManagerOperationCompleted == null)) {
                this.IsCanUseRightManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanUseRightManagerOperationCompleted);
            }
            this.InvokeAsync("IsCanUseRightManager", new object[] {
                        userID}, this.IsCanUseRightManagerOperationCompleted, userState);
        }
        
        private void OnIsCanUseRightManagerOperationCompleted(object arg) {
            if ((this.IsCanUseRightManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanUseRightManagerCompleted(this, new IsCanUseRightManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanSendProgram2Meidia", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanSendProgram2Meidia(string userid, string folderID) {
            object[] results = this.Invoke("IsCanSendProgram2Meidia", new object[] {
                        userid,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanSendProgram2MeidiaAsync(string userid, string folderID) {
            this.IsCanSendProgram2MeidiaAsync(userid, folderID, null);
        }
        
        /// <remarks/>
        public void IsCanSendProgram2MeidiaAsync(string userid, string folderID, object userState) {
            if ((this.IsCanSendProgram2MeidiaOperationCompleted == null)) {
                this.IsCanSendProgram2MeidiaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanSendProgram2MeidiaOperationCompleted);
            }
            this.InvokeAsync("IsCanSendProgram2Meidia", new object[] {
                        userid,
                        folderID}, this.IsCanSendProgram2MeidiaOperationCompleted, userState);
        }
        
        private void OnIsCanSendProgram2MeidiaOperationCompleted(object arg) {
            if ((this.IsCanSendProgram2MeidiaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanSendProgram2MeidiaCompleted(this, new IsCanSendProgram2MeidiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetRecycleSaveDay", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRecycleSaveDay() {
            object[] results = this.Invoke("GetRecycleSaveDay", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecycleSaveDayAsync() {
            this.GetRecycleSaveDayAsync(null);
        }
        
        /// <remarks/>
        public void GetRecycleSaveDayAsync(object userState) {
            if ((this.GetRecycleSaveDayOperationCompleted == null)) {
                this.GetRecycleSaveDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecycleSaveDayOperationCompleted);
            }
            this.InvokeAsync("GetRecycleSaveDay", new object[0], this.GetRecycleSaveDayOperationCompleted, userState);
        }
        
        private void OnGetRecycleSaveDayOperationCompleted(object arg) {
            if ((this.GetRecycleSaveDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecycleSaveDayCompleted(this, new GetRecycleSaveDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPandingDeleteProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPandingDeleteProgram() {
            object[] results = this.Invoke("GetPandingDeleteProgram", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPandingDeleteProgramAsync() {
            this.GetPandingDeleteProgramAsync(null);
        }
        
        /// <remarks/>
        public void GetPandingDeleteProgramAsync(object userState) {
            if ((this.GetPandingDeleteProgramOperationCompleted == null)) {
                this.GetPandingDeleteProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPandingDeleteProgramOperationCompleted);
            }
            this.InvokeAsync("GetPandingDeleteProgram", new object[0], this.GetPandingDeleteProgramOperationCompleted, userState);
        }
        
        private void OnGetPandingDeleteProgramOperationCompleted(object arg) {
            if ((this.GetPandingDeleteProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPandingDeleteProgramCompleted(this, new GetPandingDeleteProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserGroupByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserGroupByUserID(string userID) {
            object[] results = this.Invoke("GetUserGroupByUserID", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupByUserIDAsync(string userID) {
            this.GetUserGroupByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserGroupByUserIDAsync(string userID, object userState) {
            if ((this.GetUserGroupByUserIDOperationCompleted == null)) {
                this.GetUserGroupByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetUserGroupByUserID", new object[] {
                        userID}, this.GetUserGroupByUserIDOperationCompleted, userState);
        }
        
        private void OnGetUserGroupByUserIDOperationCompleted(object arg) {
            if ((this.GetUserGroupByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupByUserIDCompleted(this, new GetUserGroupByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsRecycleBinFull", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRecycleBinFull() {
            object[] results = this.Invoke("IsRecycleBinFull", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRecycleBinFullAsync() {
            this.IsRecycleBinFullAsync(null);
        }
        
        /// <remarks/>
        public void IsRecycleBinFullAsync(object userState) {
            if ((this.IsRecycleBinFullOperationCompleted == null)) {
                this.IsRecycleBinFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRecycleBinFullOperationCompleted);
            }
            this.InvokeAsync("IsRecycleBinFull", new object[0], this.IsRecycleBinFullOperationCompleted, userState);
        }
        
        private void OnIsRecycleBinFullOperationCompleted(object arg) {
            if ((this.IsRecycleBinFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRecycleBinFullCompleted(this, new IsRecycleBinFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetDeleteAllAMTS", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeleteAllAMTS() {
            object[] results = this.Invoke("GetDeleteAllAMTS", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeleteAllAMTSAsync() {
            this.GetDeleteAllAMTSAsync(null);
        }
        
        /// <remarks/>
        public void GetDeleteAllAMTSAsync(object userState) {
            if ((this.GetDeleteAllAMTSOperationCompleted == null)) {
                this.GetDeleteAllAMTSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeleteAllAMTSOperationCompleted);
            }
            this.InvokeAsync("GetDeleteAllAMTS", new object[0], this.GetDeleteAllAMTSOperationCompleted, userState);
        }
        
        private void OnGetDeleteAllAMTSOperationCompleted(object arg) {
            if ((this.GetDeleteAllAMTSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeleteAllAMTSCompleted(this, new GetDeleteAllAMTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteAllAMTS", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAllAMTS() {
            object[] results = this.Invoke("DeleteAllAMTS", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllAMTSAsync() {
            this.DeleteAllAMTSAsync(null);
        }
        
        /// <remarks/>
        public void DeleteAllAMTSAsync(object userState) {
            if ((this.DeleteAllAMTSOperationCompleted == null)) {
                this.DeleteAllAMTSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllAMTSOperationCompleted);
            }
            this.InvokeAsync("DeleteAllAMTS", new object[0], this.DeleteAllAMTSOperationCompleted, userState);
        }
        
        private void OnDeleteAllAMTSOperationCompleted(object arg) {
            if ((this.DeleteAllAMTSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllAMTSCompleted(this, new DeleteAllAMTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteMyAMTS", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteMyAMTS(string userid, string programlibID) {
            object[] results = this.Invoke("DeleteMyAMTS", new object[] {
                        userid,
                        programlibID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMyAMTSAsync(string userid, string programlibID) {
            this.DeleteMyAMTSAsync(userid, programlibID, null);
        }
        
        /// <remarks/>
        public void DeleteMyAMTSAsync(string userid, string programlibID, object userState) {
            if ((this.DeleteMyAMTSOperationCompleted == null)) {
                this.DeleteMyAMTSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMyAMTSOperationCompleted);
            }
            this.InvokeAsync("DeleteMyAMTS", new object[] {
                        userid,
                        programlibID}, this.DeleteMyAMTSOperationCompleted, userState);
        }
        
        private void OnDeleteMyAMTSOperationCompleted(object arg) {
            if ((this.DeleteMyAMTSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMyAMTSCompleted(this, new DeleteMyAMTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderMaxSuperlevelByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFolderMaxSuperlevelByUserID(string userid, string folderID) {
            object[] results = this.Invoke("GetFolderMaxSuperlevelByUserID", new object[] {
                        userid,
                        folderID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderMaxSuperlevelByUserIDAsync(string userid, string folderID) {
            this.GetFolderMaxSuperlevelByUserIDAsync(userid, folderID, null);
        }
        
        /// <remarks/>
        public void GetFolderMaxSuperlevelByUserIDAsync(string userid, string folderID, object userState) {
            if ((this.GetFolderMaxSuperlevelByUserIDOperationCompleted == null)) {
                this.GetFolderMaxSuperlevelByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderMaxSuperlevelByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetFolderMaxSuperlevelByUserID", new object[] {
                        userid,
                        folderID}, this.GetFolderMaxSuperlevelByUserIDOperationCompleted, userState);
        }
        
        private void OnGetFolderMaxSuperlevelByUserIDOperationCompleted(object arg) {
            if ((this.GetFolderMaxSuperlevelByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderMaxSuperlevelByUserIDCompleted(this, new GetFolderMaxSuperlevelByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAudioCheckSettings", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAudioCheckSettings() {
            object[] results = this.Invoke("GetAudioCheckSettings", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAudioCheckSettingsAsync() {
            this.GetAudioCheckSettingsAsync(null);
        }
        
        /// <remarks/>
        public void GetAudioCheckSettingsAsync(object userState) {
            if ((this.GetAudioCheckSettingsOperationCompleted == null)) {
                this.GetAudioCheckSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAudioCheckSettingsOperationCompleted);
            }
            this.InvokeAsync("GetAudioCheckSettings", new object[0], this.GetAudioCheckSettingsOperationCompleted, userState);
        }
        
        private void OnGetAudioCheckSettingsOperationCompleted(object arg) {
            if ((this.GetAudioCheckSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAudioCheckSettingsCompleted(this, new GetAudioCheckSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAudioCheckLogs", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAudioCheckLogs(string itemID) {
            object[] results = this.Invoke("GetAudioCheckLogs", new object[] {
                        itemID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAudioCheckLogsAsync(string itemID) {
            this.GetAudioCheckLogsAsync(itemID, null);
        }
        
        /// <remarks/>
        public void GetAudioCheckLogsAsync(string itemID, object userState) {
            if ((this.GetAudioCheckLogsOperationCompleted == null)) {
                this.GetAudioCheckLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAudioCheckLogsOperationCompleted);
            }
            this.InvokeAsync("GetAudioCheckLogs", new object[] {
                        itemID}, this.GetAudioCheckLogsOperationCompleted, userState);
        }
        
        private void OnGetAudioCheckLogsOperationCompleted(object arg) {
            if ((this.GetAudioCheckLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAudioCheckLogsCompleted(this, new GetAudioCheckLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SetAudioCheckSettings", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetAudioCheckSettings(string infoXML) {
            object[] results = this.Invoke("SetAudioCheckSettings", new object[] {
                        infoXML});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetAudioCheckSettingsAsync(string infoXML) {
            this.SetAudioCheckSettingsAsync(infoXML, null);
        }
        
        /// <remarks/>
        public void SetAudioCheckSettingsAsync(string infoXML, object userState) {
            if ((this.SetAudioCheckSettingsOperationCompleted == null)) {
                this.SetAudioCheckSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAudioCheckSettingsOperationCompleted);
            }
            this.InvokeAsync("SetAudioCheckSettings", new object[] {
                        infoXML}, this.SetAudioCheckSettingsOperationCompleted, userState);
        }
        
        private void OnSetAudioCheckSettingsOperationCompleted(object arg) {
            if ((this.SetAudioCheckSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAudioCheckSettingsCompleted(this, new SetAudioCheckSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SetAudioCheckLog", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetAudioCheckLog(string infoXML) {
            object[] results = this.Invoke("SetAudioCheckLog", new object[] {
                        infoXML});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetAudioCheckLogAsync(string infoXML) {
            this.SetAudioCheckLogAsync(infoXML, null);
        }
        
        /// <remarks/>
        public void SetAudioCheckLogAsync(string infoXML, object userState) {
            if ((this.SetAudioCheckLogOperationCompleted == null)) {
                this.SetAudioCheckLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAudioCheckLogOperationCompleted);
            }
            this.InvokeAsync("SetAudioCheckLog", new object[] {
                        infoXML}, this.SetAudioCheckLogOperationCompleted, userState);
        }
        
        private void OnSetAudioCheckLogOperationCompleted(object arg) {
            if ((this.SetAudioCheckLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAudioCheckLogCompleted(this, new SetAudioCheckLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetSearchPattern", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSearchPattern() {
            object[] results = this.Invoke("GetSearchPattern", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSearchPatternAsync() {
            this.GetSearchPatternAsync(null);
        }
        
        /// <remarks/>
        public void GetSearchPatternAsync(object userState) {
            if ((this.GetSearchPatternOperationCompleted == null)) {
                this.GetSearchPatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSearchPatternOperationCompleted);
            }
            this.InvokeAsync("GetSearchPattern", new object[0], this.GetSearchPatternOperationCompleted, userState);
        }
        
        private void OnGetSearchPatternOperationCompleted(object arg) {
            if ((this.GetSearchPatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSearchPatternCompleted(this, new GetSearchPatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetResource2UsersList", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetResource2UsersList(string resourceid) {
            object[] results = this.Invoke("GetResource2UsersList", new object[] {
                        resourceid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetResource2UsersListAsync(string resourceid) {
            this.GetResource2UsersListAsync(resourceid, null);
        }
        
        /// <remarks/>
        public void GetResource2UsersListAsync(string resourceid, object userState) {
            if ((this.GetResource2UsersListOperationCompleted == null)) {
                this.GetResource2UsersListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResource2UsersListOperationCompleted);
            }
            this.InvokeAsync("GetResource2UsersList", new object[] {
                        resourceid}, this.GetResource2UsersListOperationCompleted, userState);
        }
        
        private void OnGetResource2UsersListOperationCompleted(object arg) {
            if ((this.GetResource2UsersListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResource2UsersListCompleted(this, new GetResource2UsersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPandingDeleteMessages", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPandingDeleteMessages() {
            object[] results = this.Invoke("GetPandingDeleteMessages", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPandingDeleteMessagesAsync() {
            this.GetPandingDeleteMessagesAsync(null);
        }
        
        /// <remarks/>
        public void GetPandingDeleteMessagesAsync(object userState) {
            if ((this.GetPandingDeleteMessagesOperationCompleted == null)) {
                this.GetPandingDeleteMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPandingDeleteMessagesOperationCompleted);
            }
            this.InvokeAsync("GetPandingDeleteMessages", new object[0], this.GetPandingDeleteMessagesOperationCompleted, userState);
        }
        
        private void OnGetPandingDeleteMessagesOperationCompleted(object arg) {
            if ((this.GetPandingDeleteMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPandingDeleteMessagesCompleted(this, new GetPandingDeleteMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteMessages", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteMessages() {
            object[] results = this.Invoke("DeleteMessages", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessagesAsync() {
            this.DeleteMessagesAsync(null);
        }
        
        /// <remarks/>
        public void DeleteMessagesAsync(object userState) {
            if ((this.DeleteMessagesOperationCompleted == null)) {
                this.DeleteMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessagesOperationCompleted);
            }
            this.InvokeAsync("DeleteMessages", new object[0], this.DeleteMessagesOperationCompleted, userState);
        }
        
        private void OnDeleteMessagesOperationCompleted(object arg) {
            if ((this.DeleteMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessagesCompleted(this, new DeleteMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPandingDeleteProgramCountByFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPandingDeleteProgramCountByFolder() {
            object[] results = this.Invoke("GetPandingDeleteProgramCountByFolder", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPandingDeleteProgramCountByFolderAsync() {
            this.GetPandingDeleteProgramCountByFolderAsync(null);
        }
        
        /// <remarks/>
        public void GetPandingDeleteProgramCountByFolderAsync(object userState) {
            if ((this.GetPandingDeleteProgramCountByFolderOperationCompleted == null)) {
                this.GetPandingDeleteProgramCountByFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPandingDeleteProgramCountByFolderOperationCompleted);
            }
            this.InvokeAsync("GetPandingDeleteProgramCountByFolder", new object[0], this.GetPandingDeleteProgramCountByFolderOperationCompleted, userState);
        }
        
        private void OnGetPandingDeleteProgramCountByFolderOperationCompleted(object arg) {
            if ((this.GetPandingDeleteProgramCountByFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPandingDeleteProgramCountByFolderCompleted(this, new GetPandingDeleteProgramCountByFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/CheckFolderNameExist", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckFolderNameExist(string programLibID, string folderID, string folderName) {
            object[] results = this.Invoke("CheckFolderNameExist", new object[] {
                        programLibID,
                        folderID,
                        folderName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFolderNameExistAsync(string programLibID, string folderID, string folderName) {
            this.CheckFolderNameExistAsync(programLibID, folderID, folderName, null);
        }
        
        /// <remarks/>
        public void CheckFolderNameExistAsync(string programLibID, string folderID, string folderName, object userState) {
            if ((this.CheckFolderNameExistOperationCompleted == null)) {
                this.CheckFolderNameExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFolderNameExistOperationCompleted);
            }
            this.InvokeAsync("CheckFolderNameExist", new object[] {
                        programLibID,
                        folderID,
                        folderName}, this.CheckFolderNameExistOperationCompleted, userState);
        }
        
        private void OnCheckFolderNameExistOperationCompleted(object arg) {
            if ((this.CheckFolderNameExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFolderNameExistCompleted(this, new CheckFolderNameExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteUserLoginEx", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUserLoginEx(string UserLoginName) {
            object[] results = this.Invoke("DeleteUserLoginEx", new object[] {
                        UserLoginName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserLoginExAsync(string UserLoginName) {
            this.DeleteUserLoginExAsync(UserLoginName, null);
        }
        
        /// <remarks/>
        public void DeleteUserLoginExAsync(string UserLoginName, object userState) {
            if ((this.DeleteUserLoginExOperationCompleted == null)) {
                this.DeleteUserLoginExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserLoginExOperationCompleted);
            }
            this.InvokeAsync("DeleteUserLoginEx", new object[] {
                        UserLoginName}, this.DeleteUserLoginExOperationCompleted, userState);
        }
        
        private void OnDeleteUserLoginExOperationCompleted(object arg) {
            if ((this.DeleteUserLoginExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserLoginExCompleted(this, new DeleteUserLoginExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserLoginExCount", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserLoginExCount(string UserLoginName) {
            object[] results = this.Invoke("GetUserLoginExCount", new object[] {
                        UserLoginName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLoginExCountAsync(string UserLoginName) {
            this.GetUserLoginExCountAsync(UserLoginName, null);
        }
        
        /// <remarks/>
        public void GetUserLoginExCountAsync(string UserLoginName, object userState) {
            if ((this.GetUserLoginExCountOperationCompleted == null)) {
                this.GetUserLoginExCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLoginExCountOperationCompleted);
            }
            this.InvokeAsync("GetUserLoginExCount", new object[] {
                        UserLoginName}, this.GetUserLoginExCountOperationCompleted, userState);
        }
        
        private void OnGetUserLoginExCountOperationCompleted(object arg) {
            if ((this.GetUserLoginExCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLoginExCountCompleted(this, new GetUserLoginExCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SetUserLoginEx", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetUserLoginEx(string UserLoginName, string UserLoginEx1, string UserLoginEx2, string UserLoginEx3, string UserLoginEx4, string UserLoginEx5) {
            object[] results = this.Invoke("SetUserLoginEx", new object[] {
                        UserLoginName,
                        UserLoginEx1,
                        UserLoginEx2,
                        UserLoginEx3,
                        UserLoginEx4,
                        UserLoginEx5});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserLoginExAsync(string UserLoginName, string UserLoginEx1, string UserLoginEx2, string UserLoginEx3, string UserLoginEx4, string UserLoginEx5) {
            this.SetUserLoginExAsync(UserLoginName, UserLoginEx1, UserLoginEx2, UserLoginEx3, UserLoginEx4, UserLoginEx5, null);
        }
        
        /// <remarks/>
        public void SetUserLoginExAsync(string UserLoginName, string UserLoginEx1, string UserLoginEx2, string UserLoginEx3, string UserLoginEx4, string UserLoginEx5, object userState) {
            if ((this.SetUserLoginExOperationCompleted == null)) {
                this.SetUserLoginExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserLoginExOperationCompleted);
            }
            this.InvokeAsync("SetUserLoginEx", new object[] {
                        UserLoginName,
                        UserLoginEx1,
                        UserLoginEx2,
                        UserLoginEx3,
                        UserLoginEx4,
                        UserLoginEx5}, this.SetUserLoginExOperationCompleted, userState);
        }
        
        private void OnSetUserLoginExOperationCompleted(object arg) {
            if ((this.SetUserLoginExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserLoginExCompleted(this, new SetUserLoginExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetDeleteProgramByFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeleteProgramByFolder() {
            object[] results = this.Invoke("GetDeleteProgramByFolder", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeleteProgramByFolderAsync() {
            this.GetDeleteProgramByFolderAsync(null);
        }
        
        /// <remarks/>
        public void GetDeleteProgramByFolderAsync(object userState) {
            if ((this.GetDeleteProgramByFolderOperationCompleted == null)) {
                this.GetDeleteProgramByFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeleteProgramByFolderOperationCompleted);
            }
            this.InvokeAsync("GetDeleteProgramByFolder", new object[0], this.GetDeleteProgramByFolderOperationCompleted, userState);
        }
        
        private void OnGetDeleteProgramByFolderOperationCompleted(object arg) {
            if ((this.GetDeleteProgramByFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeleteProgramByFolderCompleted(this, new GetDeleteProgramByFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAllProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllProgram(string programlibid) {
            object[] results = this.Invoke("GetAllProgram", new object[] {
                        programlibid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProgramAsync(string programlibid) {
            this.GetAllProgramAsync(programlibid, null);
        }
        
        /// <remarks/>
        public void GetAllProgramAsync(string programlibid, object userState) {
            if ((this.GetAllProgramOperationCompleted == null)) {
                this.GetAllProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProgramOperationCompleted);
            }
            this.InvokeAsync("GetAllProgram", new object[] {
                        programlibid}, this.GetAllProgramOperationCompleted, userState);
        }
        
        private void OnGetAllProgramOperationCompleted(object arg) {
            if ((this.GetAllProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProgramCompleted(this, new GetAllProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAllProgram1", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllProgram1(string programlibid, string title, string start, string end) {
            object[] results = this.Invoke("GetAllProgram1", new object[] {
                        programlibid,
                        title,
                        start,
                        end});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProgram1Async(string programlibid, string title, string start, string end) {
            this.GetAllProgram1Async(programlibid, title, start, end, null);
        }
        
        /// <remarks/>
        public void GetAllProgram1Async(string programlibid, string title, string start, string end, object userState) {
            if ((this.GetAllProgram1OperationCompleted == null)) {
                this.GetAllProgram1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProgram1OperationCompleted);
            }
            this.InvokeAsync("GetAllProgram1", new object[] {
                        programlibid,
                        title,
                        start,
                        end}, this.GetAllProgram1OperationCompleted, userState);
        }
        
        private void OnGetAllProgram1OperationCompleted(object arg) {
            if ((this.GetAllProgram1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProgram1Completed(this, new GetAllProgram1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAdProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAdProgram(string year, string programLibid, string folderID, string tags, string title, string zone) {
            object[] results = this.Invoke("GetAdProgram", new object[] {
                        year,
                        programLibid,
                        folderID,
                        tags,
                        title,
                        zone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdProgramAsync(string year, string programLibid, string folderID, string tags, string title, string zone) {
            this.GetAdProgramAsync(year, programLibid, folderID, tags, title, zone, null);
        }
        
        /// <remarks/>
        public void GetAdProgramAsync(string year, string programLibid, string folderID, string tags, string title, string zone, object userState) {
            if ((this.GetAdProgramOperationCompleted == null)) {
                this.GetAdProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdProgramOperationCompleted);
            }
            this.InvokeAsync("GetAdProgram", new object[] {
                        year,
                        programLibid,
                        folderID,
                        tags,
                        title,
                        zone}, this.GetAdProgramOperationCompleted, userState);
        }
        
        private void OnGetAdProgramOperationCompleted(object arg) {
            if ((this.GetAdProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdProgramCompleted(this, new GetAdProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteProgramByFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteProgramByFolder() {
            object[] results = this.Invoke("DeleteProgramByFolder", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramByFolderAsync() {
            this.DeleteProgramByFolderAsync(null);
        }
        
        /// <remarks/>
        public void DeleteProgramByFolderAsync(object userState) {
            if ((this.DeleteProgramByFolderOperationCompleted == null)) {
                this.DeleteProgramByFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramByFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramByFolder", new object[0], this.DeleteProgramByFolderOperationCompleted, userState);
        }
        
        private void OnDeleteProgramByFolderOperationCompleted(object arg) {
            if ((this.DeleteProgramByFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramByFolderCompleted(this, new DeleteProgramByFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetNewsItemByObjectID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewsItemByObjectID(string userid, string objectID, string newsLibID, string startDate, string endDate, string title, int pageCount, int page, out int count) {
            object[] results = this.Invoke("GetNewsItemByObjectID", new object[] {
                        userid,
                        objectID,
                        newsLibID,
                        startDate,
                        endDate,
                        title,
                        pageCount,
                        page});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsItemByObjectIDAsync(string userid, string objectID, string newsLibID, string startDate, string endDate, string title, int pageCount, int page) {
            this.GetNewsItemByObjectIDAsync(userid, objectID, newsLibID, startDate, endDate, title, pageCount, page, null);
        }
        
        /// <remarks/>
        public void GetNewsItemByObjectIDAsync(string userid, string objectID, string newsLibID, string startDate, string endDate, string title, int pageCount, int page, object userState) {
            if ((this.GetNewsItemByObjectIDOperationCompleted == null)) {
                this.GetNewsItemByObjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsItemByObjectIDOperationCompleted);
            }
            this.InvokeAsync("GetNewsItemByObjectID", new object[] {
                        userid,
                        objectID,
                        newsLibID,
                        startDate,
                        endDate,
                        title,
                        pageCount,
                        page}, this.GetNewsItemByObjectIDOperationCompleted, userState);
        }
        
        private void OnGetNewsItemByObjectIDOperationCompleted(object arg) {
            if ((this.GetNewsItemByObjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsItemByObjectIDCompleted(this, new GetNewsItemByObjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetNewsAudioByNewsID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewsAudioByNewsID(string newsID) {
            object[] results = this.Invoke("GetNewsAudioByNewsID", new object[] {
                        newsID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsAudioByNewsIDAsync(string newsID) {
            this.GetNewsAudioByNewsIDAsync(newsID, null);
        }
        
        /// <remarks/>
        public void GetNewsAudioByNewsIDAsync(string newsID, object userState) {
            if ((this.GetNewsAudioByNewsIDOperationCompleted == null)) {
                this.GetNewsAudioByNewsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsAudioByNewsIDOperationCompleted);
            }
            this.InvokeAsync("GetNewsAudioByNewsID", new object[] {
                        newsID}, this.GetNewsAudioByNewsIDOperationCompleted, userState);
        }
        
        private void OnGetNewsAudioByNewsIDOperationCompleted(object arg) {
            if ((this.GetNewsAudioByNewsIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsAudioByNewsIDCompleted(this, new GetNewsAudioByNewsIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetNewsLibInfoByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewsLibInfoByUserID(string userID) {
            object[] results = this.Invoke("GetNewsLibInfoByUserID", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsLibInfoByUserIDAsync(string userID) {
            this.GetNewsLibInfoByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetNewsLibInfoByUserIDAsync(string userID, object userState) {
            if ((this.GetNewsLibInfoByUserIDOperationCompleted == null)) {
                this.GetNewsLibInfoByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsLibInfoByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetNewsLibInfoByUserID", new object[] {
                        userID}, this.GetNewsLibInfoByUserIDOperationCompleted, userState);
        }
        
        private void OnGetNewsLibInfoByUserIDOperationCompleted(object arg) {
            if ((this.GetNewsLibInfoByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsLibInfoByUserIDCompleted(this, new GetNewsLibInfoByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetNewsFolderTableByNewsLibIDAndUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNewsFolderTableByNewsLibIDAndUserID(string newsLibID, string userID) {
            object[] results = this.Invoke("GetNewsFolderTableByNewsLibIDAndUserID", new object[] {
                        newsLibID,
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsFolderTableByNewsLibIDAndUserIDAsync(string newsLibID, string userID) {
            this.GetNewsFolderTableByNewsLibIDAndUserIDAsync(newsLibID, userID, null);
        }
        
        /// <remarks/>
        public void GetNewsFolderTableByNewsLibIDAndUserIDAsync(string newsLibID, string userID, object userState) {
            if ((this.GetNewsFolderTableByNewsLibIDAndUserIDOperationCompleted == null)) {
                this.GetNewsFolderTableByNewsLibIDAndUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsFolderTableByNewsLibIDAndUserIDOperationCompleted);
            }
            this.InvokeAsync("GetNewsFolderTableByNewsLibIDAndUserID", new object[] {
                        newsLibID,
                        userID}, this.GetNewsFolderTableByNewsLibIDAndUserIDOperationCompleted, userState);
        }
        
        private void OnGetNewsFolderTableByNewsLibIDAndUserIDOperationCompleted(object arg) {
            if ((this.GetNewsFolderTableByNewsLibIDAndUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsFolderTableByNewsLibIDAndUserIDCompleted(this, new GetNewsFolderTableByNewsLibIDAndUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateNewsAudio", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNewsAudio(string newsAudioXMl, out string errString) {
            object[] results = this.Invoke("UpdateNewsAudio", new object[] {
                        newsAudioXMl});
            errString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNewsAudioAsync(string newsAudioXMl) {
            this.UpdateNewsAudioAsync(newsAudioXMl, null);
        }
        
        /// <remarks/>
        public void UpdateNewsAudioAsync(string newsAudioXMl, object userState) {
            if ((this.UpdateNewsAudioOperationCompleted == null)) {
                this.UpdateNewsAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNewsAudioOperationCompleted);
            }
            this.InvokeAsync("UpdateNewsAudio", new object[] {
                        newsAudioXMl}, this.UpdateNewsAudioOperationCompleted, userState);
        }
        
        private void OnUpdateNewsAudioOperationCompleted(object arg) {
            if ((this.UpdateNewsAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNewsAudioCompleted(this, new UpdateNewsAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateNewsItem", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNewsItem(string newsItemListXml, out string errString) {
            object[] results = this.Invoke("UpdateNewsItem", new object[] {
                        newsItemListXml});
            errString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNewsItemAsync(string newsItemListXml) {
            this.UpdateNewsItemAsync(newsItemListXml, null);
        }
        
        /// <remarks/>
        public void UpdateNewsItemAsync(string newsItemListXml, object userState) {
            if ((this.UpdateNewsItemOperationCompleted == null)) {
                this.UpdateNewsItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNewsItemOperationCompleted);
            }
            this.InvokeAsync("UpdateNewsItem", new object[] {
                        newsItemListXml}, this.UpdateNewsItemOperationCompleted, userState);
        }
        
        private void OnUpdateNewsItemOperationCompleted(object arg) {
            if ((this.UpdateNewsItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNewsItemCompleted(this, new UpdateNewsItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramOnairApply", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProgramOnairApply(string zone) {
            object[] results = this.Invoke("GetProgramOnairApply", new object[] {
                        zone});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramOnairApplyAsync(string zone) {
            this.GetProgramOnairApplyAsync(zone, null);
        }
        
        /// <remarks/>
        public void GetProgramOnairApplyAsync(string zone, object userState) {
            if ((this.GetProgramOnairApplyOperationCompleted == null)) {
                this.GetProgramOnairApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramOnairApplyOperationCompleted);
            }
            this.InvokeAsync("GetProgramOnairApply", new object[] {
                        zone}, this.GetProgramOnairApplyOperationCompleted, userState);
        }
        
        private void OnGetProgramOnairApplyOperationCompleted(object arg) {
            if ((this.GetProgramOnairApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramOnairApplyCompleted(this, new GetProgramOnairApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/MaketProgramOnairApplyDone", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MaketProgramOnairApplyDone(string programID) {
            object[] results = this.Invoke("MaketProgramOnairApplyDone", new object[] {
                        programID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MaketProgramOnairApplyDoneAsync(string programID) {
            this.MaketProgramOnairApplyDoneAsync(programID, null);
        }
        
        /// <remarks/>
        public void MaketProgramOnairApplyDoneAsync(string programID, object userState) {
            if ((this.MaketProgramOnairApplyDoneOperationCompleted == null)) {
                this.MaketProgramOnairApplyDoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaketProgramOnairApplyDoneOperationCompleted);
            }
            this.InvokeAsync("MaketProgramOnairApplyDone", new object[] {
                        programID}, this.MaketProgramOnairApplyDoneOperationCompleted, userState);
        }
        
        private void OnMaketProgramOnairApplyDoneOperationCompleted(object arg) {
            if ((this.MaketProgramOnairApplyDoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MaketProgramOnairApplyDoneCompleted(this, new MaketProgramOnairApplyDoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/InsertIntoProgramOnairApply", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertIntoProgramOnairApply(string programID, string programLibID, int channelID, int workgroupID, string categoryID, string userID, string loginName) {
            object[] results = this.Invoke("InsertIntoProgramOnairApply", new object[] {
                        programID,
                        programLibID,
                        channelID,
                        workgroupID,
                        categoryID,
                        userID,
                        loginName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertIntoProgramOnairApplyAsync(string programID, string programLibID, int channelID, int workgroupID, string categoryID, string userID, string loginName) {
            this.InsertIntoProgramOnairApplyAsync(programID, programLibID, channelID, workgroupID, categoryID, userID, loginName, null);
        }
        
        /// <remarks/>
        public void InsertIntoProgramOnairApplyAsync(string programID, string programLibID, int channelID, int workgroupID, string categoryID, string userID, string loginName, object userState) {
            if ((this.InsertIntoProgramOnairApplyOperationCompleted == null)) {
                this.InsertIntoProgramOnairApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoProgramOnairApplyOperationCompleted);
            }
            this.InvokeAsync("InsertIntoProgramOnairApply", new object[] {
                        programID,
                        programLibID,
                        channelID,
                        workgroupID,
                        categoryID,
                        userID,
                        loginName}, this.InsertIntoProgramOnairApplyOperationCompleted, userState);
        }
        
        private void OnInsertIntoProgramOnairApplyOperationCompleted(object arg) {
            if ((this.InsertIntoProgramOnairApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoProgramOnairApplyCompleted(this, new InsertIntoProgramOnairApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateUserInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserInfo(string LoginName, string Password, string Name, string Fingerprint) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        LoginName,
                        Password,
                        Name,
                        Fingerprint});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(string LoginName, string Password, string Name, string Fingerprint) {
            this.UpdateUserInfoAsync(LoginName, Password, Name, Fingerprint, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(string LoginName, string Password, string Name, string Fingerprint, object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        LoginName,
                        Password,
                        Name,
                        Fingerprint}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoOperationCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsExistWorkTask", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistWorkTask(string workItemID) {
            object[] results = this.Invoke("IsExistWorkTask", new object[] {
                        workItemID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistWorkTaskAsync(string workItemID) {
            this.IsExistWorkTaskAsync(workItemID, null);
        }
        
        /// <remarks/>
        public void IsExistWorkTaskAsync(string workItemID, object userState) {
            if ((this.IsExistWorkTaskOperationCompleted == null)) {
                this.IsExistWorkTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistWorkTaskOperationCompleted);
            }
            this.InvokeAsync("IsExistWorkTask", new object[] {
                        workItemID}, this.IsExistWorkTaskOperationCompleted, userState);
        }
        
        private void OnIsExistWorkTaskOperationCompleted(object arg) {
            if ((this.IsExistWorkTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistWorkTaskCompleted(this, new IsExistWorkTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetWorkTaskCountByStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWorkTaskCountByStatus(string pTaskStatus) {
            object[] results = this.Invoke("GetWorkTaskCountByStatus", new object[] {
                        pTaskStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkTaskCountByStatusAsync(string pTaskStatus) {
            this.GetWorkTaskCountByStatusAsync(pTaskStatus, null);
        }
        
        /// <remarks/>
        public void GetWorkTaskCountByStatusAsync(string pTaskStatus, object userState) {
            if ((this.GetWorkTaskCountByStatusOperationCompleted == null)) {
                this.GetWorkTaskCountByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkTaskCountByStatusOperationCompleted);
            }
            this.InvokeAsync("GetWorkTaskCountByStatus", new object[] {
                        pTaskStatus}, this.GetWorkTaskCountByStatusOperationCompleted, userState);
        }
        
        private void OnGetWorkTaskCountByStatusOperationCompleted(object arg) {
            if ((this.GetWorkTaskCountByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkTaskCountByStatusCompleted(this, new GetWorkTaskCountByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetWorkTasksByStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWorkTasksByStatus(string startDate, string endDate, string title, string TaskStatus, int page, int pageCount, out int total) {
            object[] results = this.Invoke("GetWorkTasksByStatus", new object[] {
                        startDate,
                        endDate,
                        title,
                        TaskStatus,
                        page,
                        pageCount});
            total = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkTasksByStatusAsync(string startDate, string endDate, string title, string TaskStatus, int page, int pageCount) {
            this.GetWorkTasksByStatusAsync(startDate, endDate, title, TaskStatus, page, pageCount, null);
        }
        
        /// <remarks/>
        public void GetWorkTasksByStatusAsync(string startDate, string endDate, string title, string TaskStatus, int page, int pageCount, object userState) {
            if ((this.GetWorkTasksByStatusOperationCompleted == null)) {
                this.GetWorkTasksByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkTasksByStatusOperationCompleted);
            }
            this.InvokeAsync("GetWorkTasksByStatus", new object[] {
                        startDate,
                        endDate,
                        title,
                        TaskStatus,
                        page,
                        pageCount}, this.GetWorkTasksByStatusOperationCompleted, userState);
        }
        
        private void OnGetWorkTasksByStatusOperationCompleted(object arg) {
            if ((this.GetWorkTasksByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkTasksByStatusCompleted(this, new GetWorkTasksByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateTaskStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTaskStatus(int pTaskStatus, string pWorkItemId) {
            object[] results = this.Invoke("UpdateTaskStatus", new object[] {
                        pTaskStatus,
                        pWorkItemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskStatusAsync(int pTaskStatus, string pWorkItemId) {
            this.UpdateTaskStatusAsync(pTaskStatus, pWorkItemId, null);
        }
        
        /// <remarks/>
        public void UpdateTaskStatusAsync(int pTaskStatus, string pWorkItemId, object userState) {
            if ((this.UpdateTaskStatusOperationCompleted == null)) {
                this.UpdateTaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateTaskStatus", new object[] {
                        pTaskStatus,
                        pWorkItemId}, this.UpdateTaskStatusOperationCompleted, userState);
        }
        
        private void OnUpdateTaskStatusOperationCompleted(object arg) {
            if ((this.UpdateTaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskStatusCompleted(this, new UpdateTaskStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SetWorkTaskProgramID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetWorkTaskProgramID(string ProgramID, string pWorkItemId, int pTaskStatus) {
            object[] results = this.Invoke("SetWorkTaskProgramID", new object[] {
                        ProgramID,
                        pWorkItemId,
                        pTaskStatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetWorkTaskProgramIDAsync(string ProgramID, string pWorkItemId, int pTaskStatus) {
            this.SetWorkTaskProgramIDAsync(ProgramID, pWorkItemId, pTaskStatus, null);
        }
        
        /// <remarks/>
        public void SetWorkTaskProgramIDAsync(string ProgramID, string pWorkItemId, int pTaskStatus, object userState) {
            if ((this.SetWorkTaskProgramIDOperationCompleted == null)) {
                this.SetWorkTaskProgramIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetWorkTaskProgramIDOperationCompleted);
            }
            this.InvokeAsync("SetWorkTaskProgramID", new object[] {
                        ProgramID,
                        pWorkItemId,
                        pTaskStatus}, this.SetWorkTaskProgramIDOperationCompleted, userState);
        }
        
        private void OnSetWorkTaskProgramIDOperationCompleted(object arg) {
            if ((this.SetWorkTaskProgramIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetWorkTaskProgramIDCompleted(this, new SetWorkTaskProgramIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SendWorkTaskComplete", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendWorkTaskComplete(string pWorkTaskDataInfoXML) {
            object[] results = this.Invoke("SendWorkTaskComplete", new object[] {
                        pWorkTaskDataInfoXML});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendWorkTaskCompleteAsync(string pWorkTaskDataInfoXML) {
            this.SendWorkTaskCompleteAsync(pWorkTaskDataInfoXML, null);
        }
        
        /// <remarks/>
        public void SendWorkTaskCompleteAsync(string pWorkTaskDataInfoXML, object userState) {
            if ((this.SendWorkTaskCompleteOperationCompleted == null)) {
                this.SendWorkTaskCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWorkTaskCompleteOperationCompleted);
            }
            this.InvokeAsync("SendWorkTaskComplete", new object[] {
                        pWorkTaskDataInfoXML}, this.SendWorkTaskCompleteOperationCompleted, userState);
        }
        
        private void OnSendWorkTaskCompleteOperationCompleted(object arg) {
            if ((this.SendWorkTaskCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWorkTaskCompleteCompleted(this, new SendWorkTaskCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetWorkTaskByWorkItemId", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWorkTaskByWorkItemId(string pWorkItemId) {
            object[] results = this.Invoke("GetWorkTaskByWorkItemId", new object[] {
                        pWorkItemId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkTaskByWorkItemIdAsync(string pWorkItemId) {
            this.GetWorkTaskByWorkItemIdAsync(pWorkItemId, null);
        }
        
        /// <remarks/>
        public void GetWorkTaskByWorkItemIdAsync(string pWorkItemId, object userState) {
            if ((this.GetWorkTaskByWorkItemIdOperationCompleted == null)) {
                this.GetWorkTaskByWorkItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkTaskByWorkItemIdOperationCompleted);
            }
            this.InvokeAsync("GetWorkTaskByWorkItemId", new object[] {
                        pWorkItemId}, this.GetWorkTaskByWorkItemIdOperationCompleted, userState);
        }
        
        private void OnGetWorkTaskByWorkItemIdOperationCompleted(object arg) {
            if ((this.GetWorkTaskByWorkItemIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkTaskByWorkItemIdCompleted(this, new GetWorkTaskByWorkItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgram2WorkTaskStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProgram2WorkTaskStatus(string programIDs) {
            object[] results = this.Invoke("GetProgram2WorkTaskStatus", new object[] {
                        programIDs});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgram2WorkTaskStatusAsync(string programIDs) {
            this.GetProgram2WorkTaskStatusAsync(programIDs, null);
        }
        
        /// <remarks/>
        public void GetProgram2WorkTaskStatusAsync(string programIDs, object userState) {
            if ((this.GetProgram2WorkTaskStatusOperationCompleted == null)) {
                this.GetProgram2WorkTaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgram2WorkTaskStatusOperationCompleted);
            }
            this.InvokeAsync("GetProgram2WorkTaskStatus", new object[] {
                        programIDs}, this.GetProgram2WorkTaskStatusOperationCompleted, userState);
        }
        
        private void OnGetProgram2WorkTaskStatusOperationCompleted(object arg) {
            if ((this.GetProgram2WorkTaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgram2WorkTaskStatusCompleted(this, new GetProgram2WorkTaskStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetIsUseFileStreamer", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIsUseFileStreamer() {
            object[] results = this.Invoke("GetIsUseFileStreamer", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsUseFileStreamerAsync() {
            this.GetIsUseFileStreamerAsync(null);
        }
        
        /// <remarks/>
        public void GetIsUseFileStreamerAsync(object userState) {
            if ((this.GetIsUseFileStreamerOperationCompleted == null)) {
                this.GetIsUseFileStreamerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsUseFileStreamerOperationCompleted);
            }
            this.InvokeAsync("GetIsUseFileStreamer", new object[0], this.GetIsUseFileStreamerOperationCompleted, userState);
        }
        
        private void OnGetIsUseFileStreamerOperationCompleted(object arg) {
            if ((this.GetIsUseFileStreamerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsUseFileStreamerCompleted(this, new GetIsUseFileStreamerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetIsRecoverPlaylist", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIsRecoverPlaylist() {
            object[] results = this.Invoke("GetIsRecoverPlaylist", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsRecoverPlaylistAsync() {
            this.GetIsRecoverPlaylistAsync(null);
        }
        
        /// <remarks/>
        public void GetIsRecoverPlaylistAsync(object userState) {
            if ((this.GetIsRecoverPlaylistOperationCompleted == null)) {
                this.GetIsRecoverPlaylistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsRecoverPlaylistOperationCompleted);
            }
            this.InvokeAsync("GetIsRecoverPlaylist", new object[0], this.GetIsRecoverPlaylistOperationCompleted, userState);
        }
        
        private void OnGetIsRecoverPlaylistOperationCompleted(object arg) {
            if ((this.GetIsRecoverPlaylistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsRecoverPlaylistCompleted(this, new GetIsRecoverPlaylistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMonitorIP", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMonitorIP(out string MonitorPort) {
            object[] results = this.Invoke("GetMonitorIP", new object[0]);
            MonitorPort = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMonitorIPAsync() {
            this.GetMonitorIPAsync(null);
        }
        
        /// <remarks/>
        public void GetMonitorIPAsync(object userState) {
            if ((this.GetMonitorIPOperationCompleted == null)) {
                this.GetMonitorIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMonitorIPOperationCompleted);
            }
            this.InvokeAsync("GetMonitorIP", new object[0], this.GetMonitorIPOperationCompleted, userState);
        }
        
        private void OnGetMonitorIPOperationCompleted(object arg) {
            if ((this.GetMonitorIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMonitorIPCompleted(this, new GetMonitorIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetSwitchAudioEditor", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSwitchAudioEditor() {
            object[] results = this.Invoke("GetSwitchAudioEditor", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSwitchAudioEditorAsync() {
            this.GetSwitchAudioEditorAsync(null);
        }
        
        /// <remarks/>
        public void GetSwitchAudioEditorAsync(object userState) {
            if ((this.GetSwitchAudioEditorOperationCompleted == null)) {
                this.GetSwitchAudioEditorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSwitchAudioEditorOperationCompleted);
            }
            this.InvokeAsync("GetSwitchAudioEditor", new object[0], this.GetSwitchAudioEditorOperationCompleted, userState);
        }
        
        private void OnGetSwitchAudioEditorOperationCompleted(object arg) {
            if ((this.GetSwitchAudioEditorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSwitchAudioEditorCompleted(this, new GetSwitchAudioEditorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetSwitchMediaAsset", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSwitchMediaAsset() {
            object[] results = this.Invoke("GetSwitchMediaAsset", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSwitchMediaAssetAsync() {
            this.GetSwitchMediaAssetAsync(null);
        }
        
        /// <remarks/>
        public void GetSwitchMediaAssetAsync(object userState) {
            if ((this.GetSwitchMediaAssetOperationCompleted == null)) {
                this.GetSwitchMediaAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSwitchMediaAssetOperationCompleted);
            }
            this.InvokeAsync("GetSwitchMediaAsset", new object[0], this.GetSwitchMediaAssetOperationCompleted, userState);
        }
        
        private void OnGetSwitchMediaAssetOperationCompleted(object arg) {
            if ((this.GetSwitchMediaAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSwitchMediaAssetCompleted(this, new GetSwitchMediaAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetDefaultMessageSaveDays", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDefaultMessageSaveDays() {
            object[] results = this.Invoke("GetDefaultMessageSaveDays", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultMessageSaveDaysAsync() {
            this.GetDefaultMessageSaveDaysAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultMessageSaveDaysAsync(object userState) {
            if ((this.GetDefaultMessageSaveDaysOperationCompleted == null)) {
                this.GetDefaultMessageSaveDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultMessageSaveDaysOperationCompleted);
            }
            this.InvokeAsync("GetDefaultMessageSaveDays", new object[0], this.GetDefaultMessageSaveDaysOperationCompleted, userState);
        }
        
        private void OnGetDefaultMessageSaveDaysOperationCompleted(object arg) {
            if ((this.GetDefaultMessageSaveDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultMessageSaveDaysCompleted(this, new GetDefaultMessageSaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetDefaultATMSSaveDays", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDefaultATMSSaveDays() {
            object[] results = this.Invoke("GetDefaultATMSSaveDays", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultATMSSaveDaysAsync() {
            this.GetDefaultATMSSaveDaysAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultATMSSaveDaysAsync(object userState) {
            if ((this.GetDefaultATMSSaveDaysOperationCompleted == null)) {
                this.GetDefaultATMSSaveDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultATMSSaveDaysOperationCompleted);
            }
            this.InvokeAsync("GetDefaultATMSSaveDays", new object[0], this.GetDefaultATMSSaveDaysOperationCompleted, userState);
        }
        
        private void OnGetDefaultATMSSaveDaysOperationCompleted(object arg) {
            if ((this.GetDefaultATMSSaveDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultATMSSaveDaysCompleted(this, new GetDefaultATMSSaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetDefaultProjectSaveDays", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDefaultProjectSaveDays() {
            object[] results = this.Invoke("GetDefaultProjectSaveDays", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultProjectSaveDaysAsync() {
            this.GetDefaultProjectSaveDaysAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultProjectSaveDaysAsync(object userState) {
            if ((this.GetDefaultProjectSaveDaysOperationCompleted == null)) {
                this.GetDefaultProjectSaveDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultProjectSaveDaysOperationCompleted);
            }
            this.InvokeAsync("GetDefaultProjectSaveDays", new object[0], this.GetDefaultProjectSaveDaysOperationCompleted, userState);
        }
        
        private void OnGetDefaultProjectSaveDaysOperationCompleted(object arg) {
            if ((this.GetDefaultProjectSaveDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultProjectSaveDaysCompleted(this, new GetDefaultProjectSaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetShowProgramSupervice", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetShowProgramSupervice() {
            object[] results = this.Invoke("GetShowProgramSupervice", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetShowProgramSuperviceAsync() {
            this.GetShowProgramSuperviceAsync(null);
        }
        
        /// <remarks/>
        public void GetShowProgramSuperviceAsync(object userState) {
            if ((this.GetShowProgramSuperviceOperationCompleted == null)) {
                this.GetShowProgramSuperviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShowProgramSuperviceOperationCompleted);
            }
            this.InvokeAsync("GetShowProgramSupervice", new object[0], this.GetShowProgramSuperviceOperationCompleted, userState);
        }
        
        private void OnGetShowProgramSuperviceOperationCompleted(object arg) {
            if ((this.GetShowProgramSuperviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShowProgramSuperviceCompleted(this, new GetShowProgramSuperviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateProgram2JC", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProgram2JC(string programlibID, string programID, string userID) {
            object[] results = this.Invoke("UpdateProgram2JC", new object[] {
                        programlibID,
                        programID,
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgram2JCAsync(string programlibID, string programID, string userID) {
            this.UpdateProgram2JCAsync(programlibID, programID, userID, null);
        }
        
        /// <remarks/>
        public void UpdateProgram2JCAsync(string programlibID, string programID, string userID, object userState) {
            if ((this.UpdateProgram2JCOperationCompleted == null)) {
                this.UpdateProgram2JCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgram2JCOperationCompleted);
            }
            this.InvokeAsync("UpdateProgram2JC", new object[] {
                        programlibID,
                        programID,
                        userID}, this.UpdateProgram2JCOperationCompleted, userState);
        }
        
        private void OnUpdateProgram2JCOperationCompleted(object arg) {
            if ((this.UpdateProgram2JCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgram2JCCompleted(this, new UpdateProgram2JCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetJetsenWebService", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetJetsenWebService() {
            object[] results = this.Invoke("GetJetsenWebService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJetsenWebServiceAsync() {
            this.GetJetsenWebServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetJetsenWebServiceAsync(object userState) {
            if ((this.GetJetsenWebServiceOperationCompleted == null)) {
                this.GetJetsenWebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJetsenWebServiceOperationCompleted);
            }
            this.InvokeAsync("GetJetsenWebService", new object[0], this.GetJetsenWebServiceOperationCompleted, userState);
        }
        
        private void OnGetJetsenWebServiceOperationCompleted(object arg) {
            if ((this.GetJetsenWebServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJetsenWebServiceCompleted(this, new GetJetsenWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetJetsenWebServiceByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetJetsenWebServiceByZoneID(string zoneID) {
            object[] results = this.Invoke("GetJetsenWebServiceByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJetsenWebServiceByZoneIDAsync(string zoneID) {
            this.GetJetsenWebServiceByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetJetsenWebServiceByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetJetsenWebServiceByZoneIDOperationCompleted == null)) {
                this.GetJetsenWebServiceByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJetsenWebServiceByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetJetsenWebServiceByZoneID", new object[] {
                        zoneID}, this.GetJetsenWebServiceByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetJetsenWebServiceByZoneIDOperationCompleted(object arg) {
            if ((this.GetJetsenWebServiceByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJetsenWebServiceByZoneIDCompleted(this, new GetJetsenWebServiceByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetJetsenUumServiceWebServiceByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetJetsenUumServiceWebServiceByZoneID(string zoneID) {
            object[] results = this.Invoke("GetJetsenUumServiceWebServiceByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJetsenUumServiceWebServiceByZoneIDAsync(string zoneID) {
            this.GetJetsenUumServiceWebServiceByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetJetsenUumServiceWebServiceByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetJetsenUumServiceWebServiceByZoneIDOperationCompleted == null)) {
                this.GetJetsenUumServiceWebServiceByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJetsenUumServiceWebServiceByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetJetsenUumServiceWebServiceByZoneID", new object[] {
                        zoneID}, this.GetJetsenUumServiceWebServiceByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetJetsenUumServiceWebServiceByZoneIDOperationCompleted(object arg) {
            if ((this.GetJetsenUumServiceWebServiceByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJetsenUumServiceWebServiceByZoneIDCompleted(this, new GetJetsenUumServiceWebServiceByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFlowWebServiceByZone", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFlowWebServiceByZone(string zone) {
            object[] results = this.Invoke("GetFlowWebServiceByZone", new object[] {
                        zone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlowWebServiceByZoneAsync(string zone) {
            this.GetFlowWebServiceByZoneAsync(zone, null);
        }
        
        /// <remarks/>
        public void GetFlowWebServiceByZoneAsync(string zone, object userState) {
            if ((this.GetFlowWebServiceByZoneOperationCompleted == null)) {
                this.GetFlowWebServiceByZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlowWebServiceByZoneOperationCompleted);
            }
            this.InvokeAsync("GetFlowWebServiceByZone", new object[] {
                        zone}, this.GetFlowWebServiceByZoneOperationCompleted, userState);
        }
        
        private void OnGetFlowWebServiceByZoneOperationCompleted(object arg) {
            if ((this.GetFlowWebServiceByZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlowWebServiceByZoneCompleted(this, new GetFlowWebServiceByZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetCfgServiceByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCfgServiceByZoneID(string zoneID) {
            object[] results = this.Invoke("GetCfgServiceByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCfgServiceByZoneIDAsync(string zoneID) {
            this.GetCfgServiceByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetCfgServiceByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetCfgServiceByZoneIDOperationCompleted == null)) {
                this.GetCfgServiceByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCfgServiceByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetCfgServiceByZoneID", new object[] {
                        zoneID}, this.GetCfgServiceByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetCfgServiceByZoneIDOperationCompleted(object arg) {
            if ((this.GetCfgServiceByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCfgServiceByZoneIDCompleted(this, new GetCfgServiceByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetM2ServiceByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetM2ServiceByZoneID(string zoneID) {
            object[] results = this.Invoke("GetM2ServiceByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetM2ServiceByZoneIDAsync(string zoneID) {
            this.GetM2ServiceByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetM2ServiceByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetM2ServiceByZoneIDOperationCompleted == null)) {
                this.GetM2ServiceByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetM2ServiceByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetM2ServiceByZoneID", new object[] {
                        zoneID}, this.GetM2ServiceByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetM2ServiceByZoneIDOperationCompleted(object arg) {
            if ((this.GetM2ServiceByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetM2ServiceByZoneIDCompleted(this, new GetM2ServiceByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetM3SchedulerWebServiceZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetM3SchedulerWebServiceZoneID(string zoneID) {
            object[] results = this.Invoke("GetM3SchedulerWebServiceZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetM3SchedulerWebServiceZoneIDAsync(string zoneID) {
            this.GetM3SchedulerWebServiceZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetM3SchedulerWebServiceZoneIDAsync(string zoneID, object userState) {
            if ((this.GetM3SchedulerWebServiceZoneIDOperationCompleted == null)) {
                this.GetM3SchedulerWebServiceZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetM3SchedulerWebServiceZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetM3SchedulerWebServiceZoneID", new object[] {
                        zoneID}, this.GetM3SchedulerWebServiceZoneIDOperationCompleted, userState);
        }
        
        private void OnGetM3SchedulerWebServiceZoneIDOperationCompleted(object arg) {
            if ((this.GetM3SchedulerWebServiceZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetM3SchedulerWebServiceZoneIDCompleted(this, new GetM3SchedulerWebServiceZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetM3ServiceByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetM3ServiceByZoneID(string zoneID) {
            object[] results = this.Invoke("GetM3ServiceByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetM3ServiceByZoneIDAsync(string zoneID) {
            this.GetM3ServiceByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetM3ServiceByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetM3ServiceByZoneIDOperationCompleted == null)) {
                this.GetM3ServiceByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetM3ServiceByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetM3ServiceByZoneID", new object[] {
                        zoneID}, this.GetM3ServiceByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetM3ServiceByZoneIDOperationCompleted(object arg) {
            if ((this.GetM3ServiceByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetM3ServiceByZoneIDCompleted(this, new GetM3ServiceByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetEmbServieByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmbServieByZoneID(string zoneID) {
            object[] results = this.Invoke("GetEmbServieByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmbServieByZoneIDAsync(string zoneID) {
            this.GetEmbServieByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetEmbServieByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetEmbServieByZoneIDOperationCompleted == null)) {
                this.GetEmbServieByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmbServieByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetEmbServieByZoneID", new object[] {
                        zoneID}, this.GetEmbServieByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetEmbServieByZoneIDOperationCompleted(object arg) {
            if ((this.GetEmbServieByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmbServieByZoneIDCompleted(this, new GetEmbServieByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetEmbServieBakByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmbServieBakByZoneID(string zoneID) {
            object[] results = this.Invoke("GetEmbServieBakByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmbServieBakByZoneIDAsync(string zoneID) {
            this.GetEmbServieBakByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetEmbServieBakByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetEmbServieBakByZoneIDOperationCompleted == null)) {
                this.GetEmbServieBakByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmbServieBakByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetEmbServieBakByZoneID", new object[] {
                        zoneID}, this.GetEmbServieBakByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetEmbServieBakByZoneIDOperationCompleted(object arg) {
            if ((this.GetEmbServieBakByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmbServieBakByZoneIDCompleted(this, new GetEmbServieBakByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetS1ServieByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetS1ServieByZoneID(string zoneID) {
            object[] results = this.Invoke("GetS1ServieByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetS1ServieByZoneIDAsync(string zoneID) {
            this.GetS1ServieByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetS1ServieByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetS1ServieByZoneIDOperationCompleted == null)) {
                this.GetS1ServieByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetS1ServieByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetS1ServieByZoneID", new object[] {
                        zoneID}, this.GetS1ServieByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetS1ServieByZoneIDOperationCompleted(object arg) {
            if ((this.GetS1ServieByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetS1ServieByZoneIDCompleted(this, new GetS1ServieByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetS1ServieBakByZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetS1ServieBakByZoneID(string zoneID) {
            object[] results = this.Invoke("GetS1ServieBakByZoneID", new object[] {
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetS1ServieBakByZoneIDAsync(string zoneID) {
            this.GetS1ServieBakByZoneIDAsync(zoneID, null);
        }
        
        /// <remarks/>
        public void GetS1ServieBakByZoneIDAsync(string zoneID, object userState) {
            if ((this.GetS1ServieBakByZoneIDOperationCompleted == null)) {
                this.GetS1ServieBakByZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetS1ServieBakByZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetS1ServieBakByZoneID", new object[] {
                        zoneID}, this.GetS1ServieBakByZoneIDOperationCompleted, userState);
        }
        
        private void OnGetS1ServieBakByZoneIDOperationCompleted(object arg) {
            if ((this.GetS1ServieBakByZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetS1ServieBakByZoneIDCompleted(this, new GetS1ServieBakByZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPersonProgramLib", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPersonProgramLib() {
            object[] results = this.Invoke("GetPersonProgramLib", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonProgramLibAsync() {
            this.GetPersonProgramLibAsync(null);
        }
        
        /// <remarks/>
        public void GetPersonProgramLibAsync(object userState) {
            if ((this.GetPersonProgramLibOperationCompleted == null)) {
                this.GetPersonProgramLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonProgramLibOperationCompleted);
            }
            this.InvokeAsync("GetPersonProgramLib", new object[0], this.GetPersonProgramLibOperationCompleted, userState);
        }
        
        private void OnGetPersonProgramLibOperationCompleted(object arg) {
            if ((this.GetPersonProgramLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonProgramLibCompleted(this, new GetPersonProgramLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramLibInfoByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProgramLibInfoByUserID(string userID) {
            object[] results = this.Invoke("GetProgramLibInfoByUserID", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibInfoByUserIDAsync(string userID) {
            this.GetProgramLibInfoByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetProgramLibInfoByUserIDAsync(string userID, object userState) {
            if ((this.GetProgramLibInfoByUserIDOperationCompleted == null)) {
                this.GetProgramLibInfoByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibInfoByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibInfoByUserID", new object[] {
                        userID}, this.GetProgramLibInfoByUserIDOperationCompleted, userState);
        }
        
        private void OnGetProgramLibInfoByUserIDOperationCompleted(object arg) {
            if ((this.GetProgramLibInfoByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibInfoByUserIDCompleted(this, new GetProgramLibInfoByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramLibInfoByUserIDByType", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProgramLibInfoByUserIDByType(string userID, int type) {
            object[] results = this.Invoke("GetProgramLibInfoByUserIDByType", new object[] {
                        userID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramLibInfoByUserIDByTypeAsync(string userID, int type) {
            this.GetProgramLibInfoByUserIDByTypeAsync(userID, type, null);
        }
        
        /// <remarks/>
        public void GetProgramLibInfoByUserIDByTypeAsync(string userID, int type, object userState) {
            if ((this.GetProgramLibInfoByUserIDByTypeOperationCompleted == null)) {
                this.GetProgramLibInfoByUserIDByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramLibInfoByUserIDByTypeOperationCompleted);
            }
            this.InvokeAsync("GetProgramLibInfoByUserIDByType", new object[] {
                        userID,
                        type}, this.GetProgramLibInfoByUserIDByTypeOperationCompleted, userState);
        }
        
        private void OnGetProgramLibInfoByUserIDByTypeOperationCompleted(object arg) {
            if ((this.GetProgramLibInfoByUserIDByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramLibInfoByUserIDByTypeCompleted(this, new GetProgramLibInfoByUserIDByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetTrustFolderByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTrustFolderByUserID(string userID) {
            object[] results = this.Invoke("GetTrustFolderByUserID", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrustFolderByUserIDAsync(string userID) {
            this.GetTrustFolderByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetTrustFolderByUserIDAsync(string userID, object userState) {
            if ((this.GetTrustFolderByUserIDOperationCompleted == null)) {
                this.GetTrustFolderByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrustFolderByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetTrustFolderByUserID", new object[] {
                        userID}, this.GetTrustFolderByUserIDOperationCompleted, userState);
        }
        
        private void OnGetTrustFolderByUserIDOperationCompleted(object arg) {
            if ((this.GetTrustFolderByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrustFolderByUserIDCompleted(this, new GetTrustFolderByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderTableByProgramLibIDAndUserIDAndAccessType", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFolderTableByProgramLibIDAndUserIDAndAccessType(string programLibID, string userID, int accessType, bool isCanMake) {
            object[] results = this.Invoke("GetFolderTableByProgramLibIDAndUserIDAndAccessType", new object[] {
                        programLibID,
                        userID,
                        accessType,
                        isCanMake});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderTableByProgramLibIDAndUserIDAndAccessTypeAsync(string programLibID, string userID, int accessType, bool isCanMake) {
            this.GetFolderTableByProgramLibIDAndUserIDAndAccessTypeAsync(programLibID, userID, accessType, isCanMake, null);
        }
        
        /// <remarks/>
        public void GetFolderTableByProgramLibIDAndUserIDAndAccessTypeAsync(string programLibID, string userID, int accessType, bool isCanMake, object userState) {
            if ((this.GetFolderTableByProgramLibIDAndUserIDAndAccessTypeOperationCompleted == null)) {
                this.GetFolderTableByProgramLibIDAndUserIDAndAccessTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderTableByProgramLibIDAndUserIDAndAccessTypeOperationCompleted);
            }
            this.InvokeAsync("GetFolderTableByProgramLibIDAndUserIDAndAccessType", new object[] {
                        programLibID,
                        userID,
                        accessType,
                        isCanMake}, this.GetFolderTableByProgramLibIDAndUserIDAndAccessTypeOperationCompleted, userState);
        }
        
        private void OnGetFolderTableByProgramLibIDAndUserIDAndAccessTypeOperationCompleted(object arg) {
            if ((this.GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompleted(this, new GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetRightChannelTable", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRightChannelTable(string userID) {
            object[] results = this.Invoke("GetRightChannelTable", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRightChannelTableAsync(string userID) {
            this.GetRightChannelTableAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetRightChannelTableAsync(string userID, object userState) {
            if ((this.GetRightChannelTableOperationCompleted == null)) {
                this.GetRightChannelTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRightChannelTableOperationCompleted);
            }
            this.InvokeAsync("GetRightChannelTable", new object[] {
                        userID}, this.GetRightChannelTableOperationCompleted, userState);
        }
        
        private void OnGetRightChannelTableOperationCompleted(object arg) {
            if ((this.GetRightChannelTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRightChannelTableCompleted(this, new GetRightChannelTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramInFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetProgramInFolder(string folderID, string programLibID) {
            object[] results = this.Invoke("GetProgramInFolder", new object[] {
                        folderID,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramInFolderAsync(string folderID, string programLibID) {
            this.GetProgramInFolderAsync(folderID, programLibID, null);
        }
        
        /// <remarks/>
        public void GetProgramInFolderAsync(string folderID, string programLibID, object userState) {
            if ((this.GetProgramInFolderOperationCompleted == null)) {
                this.GetProgramInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramInFolderOperationCompleted);
            }
            this.InvokeAsync("GetProgramInFolder", new object[] {
                        folderID,
                        programLibID}, this.GetProgramInFolderOperationCompleted, userState);
        }
        
        private void OnGetProgramInFolderOperationCompleted(object arg) {
            if ((this.GetProgramInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramInFolderCompleted(this, new GetProgramInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderInFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFolderInFolder(string folderID, string programLibID) {
            object[] results = this.Invoke("GetFolderInFolder", new object[] {
                        folderID,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderInFolderAsync(string folderID, string programLibID) {
            this.GetFolderInFolderAsync(folderID, programLibID, null);
        }
        
        /// <remarks/>
        public void GetFolderInFolderAsync(string folderID, string programLibID, object userState) {
            if ((this.GetFolderInFolderOperationCompleted == null)) {
                this.GetFolderInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderInFolderOperationCompleted);
            }
            this.InvokeAsync("GetFolderInFolder", new object[] {
                        folderID,
                        programLibID}, this.GetFolderInFolderOperationCompleted, userState);
        }
        
        private void OnGetFolderInFolderOperationCompleted(object arg) {
            if ((this.GetFolderInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderInFolderCompleted(this, new GetFolderInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteFolder", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFolder(string folderID) {
            object[] results = this.Invoke("DeleteFolder", new object[] {
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(string folderID) {
            this.DeleteFolderAsync(folderID, null);
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(string folderID, object userState) {
            if ((this.DeleteFolderOperationCompleted == null)) {
                this.DeleteFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteFolder", new object[] {
                        folderID}, this.DeleteFolderOperationCompleted, userState);
        }
        
        private void OnDeleteFolderOperationCompleted(object arg) {
            if ((this.DeleteFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderCompleted(this, new DeleteFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserFolderRights", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserFolderRights(string userID, string folderIDs, string programLibID) {
            object[] results = this.Invoke("GetUserFolderRights", new object[] {
                        userID,
                        folderIDs,
                        programLibID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFolderRightsAsync(string userID, string folderIDs, string programLibID) {
            this.GetUserFolderRightsAsync(userID, folderIDs, programLibID, null);
        }
        
        /// <remarks/>
        public void GetUserFolderRightsAsync(string userID, string folderIDs, string programLibID, object userState) {
            if ((this.GetUserFolderRightsOperationCompleted == null)) {
                this.GetUserFolderRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFolderRightsOperationCompleted);
            }
            this.InvokeAsync("GetUserFolderRights", new object[] {
                        userID,
                        folderIDs,
                        programLibID}, this.GetUserFolderRightsOperationCompleted, userState);
        }
        
        private void OnGetUserFolderRightsOperationCompleted(object arg) {
            if ((this.GetUserFolderRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFolderRightsCompleted(this, new GetUserFolderRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserFolderRightsTable", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserFolderRightsTable(string userID, string folderIDs, string programLibID) {
            object[] results = this.Invoke("GetUserFolderRightsTable", new object[] {
                        userID,
                        folderIDs,
                        programLibID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFolderRightsTableAsync(string userID, string folderIDs, string programLibID) {
            this.GetUserFolderRightsTableAsync(userID, folderIDs, programLibID, null);
        }
        
        /// <remarks/>
        public void GetUserFolderRightsTableAsync(string userID, string folderIDs, string programLibID, object userState) {
            if ((this.GetUserFolderRightsTableOperationCompleted == null)) {
                this.GetUserFolderRightsTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFolderRightsTableOperationCompleted);
            }
            this.InvokeAsync("GetUserFolderRightsTable", new object[] {
                        userID,
                        folderIDs,
                        programLibID}, this.GetUserFolderRightsTableOperationCompleted, userState);
        }
        
        private void OnGetUserFolderRightsTableOperationCompleted(object arg) {
            if ((this.GetUserFolderRightsTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFolderRightsTableCompleted(this, new GetUserFolderRightsTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderTableByProgramLibID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFolderTableByProgramLibID(string programLibID) {
            object[] results = this.Invoke("GetFolderTableByProgramLibID", new object[] {
                        programLibID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderTableByProgramLibIDAsync(string programLibID) {
            this.GetFolderTableByProgramLibIDAsync(programLibID, null);
        }
        
        /// <remarks/>
        public void GetFolderTableByProgramLibIDAsync(string programLibID, object userState) {
            if ((this.GetFolderTableByProgramLibIDOperationCompleted == null)) {
                this.GetFolderTableByProgramLibIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderTableByProgramLibIDOperationCompleted);
            }
            this.InvokeAsync("GetFolderTableByProgramLibID", new object[] {
                        programLibID}, this.GetFolderTableByProgramLibIDOperationCompleted, userState);
        }
        
        private void OnGetFolderTableByProgramLibIDOperationCompleted(object arg) {
            if ((this.GetFolderTableByProgramLibIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderTableByProgramLibIDCompleted(this, new GetFolderTableByProgramLibIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderTableByFolderName", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFolderTableByFolderName(string folderNames) {
            object[] results = this.Invoke("GetFolderTableByFolderName", new object[] {
                        folderNames});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderTableByFolderNameAsync(string folderNames) {
            this.GetFolderTableByFolderNameAsync(folderNames, null);
        }
        
        /// <remarks/>
        public void GetFolderTableByFolderNameAsync(string folderNames, object userState) {
            if ((this.GetFolderTableByFolderNameOperationCompleted == null)) {
                this.GetFolderTableByFolderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderTableByFolderNameOperationCompleted);
            }
            this.InvokeAsync("GetFolderTableByFolderName", new object[] {
                        folderNames}, this.GetFolderTableByFolderNameOperationCompleted, userState);
        }
        
        private void OnGetFolderTableByFolderNameOperationCompleted(object arg) {
            if ((this.GetFolderTableByFolderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderTableByFolderNameCompleted(this, new GetFolderTableByFolderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/CheckTagsExsit", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckTagsExsit(string libID, string tag) {
            object[] results = this.Invoke("CheckTagsExsit", new object[] {
                        libID,
                        tag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTagsExsitAsync(string libID, string tag) {
            this.CheckTagsExsitAsync(libID, tag, null);
        }
        
        /// <remarks/>
        public void CheckTagsExsitAsync(string libID, string tag, object userState) {
            if ((this.CheckTagsExsitOperationCompleted == null)) {
                this.CheckTagsExsitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTagsExsitOperationCompleted);
            }
            this.InvokeAsync("CheckTagsExsit", new object[] {
                        libID,
                        tag}, this.CheckTagsExsitOperationCompleted, userState);
        }
        
        private void OnCheckTagsExsitOperationCompleted(object arg) {
            if ((this.CheckTagsExsitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTagsExsitCompleted(this, new CheckTagsExsitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UserLogin", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserLogin(string loginName, string password) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        loginName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string loginName, string password) {
            this.UserLoginAsync(loginName, password, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string loginName, string password, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        loginName,
                        password}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UserLoginWithOutPassword", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserLoginWithOutPassword(string loginName) {
            object[] results = this.Invoke("UserLoginWithOutPassword", new object[] {
                        loginName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginWithOutPasswordAsync(string loginName) {
            this.UserLoginWithOutPasswordAsync(loginName, null);
        }
        
        /// <remarks/>
        public void UserLoginWithOutPasswordAsync(string loginName, object userState) {
            if ((this.UserLoginWithOutPasswordOperationCompleted == null)) {
                this.UserLoginWithOutPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginWithOutPasswordOperationCompleted);
            }
            this.InvokeAsync("UserLoginWithOutPassword", new object[] {
                        loginName}, this.UserLoginWithOutPasswordOperationCompleted, userState);
        }
        
        private void OnUserLoginWithOutPasswordOperationCompleted(object arg) {
            if ((this.UserLoginWithOutPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginWithOutPasswordCompleted(this, new UserLoginWithOutPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateFolderInfoByFolderID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFolderInfoByFolderID(string folderid, string folderName) {
            object[] results = this.Invoke("UpdateFolderInfoByFolderID", new object[] {
                        folderid,
                        folderName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderInfoByFolderIDAsync(string folderid, string folderName) {
            this.UpdateFolderInfoByFolderIDAsync(folderid, folderName, null);
        }
        
        /// <remarks/>
        public void UpdateFolderInfoByFolderIDAsync(string folderid, string folderName, object userState) {
            if ((this.UpdateFolderInfoByFolderIDOperationCompleted == null)) {
                this.UpdateFolderInfoByFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderInfoByFolderIDOperationCompleted);
            }
            this.InvokeAsync("UpdateFolderInfoByFolderID", new object[] {
                        folderid,
                        folderName}, this.UpdateFolderInfoByFolderIDOperationCompleted, userState);
        }
        
        private void OnUpdateFolderInfoByFolderIDOperationCompleted(object arg) {
            if ((this.UpdateFolderInfoByFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderInfoByFolderIDCompleted(this, new UpdateFolderInfoByFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateFolderInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFolderInfo(string xml) {
            object[] results = this.Invoke("UpdateFolderInfo", new object[] {
                        xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderInfoAsync(string xml) {
            this.UpdateFolderInfoAsync(xml, null);
        }
        
        /// <remarks/>
        public void UpdateFolderInfoAsync(string xml, object userState) {
            if ((this.UpdateFolderInfoOperationCompleted == null)) {
                this.UpdateFolderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateFolderInfo", new object[] {
                        xml}, this.UpdateFolderInfoOperationCompleted, userState);
        }
        
        private void OnUpdateFolderInfoOperationCompleted(object arg) {
            if ((this.UpdateFolderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderInfoCompleted(this, new UpdateFolderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUsers", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUsers(string userID, string folderID, string programLibID, bool isPrj) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        userID,
                        folderID,
                        programLibID,
                        isPrj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(string userID, string folderID, string programLibID, bool isPrj) {
            this.GetUsersAsync(userID, folderID, programLibID, isPrj, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(string userID, string folderID, string programLibID, bool isPrj, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        userID,
                        folderID,
                        programLibID,
                        isPrj}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUsersTable", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUsersTable() {
            object[] results = this.Invoke("GetUsersTable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersTableAsync() {
            this.GetUsersTableAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersTableAsync(object userState) {
            if ((this.GetUsersTableOperationCompleted == null)) {
                this.GetUsersTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersTableOperationCompleted);
            }
            this.InvokeAsync("GetUsersTable", new object[0], this.GetUsersTableOperationCompleted, userState);
        }
        
        private void OnGetUsersTableOperationCompleted(object arg) {
            if ((this.GetUsersTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersTableCompleted(this, new GetUsersTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetTeleTable", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTeleTable() {
            object[] results = this.Invoke("GetTeleTable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTeleTableAsync() {
            this.GetTeleTableAsync(null);
        }
        
        /// <remarks/>
        public void GetTeleTableAsync(object userState) {
            if ((this.GetTeleTableOperationCompleted == null)) {
                this.GetTeleTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeleTableOperationCompleted);
            }
            this.InvokeAsync("GetTeleTable", new object[0], this.GetTeleTableOperationCompleted, userState);
        }
        
        private void OnGetTeleTableOperationCompleted(object arg) {
            if ((this.GetTeleTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeleTableCompleted(this, new GetTeleTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUser2TeleTable", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUser2TeleTable() {
            object[] results = this.Invoke("GetUser2TeleTable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUser2TeleTableAsync() {
            this.GetUser2TeleTableAsync(null);
        }
        
        /// <remarks/>
        public void GetUser2TeleTableAsync(object userState) {
            if ((this.GetUser2TeleTableOperationCompleted == null)) {
                this.GetUser2TeleTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUser2TeleTableOperationCompleted);
            }
            this.InvokeAsync("GetUser2TeleTable", new object[0], this.GetUser2TeleTableOperationCompleted, userState);
        }
        
        private void OnGetUser2TeleTableOperationCompleted(object arg) {
            if ((this.GetUser2TeleTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUser2TeleTableCompleted(this, new GetUser2TeleTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAllUsers", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllUsers() {
            object[] results = this.Invoke("GetAllUsers", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[0], this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateFolderIntrust", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFolderIntrust(string folderID, string userinfoXml) {
            object[] results = this.Invoke("UpdateFolderIntrust", new object[] {
                        folderID,
                        userinfoXml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderIntrustAsync(string folderID, string userinfoXml) {
            this.UpdateFolderIntrustAsync(folderID, userinfoXml, null);
        }
        
        /// <remarks/>
        public void UpdateFolderIntrustAsync(string folderID, string userinfoXml, object userState) {
            if ((this.UpdateFolderIntrustOperationCompleted == null)) {
                this.UpdateFolderIntrustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderIntrustOperationCompleted);
            }
            this.InvokeAsync("UpdateFolderIntrust", new object[] {
                        folderID,
                        userinfoXml}, this.UpdateFolderIntrustOperationCompleted, userState);
        }
        
        private void OnUpdateFolderIntrustOperationCompleted(object arg) {
            if ((this.UpdateFolderIntrustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderIntrustCompleted(this, new UpdateFolderIntrustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetLoggerFolderByProgramLibName", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLoggerFolderByProgramLibName(string programlibNumber) {
            object[] results = this.Invoke("GetLoggerFolderByProgramLibName", new object[] {
                        programlibNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoggerFolderByProgramLibNameAsync(string programlibNumber) {
            this.GetLoggerFolderByProgramLibNameAsync(programlibNumber, null);
        }
        
        /// <remarks/>
        public void GetLoggerFolderByProgramLibNameAsync(string programlibNumber, object userState) {
            if ((this.GetLoggerFolderByProgramLibNameOperationCompleted == null)) {
                this.GetLoggerFolderByProgramLibNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoggerFolderByProgramLibNameOperationCompleted);
            }
            this.InvokeAsync("GetLoggerFolderByProgramLibName", new object[] {
                        programlibNumber}, this.GetLoggerFolderByProgramLibNameOperationCompleted, userState);
        }
        
        private void OnGetLoggerFolderByProgramLibNameOperationCompleted(object arg) {
            if ((this.GetLoggerFolderByProgramLibNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoggerFolderByProgramLibNameCompleted(this, new GetLoggerFolderByProgramLibNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetTeleFolderByNameOrTeleNumber", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTeleFolderByNameOrTeleNumber(string folderName, string telenumber) {
            object[] results = this.Invoke("GetTeleFolderByNameOrTeleNumber", new object[] {
                        folderName,
                        telenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTeleFolderByNameOrTeleNumberAsync(string folderName, string telenumber) {
            this.GetTeleFolderByNameOrTeleNumberAsync(folderName, telenumber, null);
        }
        
        /// <remarks/>
        public void GetTeleFolderByNameOrTeleNumberAsync(string folderName, string telenumber, object userState) {
            if ((this.GetTeleFolderByNameOrTeleNumberOperationCompleted == null)) {
                this.GetTeleFolderByNameOrTeleNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeleFolderByNameOrTeleNumberOperationCompleted);
            }
            this.InvokeAsync("GetTeleFolderByNameOrTeleNumber", new object[] {
                        folderName,
                        telenumber}, this.GetTeleFolderByNameOrTeleNumberOperationCompleted, userState);
        }
        
        private void OnGetTeleFolderByNameOrTeleNumberOperationCompleted(object arg) {
            if ((this.GetTeleFolderByNameOrTeleNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeleFolderByNameOrTeleNumberCompleted(this, new GetTeleFolderByNameOrTeleNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetStorageByFolderID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStorageByFolderID(string folderID, int zoneID) {
            object[] results = this.Invoke("GetStorageByFolderID", new object[] {
                        folderID,
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageByFolderIDAsync(string folderID, int zoneID) {
            this.GetStorageByFolderIDAsync(folderID, zoneID, null);
        }
        
        /// <remarks/>
        public void GetStorageByFolderIDAsync(string folderID, int zoneID, object userState) {
            if ((this.GetStorageByFolderIDOperationCompleted == null)) {
                this.GetStorageByFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageByFolderIDOperationCompleted);
            }
            this.InvokeAsync("GetStorageByFolderID", new object[] {
                        folderID,
                        zoneID}, this.GetStorageByFolderIDOperationCompleted, userState);
        }
        
        private void OnGetStorageByFolderIDOperationCompleted(object arg) {
            if ((this.GetStorageByFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageByFolderIDCompleted(this, new GetStorageByFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetStorageByNewsFolderID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStorageByNewsFolderID(string folderID, out string ftpPath) {
            object[] results = this.Invoke("GetStorageByNewsFolderID", new object[] {
                        folderID});
            ftpPath = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageByNewsFolderIDAsync(string folderID) {
            this.GetStorageByNewsFolderIDAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetStorageByNewsFolderIDAsync(string folderID, object userState) {
            if ((this.GetStorageByNewsFolderIDOperationCompleted == null)) {
                this.GetStorageByNewsFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageByNewsFolderIDOperationCompleted);
            }
            this.InvokeAsync("GetStorageByNewsFolderID", new object[] {
                        folderID}, this.GetStorageByNewsFolderIDOperationCompleted, userState);
        }
        
        private void OnGetStorageByNewsFolderIDOperationCompleted(object arg) {
            if ((this.GetStorageByNewsFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageByNewsFolderIDCompleted(this, new GetStorageByNewsFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderPath", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFolderPath(string folderID) {
            object[] results = this.Invoke("GetFolderPath", new object[] {
                        folderID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderPathAsync(string folderID) {
            this.GetFolderPathAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetFolderPathAsync(string folderID, object userState) {
            if ((this.GetFolderPathOperationCompleted == null)) {
                this.GetFolderPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderPathOperationCompleted);
            }
            this.InvokeAsync("GetFolderPath", new object[] {
                        folderID}, this.GetFolderPathOperationCompleted, userState);
        }
        
        private void OnGetFolderPathOperationCompleted(object arg) {
            if ((this.GetFolderPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderPathCompleted(this, new GetFolderPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAllProgramLibName", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllProgramLibName() {
            object[] results = this.Invoke("GetAllProgramLibName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProgramLibNameAsync() {
            this.GetAllProgramLibNameAsync(null);
        }
        
        /// <remarks/>
        public void GetAllProgramLibNameAsync(object userState) {
            if ((this.GetAllProgramLibNameOperationCompleted == null)) {
                this.GetAllProgramLibNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProgramLibNameOperationCompleted);
            }
            this.InvokeAsync("GetAllProgramLibName", new object[0], this.GetAllProgramLibNameOperationCompleted, userState);
        }
        
        private void OnGetAllProgramLibNameOperationCompleted(object arg) {
            if ((this.GetAllProgramLibNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProgramLibNameCompleted(this, new GetAllProgramLibNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetAllProgramLibName2XStudio", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllProgramLibName2XStudio() {
            object[] results = this.Invoke("GetAllProgramLibName2XStudio", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProgramLibName2XStudioAsync() {
            this.GetAllProgramLibName2XStudioAsync(null);
        }
        
        /// <remarks/>
        public void GetAllProgramLibName2XStudioAsync(object userState) {
            if ((this.GetAllProgramLibName2XStudioOperationCompleted == null)) {
                this.GetAllProgramLibName2XStudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProgramLibName2XStudioOperationCompleted);
            }
            this.InvokeAsync("GetAllProgramLibName2XStudio", new object[0], this.GetAllProgramLibName2XStudioOperationCompleted, userState);
        }
        
        private void OnGetAllProgramLibName2XStudioOperationCompleted(object arg) {
            if ((this.GetAllProgramLibName2XStudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProgramLibName2XStudioCompleted(this, new GetAllProgramLibName2XStudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/InsertProgram2Media", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertProgram2Media(string mediaid, string programid, string ApplyUserID, string programTitle) {
            object[] results = this.Invoke("InsertProgram2Media", new object[] {
                        mediaid,
                        programid,
                        ApplyUserID,
                        programTitle});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertProgram2MediaAsync(string mediaid, string programid, string ApplyUserID, string programTitle) {
            this.InsertProgram2MediaAsync(mediaid, programid, ApplyUserID, programTitle, null);
        }
        
        /// <remarks/>
        public void InsertProgram2MediaAsync(string mediaid, string programid, string ApplyUserID, string programTitle, object userState) {
            if ((this.InsertProgram2MediaOperationCompleted == null)) {
                this.InsertProgram2MediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProgram2MediaOperationCompleted);
            }
            this.InvokeAsync("InsertProgram2Media", new object[] {
                        mediaid,
                        programid,
                        ApplyUserID,
                        programTitle}, this.InsertProgram2MediaOperationCompleted, userState);
        }
        
        private void OnInsertProgram2MediaOperationCompleted(object arg) {
            if ((this.InsertProgram2MediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProgram2MediaCompleted(this, new InsertProgram2MediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/InsertProgram2Media_New", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertProgram2Media_New(string mediaid, string programid, string ApplyUserID, string programTitle, int stationNumber) {
            object[] results = this.Invoke("InsertProgram2Media_New", new object[] {
                        mediaid,
                        programid,
                        ApplyUserID,
                        programTitle,
                        stationNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertProgram2Media_NewAsync(string mediaid, string programid, string ApplyUserID, string programTitle, int stationNumber) {
            this.InsertProgram2Media_NewAsync(mediaid, programid, ApplyUserID, programTitle, stationNumber, null);
        }
        
        /// <remarks/>
        public void InsertProgram2Media_NewAsync(string mediaid, string programid, string ApplyUserID, string programTitle, int stationNumber, object userState) {
            if ((this.InsertProgram2Media_NewOperationCompleted == null)) {
                this.InsertProgram2Media_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProgram2Media_NewOperationCompleted);
            }
            this.InvokeAsync("InsertProgram2Media_New", new object[] {
                        mediaid,
                        programid,
                        ApplyUserID,
                        programTitle,
                        stationNumber}, this.InsertProgram2Media_NewOperationCompleted, userState);
        }
        
        private void OnInsertProgram2Media_NewOperationCompleted(object arg) {
            if ((this.InsertProgram2Media_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProgram2Media_NewCompleted(this, new InsertProgram2Media_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateProgram2Media_NEW", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProgram2Media_NEW(string mediaID, int status) {
            object[] results = this.Invoke("UpdateProgram2Media_NEW", new object[] {
                        mediaID,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgram2Media_NEWAsync(string mediaID, int status) {
            this.UpdateProgram2Media_NEWAsync(mediaID, status, null);
        }
        
        /// <remarks/>
        public void UpdateProgram2Media_NEWAsync(string mediaID, int status, object userState) {
            if ((this.UpdateProgram2Media_NEWOperationCompleted == null)) {
                this.UpdateProgram2Media_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgram2Media_NEWOperationCompleted);
            }
            this.InvokeAsync("UpdateProgram2Media_NEW", new object[] {
                        mediaID,
                        status}, this.UpdateProgram2Media_NEWOperationCompleted, userState);
        }
        
        private void OnUpdateProgram2Media_NEWOperationCompleted(object arg) {
            if ((this.UpdateProgram2Media_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgram2Media_NEWCompleted(this, new UpdateProgram2Media_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateProgram2Media", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProgram2Media(string mediaID, int status) {
            object[] results = this.Invoke("UpdateProgram2Media", new object[] {
                        mediaID,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgram2MediaAsync(string mediaID, int status) {
            this.UpdateProgram2MediaAsync(mediaID, status, null);
        }
        
        /// <remarks/>
        public void UpdateProgram2MediaAsync(string mediaID, int status, object userState) {
            if ((this.UpdateProgram2MediaOperationCompleted == null)) {
                this.UpdateProgram2MediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgram2MediaOperationCompleted);
            }
            this.InvokeAsync("UpdateProgram2Media", new object[] {
                        mediaID,
                        status}, this.UpdateProgram2MediaOperationCompleted, userState);
        }
        
        private void OnUpdateProgram2MediaOperationCompleted(object arg) {
            if ((this.UpdateProgram2MediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgram2MediaCompleted(this, new UpdateProgram2MediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetStorageInfoByProgramLibNumber", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStorageInfoByProgramLibNumber(int programLibNumber, string zoneID) {
            object[] results = this.Invoke("GetStorageInfoByProgramLibNumber", new object[] {
                        programLibNumber,
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageInfoByProgramLibNumberAsync(int programLibNumber, string zoneID) {
            this.GetStorageInfoByProgramLibNumberAsync(programLibNumber, zoneID, null);
        }
        
        /// <remarks/>
        public void GetStorageInfoByProgramLibNumberAsync(int programLibNumber, string zoneID, object userState) {
            if ((this.GetStorageInfoByProgramLibNumberOperationCompleted == null)) {
                this.GetStorageInfoByProgramLibNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageInfoByProgramLibNumberOperationCompleted);
            }
            this.InvokeAsync("GetStorageInfoByProgramLibNumber", new object[] {
                        programLibNumber,
                        zoneID}, this.GetStorageInfoByProgramLibNumberOperationCompleted, userState);
        }
        
        private void OnGetStorageInfoByProgramLibNumberOperationCompleted(object arg) {
            if ((this.GetStorageInfoByProgramLibNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageInfoByProgramLibNumberCompleted(this, new GetStorageInfoByProgramLibNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/CheckProgramIDExist", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckProgramIDExist(string programID, string programLibID) {
            object[] results = this.Invoke("CheckProgramIDExist", new object[] {
                        programID,
                        programLibID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckProgramIDExistAsync(string programID, string programLibID) {
            this.CheckProgramIDExistAsync(programID, programLibID, null);
        }
        
        /// <remarks/>
        public void CheckProgramIDExistAsync(string programID, string programLibID, object userState) {
            if ((this.CheckProgramIDExistOperationCompleted == null)) {
                this.CheckProgramIDExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckProgramIDExistOperationCompleted);
            }
            this.InvokeAsync("CheckProgramIDExist", new object[] {
                        programID,
                        programLibID}, this.CheckProgramIDExistOperationCompleted, userState);
        }
        
        private void OnCheckProgramIDExistOperationCompleted(object arg) {
            if ((this.CheckProgramIDExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckProgramIDExistCompleted(this, new CheckProgramIDExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMyWorkAreaByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMyWorkAreaByUserID(string userID) {
            object[] results = this.Invoke("GetMyWorkAreaByUserID", new object[] {
                        userID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyWorkAreaByUserIDAsync(string userID) {
            this.GetMyWorkAreaByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetMyWorkAreaByUserIDAsync(string userID, object userState) {
            if ((this.GetMyWorkAreaByUserIDOperationCompleted == null)) {
                this.GetMyWorkAreaByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyWorkAreaByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetMyWorkAreaByUserID", new object[] {
                        userID}, this.GetMyWorkAreaByUserIDOperationCompleted, userState);
        }
        
        private void OnGetMyWorkAreaByUserIDOperationCompleted(object arg) {
            if ((this.GetMyWorkAreaByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyWorkAreaByUserIDCompleted(this, new GetMyWorkAreaByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserInfoByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfoByUserID(string userID) {
            object[] results = this.Invoke("GetUserInfoByUserID", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserIDAsync(string userID) {
            this.GetUserInfoByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserIDAsync(string userID, object userState) {
            if ((this.GetUserInfoByUserIDOperationCompleted == null)) {
                this.GetUserInfoByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserID", new object[] {
                        userID}, this.GetUserInfoByUserIDOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserIDOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserIDCompleted(this, new GetUserInfoByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserInfoByFullName", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfoByFullName(string fullName) {
            object[] results = this.Invoke("GetUserInfoByFullName", new object[] {
                        fullName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByFullNameAsync(string fullName) {
            this.GetUserInfoByFullNameAsync(fullName, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByFullNameAsync(string fullName, object userState) {
            if ((this.GetUserInfoByFullNameOperationCompleted == null)) {
                this.GetUserInfoByFullNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByFullNameOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByFullName", new object[] {
                        fullName}, this.GetUserInfoByFullNameOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByFullNameOperationCompleted(object arg) {
            if ((this.GetUserInfoByFullNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByFullNameCompleted(this, new GetUserInfoByFullNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderFreeSpace", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFolderFreeSpace(string folderID, string programLibID, string userID) {
            object[] results = this.Invoke("GetFolderFreeSpace", new object[] {
                        folderID,
                        programLibID,
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderFreeSpaceAsync(string folderID, string programLibID, string userID) {
            this.GetFolderFreeSpaceAsync(folderID, programLibID, userID, null);
        }
        
        /// <remarks/>
        public void GetFolderFreeSpaceAsync(string folderID, string programLibID, string userID, object userState) {
            if ((this.GetFolderFreeSpaceOperationCompleted == null)) {
                this.GetFolderFreeSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderFreeSpaceOperationCompleted);
            }
            this.InvokeAsync("GetFolderFreeSpace", new object[] {
                        folderID,
                        programLibID,
                        userID}, this.GetFolderFreeSpaceOperationCompleted, userState);
        }
        
        private void OnGetFolderFreeSpaceOperationCompleted(object arg) {
            if ((this.GetFolderFreeSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderFreeSpaceCompleted(this, new GetFolderFreeSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderFreeSpaceByType", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFolderFreeSpaceByType(string folderID, string programLibID, string userID, bool isPrj) {
            object[] results = this.Invoke("GetFolderFreeSpaceByType", new object[] {
                        folderID,
                        programLibID,
                        userID,
                        isPrj});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderFreeSpaceByTypeAsync(string folderID, string programLibID, string userID, bool isPrj) {
            this.GetFolderFreeSpaceByTypeAsync(folderID, programLibID, userID, isPrj, null);
        }
        
        /// <remarks/>
        public void GetFolderFreeSpaceByTypeAsync(string folderID, string programLibID, string userID, bool isPrj, object userState) {
            if ((this.GetFolderFreeSpaceByTypeOperationCompleted == null)) {
                this.GetFolderFreeSpaceByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderFreeSpaceByTypeOperationCompleted);
            }
            this.InvokeAsync("GetFolderFreeSpaceByType", new object[] {
                        folderID,
                        programLibID,
                        userID,
                        isPrj}, this.GetFolderFreeSpaceByTypeOperationCompleted, userState);
        }
        
        private void OnGetFolderFreeSpaceByTypeOperationCompleted(object arg) {
            if ((this.GetFolderFreeSpaceByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderFreeSpaceByTypeCompleted(this, new GetFolderFreeSpaceByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserSettings", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserSettings(string userid) {
            object[] results = this.Invoke("GetUserSettings", new object[] {
                        userid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSettingsAsync(string userid) {
            this.GetUserSettingsAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetUserSettingsAsync(string userid, object userState) {
            if ((this.GetUserSettingsOperationCompleted == null)) {
                this.GetUserSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSettingsOperationCompleted);
            }
            this.InvokeAsync("GetUserSettings", new object[] {
                        userid}, this.GetUserSettingsOperationCompleted, userState);
        }
        
        private void OnGetUserSettingsOperationCompleted(object arg) {
            if ((this.GetUserSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSettingsCompleted(this, new GetUserSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateUserPasswordAndUserSettings", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserPasswordAndUserSettings(string userid, string password, string pageCount) {
            object[] results = this.Invoke("UpdateUserPasswordAndUserSettings", new object[] {
                        userid,
                        password,
                        pageCount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAndUserSettingsAsync(string userid, string password, string pageCount) {
            this.UpdateUserPasswordAndUserSettingsAsync(userid, password, pageCount, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAndUserSettingsAsync(string userid, string password, string pageCount, object userState) {
            if ((this.UpdateUserPasswordAndUserSettingsOperationCompleted == null)) {
                this.UpdateUserPasswordAndUserSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordAndUserSettingsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPasswordAndUserSettings", new object[] {
                        userid,
                        password,
                        pageCount}, this.UpdateUserPasswordAndUserSettingsOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordAndUserSettingsOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordAndUserSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordAndUserSettingsCompleted(this, new UpdateUserPasswordAndUserSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateAnotherDBUserPassword", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAnotherDBUserPassword(System.Guid modifyUserID, string modifyUserName, string logName, string password) {
            this.Invoke("UpdateAnotherDBUserPassword", new object[] {
                        modifyUserID,
                        modifyUserName,
                        logName,
                        password});
        }
        
        /// <remarks/>
        public void UpdateAnotherDBUserPasswordAsync(System.Guid modifyUserID, string modifyUserName, string logName, string password) {
            this.UpdateAnotherDBUserPasswordAsync(modifyUserID, modifyUserName, logName, password, null);
        }
        
        /// <remarks/>
        public void UpdateAnotherDBUserPasswordAsync(System.Guid modifyUserID, string modifyUserName, string logName, string password, object userState) {
            if ((this.UpdateAnotherDBUserPasswordOperationCompleted == null)) {
                this.UpdateAnotherDBUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAnotherDBUserPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateAnotherDBUserPassword", new object[] {
                        modifyUserID,
                        modifyUserName,
                        logName,
                        password}, this.UpdateAnotherDBUserPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateAnotherDBUserPasswordOperationCompleted(object arg) {
            if ((this.UpdateAnotherDBUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAnotherDBUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SendMessage2GroupUser", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendMessage2GroupUser(string MessageInfoXML, string userID) {
            object[] results = this.Invoke("SendMessage2GroupUser", new object[] {
                        MessageInfoXML,
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessage2GroupUserAsync(string MessageInfoXML, string userID) {
            this.SendMessage2GroupUserAsync(MessageInfoXML, userID, null);
        }
        
        /// <remarks/>
        public void SendMessage2GroupUserAsync(string MessageInfoXML, string userID, object userState) {
            if ((this.SendMessage2GroupUserOperationCompleted == null)) {
                this.SendMessage2GroupUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessage2GroupUserOperationCompleted);
            }
            this.InvokeAsync("SendMessage2GroupUser", new object[] {
                        MessageInfoXML,
                        userID}, this.SendMessage2GroupUserOperationCompleted, userState);
        }
        
        private void OnSendMessage2GroupUserOperationCompleted(object arg) {
            if ((this.SendMessage2GroupUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessage2GroupUserCompleted(this, new SendMessage2GroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SendMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendMessage(string messageListXML) {
            object[] results = this.Invoke("SendMessage", new object[] {
                        messageListXML});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageAsync(string messageListXML) {
            this.SendMessageAsync(messageListXML, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string messageListXML, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        messageListXML}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SendSystemMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSystemMessage(string messageXML) {
            object[] results = this.Invoke("SendSystemMessage", new object[] {
                        messageXML});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSystemMessageAsync(string messageXML) {
            this.SendSystemMessageAsync(messageXML, null);
        }
        
        /// <remarks/>
        public void SendSystemMessageAsync(string messageXML, object userState) {
            if ((this.SendSystemMessageOperationCompleted == null)) {
                this.SendSystemMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSystemMessageOperationCompleted);
            }
            this.InvokeAsync("SendSystemMessage", new object[] {
                        messageXML}, this.SendSystemMessageOperationCompleted, userState);
        }
        
        private void OnSendSystemMessageOperationCompleted(object arg) {
            if ((this.SendSystemMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSystemMessageCompleted(this, new SendSystemMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUnReadMessageCount", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUnReadMessageCount(string userID) {
            object[] results = this.Invoke("GetUnReadMessageCount", new object[] {
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnReadMessageCountAsync(string userID) {
            this.GetUnReadMessageCountAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUnReadMessageCountAsync(string userID, object userState) {
            if ((this.GetUnReadMessageCountOperationCompleted == null)) {
                this.GetUnReadMessageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnReadMessageCountOperationCompleted);
            }
            this.InvokeAsync("GetUnReadMessageCount", new object[] {
                        userID}, this.GetUnReadMessageCountOperationCompleted, userState);
        }
        
        private void OnGetUnReadMessageCountOperationCompleted(object arg) {
            if ((this.GetUnReadMessageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnReadMessageCountCompleted(this, new GetUnReadMessageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/ReadMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReadMessage(string userid, string messageid) {
            object[] results = this.Invoke("ReadMessage", new object[] {
                        userid,
                        messageid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReadMessageAsync(string userid, string messageid) {
            this.ReadMessageAsync(userid, messageid, null);
        }
        
        /// <remarks/>
        public void ReadMessageAsync(string userid, string messageid, object userState) {
            if ((this.ReadMessageOperationCompleted == null)) {
                this.ReadMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMessageOperationCompleted);
            }
            this.InvokeAsync("ReadMessage", new object[] {
                        userid,
                        messageid}, this.ReadMessageOperationCompleted, userState);
        }
        
        private void OnReadMessageOperationCompleted(object arg) {
            if ((this.ReadMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMessageCompleted(this, new ReadMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/ReadSystemMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReadSystemMessage(string userid, string messageid) {
            object[] results = this.Invoke("ReadSystemMessage", new object[] {
                        userid,
                        messageid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReadSystemMessageAsync(string userid, string messageid) {
            this.ReadSystemMessageAsync(userid, messageid, null);
        }
        
        /// <remarks/>
        public void ReadSystemMessageAsync(string userid, string messageid, object userState) {
            if ((this.ReadSystemMessageOperationCompleted == null)) {
                this.ReadSystemMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadSystemMessageOperationCompleted);
            }
            this.InvokeAsync("ReadSystemMessage", new object[] {
                        userid,
                        messageid}, this.ReadSystemMessageOperationCompleted, userState);
        }
        
        private void OnReadSystemMessageOperationCompleted(object arg) {
            if ((this.ReadSystemMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadSystemMessageCompleted(this, new ReadSystemMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetSystemMessageBySenderID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSystemMessageBySenderID(string userID) {
            object[] results = this.Invoke("GetSystemMessageBySenderID", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemMessageBySenderIDAsync(string userID) {
            this.GetSystemMessageBySenderIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetSystemMessageBySenderIDAsync(string userID, object userState) {
            if ((this.GetSystemMessageBySenderIDOperationCompleted == null)) {
                this.GetSystemMessageBySenderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemMessageBySenderIDOperationCompleted);
            }
            this.InvokeAsync("GetSystemMessageBySenderID", new object[] {
                        userID}, this.GetSystemMessageBySenderIDOperationCompleted, userState);
        }
        
        private void OnGetSystemMessageBySenderIDOperationCompleted(object arg) {
            if ((this.GetSystemMessageBySenderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemMessageBySenderIDCompleted(this, new GetSystemMessageBySenderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUnReadSystemMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnReadSystemMessage(string userID) {
            object[] results = this.Invoke("GetUnReadSystemMessage", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnReadSystemMessageAsync(string userID) {
            this.GetUnReadSystemMessageAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUnReadSystemMessageAsync(string userID, object userState) {
            if ((this.GetUnReadSystemMessageOperationCompleted == null)) {
                this.GetUnReadSystemMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnReadSystemMessageOperationCompleted);
            }
            this.InvokeAsync("GetUnReadSystemMessage", new object[] {
                        userID}, this.GetUnReadSystemMessageOperationCompleted, userState);
        }
        
        private void OnGetUnReadSystemMessageOperationCompleted(object arg) {
            if ((this.GetUnReadSystemMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnReadSystemMessageCompleted(this, new GetUnReadSystemMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteMessage(string messageID) {
            object[] results = this.Invoke("DeleteMessage", new object[] {
                        messageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(string messageID) {
            this.DeleteMessageAsync(messageID, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(string messageID, object userState) {
            if ((this.DeleteMessageOperationCompleted == null)) {
                this.DeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteMessage", new object[] {
                        messageID}, this.DeleteMessageOperationCompleted, userState);
        }
        
        private void OnDeleteMessageOperationCompleted(object arg) {
            if ((this.DeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageCompleted(this, new DeleteMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsUserCanSendMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserCanSendMessage(string userID) {
            object[] results = this.Invoke("IsUserCanSendMessage", new object[] {
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserCanSendMessageAsync(string userID) {
            this.IsUserCanSendMessageAsync(userID, null);
        }
        
        /// <remarks/>
        public void IsUserCanSendMessageAsync(string userID, object userState) {
            if ((this.IsUserCanSendMessageOperationCompleted == null)) {
                this.IsUserCanSendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserCanSendMessageOperationCompleted);
            }
            this.InvokeAsync("IsUserCanSendMessage", new object[] {
                        userID}, this.IsUserCanSendMessageOperationCompleted, userState);
        }
        
        private void OnIsUserCanSendMessageOperationCompleted(object arg) {
            if ((this.IsUserCanSendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserCanSendMessageCompleted(this, new IsUserCanSendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsUserCanSendGroupMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserCanSendGroupMessage(string userID) {
            object[] results = this.Invoke("IsUserCanSendGroupMessage", new object[] {
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserCanSendGroupMessageAsync(string userID) {
            this.IsUserCanSendGroupMessageAsync(userID, null);
        }
        
        /// <remarks/>
        public void IsUserCanSendGroupMessageAsync(string userID, object userState) {
            if ((this.IsUserCanSendGroupMessageOperationCompleted == null)) {
                this.IsUserCanSendGroupMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserCanSendGroupMessageOperationCompleted);
            }
            this.InvokeAsync("IsUserCanSendGroupMessage", new object[] {
                        userID}, this.IsUserCanSendGroupMessageOperationCompleted, userState);
        }
        
        private void OnIsUserCanSendGroupMessageOperationCompleted(object arg) {
            if ((this.IsUserCanSendGroupMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserCanSendGroupMessageCompleted(this, new IsUserCanSendGroupMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanUnlock", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanUnlock(string userid, string folderID) {
            object[] results = this.Invoke("IsCanUnlock", new object[] {
                        userid,
                        folderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanUnlockAsync(string userid, string folderID) {
            this.IsCanUnlockAsync(userid, folderID, null);
        }
        
        /// <remarks/>
        public void IsCanUnlockAsync(string userid, string folderID, object userState) {
            if ((this.IsCanUnlockOperationCompleted == null)) {
                this.IsCanUnlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanUnlockOperationCompleted);
            }
            this.InvokeAsync("IsCanUnlock", new object[] {
                        userid,
                        folderID}, this.IsCanUnlockOperationCompleted, userState);
        }
        
        private void OnIsCanUnlockOperationCompleted(object arg) {
            if ((this.IsCanUnlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanUnlockCompleted(this, new IsCanUnlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetWebVersion", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWebVersion() {
            object[] results = this.Invoke("GetWebVersion", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebVersionAsync() {
            this.GetWebVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetWebVersionAsync(object userState) {
            if ((this.GetWebVersionOperationCompleted == null)) {
                this.GetWebVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebVersionOperationCompleted);
            }
            this.InvokeAsync("GetWebVersion", new object[0], this.GetWebVersionOperationCompleted, userState);
        }
        
        private void OnGetWebVersionOperationCompleted(object arg) {
            if ((this.GetWebVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebVersionCompleted(this, new GetWebVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/freeSpace", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string freeSpace(string iremlXml) {
            object[] results = this.Invoke("freeSpace", new object[] {
                        iremlXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void freeSpaceAsync(string iremlXml) {
            this.freeSpaceAsync(iremlXml, null);
        }
        
        /// <remarks/>
        public void freeSpaceAsync(string iremlXml, object userState) {
            if ((this.freeSpaceOperationCompleted == null)) {
                this.freeSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfreeSpaceOperationCompleted);
            }
            this.InvokeAsync("freeSpace", new object[] {
                        iremlXml}, this.freeSpaceOperationCompleted, userState);
        }
        
        private void OnfreeSpaceOperationCompleted(object arg) {
            if ((this.freeSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.freeSpaceCompleted(this, new freeSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/import", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string import(string iremlXml) {
            object[] results = this.Invoke("import", new object[] {
                        iremlXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void importAsync(string iremlXml) {
            this.importAsync(iremlXml, null);
        }
        
        /// <remarks/>
        public void importAsync(string iremlXml, object userState) {
            if ((this.importOperationCompleted == null)) {
                this.importOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportOperationCompleted);
            }
            this.InvokeAsync("import", new object[] {
                        iremlXml}, this.importOperationCompleted, userState);
        }
        
        private void OnimportOperationCompleted(object arg) {
            if ((this.importCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importCompleted(this, new importCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/queryValidate", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string queryValidate(string iremlXml) {
            object[] results = this.Invoke("queryValidate", new object[] {
                        iremlXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void queryValidateAsync(string iremlXml) {
            this.queryValidateAsync(iremlXml, null);
        }
        
        /// <remarks/>
        public void queryValidateAsync(string iremlXml, object userState) {
            if ((this.queryValidateOperationCompleted == null)) {
                this.queryValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryValidateOperationCompleted);
            }
            this.InvokeAsync("queryValidate", new object[] {
                        iremlXml}, this.queryValidateOperationCompleted, userState);
        }
        
        private void OnqueryValidateOperationCompleted(object arg) {
            if ((this.queryValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryValidateCompleted(this, new queryValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/getTargetInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTargetInfo(string iremlXml) {
            object[] results = this.Invoke("getTargetInfo", new object[] {
                        iremlXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTargetInfoAsync(string iremlXml) {
            this.getTargetInfoAsync(iremlXml, null);
        }
        
        /// <remarks/>
        public void getTargetInfoAsync(string iremlXml, object userState) {
            if ((this.getTargetInfoOperationCompleted == null)) {
                this.getTargetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTargetInfoOperationCompleted);
            }
            this.InvokeAsync("getTargetInfo", new object[] {
                        iremlXml}, this.getTargetInfoOperationCompleted, userState);
        }
        
        private void OngetTargetInfoOperationCompleted(object arg) {
            if ((this.getTargetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTargetInfoCompleted(this, new getTargetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/callback", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string callback(string iremlXml) {
            object[] results = this.Invoke("callback", new object[] {
                        iremlXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void callbackAsync(string iremlXml) {
            this.callbackAsync(iremlXml, null);
        }
        
        /// <remarks/>
        public void callbackAsync(string iremlXml, object userState) {
            if ((this.callbackOperationCompleted == null)) {
                this.callbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallbackOperationCompleted);
            }
            this.InvokeAsync("callback", new object[] {
                        iremlXml}, this.callbackOperationCompleted, userState);
        }
        
        private void OncallbackOperationCompleted(object arg) {
            if ((this.callbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callbackCompleted(this, new callbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/HelloWorld", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetSingleLoginStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSingleLoginStatus() {
            object[] results = this.Invoke("GetSingleLoginStatus", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleLoginStatusAsync() {
            this.GetSingleLoginStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetSingleLoginStatusAsync(object userState) {
            if ((this.GetSingleLoginStatusOperationCompleted == null)) {
                this.GetSingleLoginStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleLoginStatusOperationCompleted);
            }
            this.InvokeAsync("GetSingleLoginStatus", new object[0], this.GetSingleLoginStatusOperationCompleted, userState);
        }
        
        private void OnGetSingleLoginStatusOperationCompleted(object arg) {
            if ((this.GetSingleLoginStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleLoginStatusCompleted(this, new GetSingleLoginStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetIsUseJetsenUumService", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetIsUseJetsenUumService() {
            object[] results = this.Invoke("GetIsUseJetsenUumService", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsUseJetsenUumServiceAsync() {
            this.GetIsUseJetsenUumServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetIsUseJetsenUumServiceAsync(object userState) {
            if ((this.GetIsUseJetsenUumServiceOperationCompleted == null)) {
                this.GetIsUseJetsenUumServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsUseJetsenUumServiceOperationCompleted);
            }
            this.InvokeAsync("GetIsUseJetsenUumService", new object[0], this.GetIsUseJetsenUumServiceOperationCompleted, userState);
        }
        
        private void OnGetIsUseJetsenUumServiceOperationCompleted(object arg) {
            if ((this.GetIsUseJetsenUumServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsUseJetsenUumServiceCompleted(this, new GetIsUseJetsenUumServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetIsPassword2MD5", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetIsPassword2MD5() {
            object[] results = this.Invoke("GetIsPassword2MD5", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsPassword2MD5Async() {
            this.GetIsPassword2MD5Async(null);
        }
        
        /// <remarks/>
        public void GetIsPassword2MD5Async(object userState) {
            if ((this.GetIsPassword2MD5OperationCompleted == null)) {
                this.GetIsPassword2MD5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsPassword2MD5OperationCompleted);
            }
            this.InvokeAsync("GetIsPassword2MD5", new object[0], this.GetIsPassword2MD5OperationCompleted, userState);
        }
        
        private void OnGetIsPassword2MD5OperationCompleted(object arg) {
            if ((this.GetIsPassword2MD5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsPassword2MD5Completed(this, new GetIsPassword2MD5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPasswordLevel", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPasswordLevel() {
            object[] results = this.Invoke("GetPasswordLevel", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordLevelAsync() {
            this.GetPasswordLevelAsync(null);
        }
        
        /// <remarks/>
        public void GetPasswordLevelAsync(object userState) {
            if ((this.GetPasswordLevelOperationCompleted == null)) {
                this.GetPasswordLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordLevelOperationCompleted);
            }
            this.InvokeAsync("GetPasswordLevel", new object[0], this.GetPasswordLevelOperationCompleted, userState);
        }
        
        private void OnGetPasswordLevelOperationCompleted(object arg) {
            if ((this.GetPasswordLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordLevelCompleted(this, new GetPasswordLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetTreeStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTreeStatus() {
            object[] results = this.Invoke("GetTreeStatus", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeStatusAsync() {
            this.GetTreeStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetTreeStatusAsync(object userState) {
            if ((this.GetTreeStatusOperationCompleted == null)) {
                this.GetTreeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeStatusOperationCompleted);
            }
            this.InvokeAsync("GetTreeStatus", new object[0], this.GetTreeStatusOperationCompleted, userState);
        }
        
        private void OnGetTreeStatusOperationCompleted(object arg) {
            if ((this.GetTreeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeStatusCompleted(this, new GetTreeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetTreeDisplay", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTreeDisplay() {
            object[] results = this.Invoke("GetTreeDisplay", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeDisplayAsync() {
            this.GetTreeDisplayAsync(null);
        }
        
        /// <remarks/>
        public void GetTreeDisplayAsync(object userState) {
            if ((this.GetTreeDisplayOperationCompleted == null)) {
                this.GetTreeDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeDisplayOperationCompleted);
            }
            this.InvokeAsync("GetTreeDisplay", new object[0], this.GetTreeDisplayOperationCompleted, userState);
        }
        
        private void OnGetTreeDisplayOperationCompleted(object arg) {
            if ((this.GetTreeDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeDisplayCompleted(this, new GetTreeDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProjectSaveType", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetProjectSaveType() {
            object[] results = this.Invoke("GetProjectSaveType", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectSaveTypeAsync() {
            this.GetProjectSaveTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectSaveTypeAsync(object userState) {
            if ((this.GetProjectSaveTypeOperationCompleted == null)) {
                this.GetProjectSaveTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectSaveTypeOperationCompleted);
            }
            this.InvokeAsync("GetProjectSaveType", new object[0], this.GetProjectSaveTypeOperationCompleted, userState);
        }
        
        private void OnGetProjectSaveTypeOperationCompleted(object arg) {
            if ((this.GetProjectSaveTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectSaveTypeCompleted(this, new GetProjectSaveTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetIsICCardLogin", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetIsICCardLogin() {
            object[] results = this.Invoke("GetIsICCardLogin", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsICCardLoginAsync() {
            this.GetIsICCardLoginAsync(null);
        }
        
        /// <remarks/>
        public void GetIsICCardLoginAsync(object userState) {
            if ((this.GetIsICCardLoginOperationCompleted == null)) {
                this.GetIsICCardLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsICCardLoginOperationCompleted);
            }
            this.InvokeAsync("GetIsICCardLogin", new object[0], this.GetIsICCardLoginOperationCompleted, userState);
        }
        
        private void OnGetIsICCardLoginOperationCompleted(object arg) {
            if ((this.GetIsICCardLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsICCardLoginCompleted(this, new GetIsICCardLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetIsShowWorkTaskMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetIsShowWorkTaskMessage() {
            object[] results = this.Invoke("GetIsShowWorkTaskMessage", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsShowWorkTaskMessageAsync() {
            this.GetIsShowWorkTaskMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetIsShowWorkTaskMessageAsync(object userState) {
            if ((this.GetIsShowWorkTaskMessageOperationCompleted == null)) {
                this.GetIsShowWorkTaskMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsShowWorkTaskMessageOperationCompleted);
            }
            this.InvokeAsync("GetIsShowWorkTaskMessage", new object[0], this.GetIsShowWorkTaskMessageOperationCompleted, userState);
        }
        
        private void OnGetIsShowWorkTaskMessageOperationCompleted(object arg) {
            if ((this.GetIsShowWorkTaskMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsShowWorkTaskMessageCompleted(this, new GetIsShowWorkTaskMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetOtherBroadcastSystemService", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOtherBroadcastSystemService() {
            object[] results = this.Invoke("GetOtherBroadcastSystemService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOtherBroadcastSystemServiceAsync() {
            this.GetOtherBroadcastSystemServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetOtherBroadcastSystemServiceAsync(object userState) {
            if ((this.GetOtherBroadcastSystemServiceOperationCompleted == null)) {
                this.GetOtherBroadcastSystemServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtherBroadcastSystemServiceOperationCompleted);
            }
            this.InvokeAsync("GetOtherBroadcastSystemService", new object[0], this.GetOtherBroadcastSystemServiceOperationCompleted, userState);
        }
        
        private void OnGetOtherBroadcastSystemServiceOperationCompleted(object arg) {
            if ((this.GetOtherBroadcastSystemServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtherBroadcastSystemServiceCompleted(this, new GetOtherBroadcastSystemServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetWorkTaskCallBackService", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWorkTaskCallBackService() {
            object[] results = this.Invoke("GetWorkTaskCallBackService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkTaskCallBackServiceAsync() {
            this.GetWorkTaskCallBackServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetWorkTaskCallBackServiceAsync(object userState) {
            if ((this.GetWorkTaskCallBackServiceOperationCompleted == null)) {
                this.GetWorkTaskCallBackServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkTaskCallBackServiceOperationCompleted);
            }
            this.InvokeAsync("GetWorkTaskCallBackService", new object[0], this.GetWorkTaskCallBackServiceOperationCompleted, userState);
        }
        
        private void OnGetWorkTaskCallBackServiceOperationCompleted(object arg) {
            if ((this.GetWorkTaskCallBackServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkTaskCallBackServiceCompleted(this, new GetWorkTaskCallBackServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetSharedStorageFTPPath", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSharedStorageFTPPath() {
            object[] results = this.Invoke("GetSharedStorageFTPPath", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSharedStorageFTPPathAsync() {
            this.GetSharedStorageFTPPathAsync(null);
        }
        
        /// <remarks/>
        public void GetSharedStorageFTPPathAsync(object userState) {
            if ((this.GetSharedStorageFTPPathOperationCompleted == null)) {
                this.GetSharedStorageFTPPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharedStorageFTPPathOperationCompleted);
            }
            this.InvokeAsync("GetSharedStorageFTPPath", new object[0], this.GetSharedStorageFTPPathOperationCompleted, userState);
        }
        
        private void OnGetSharedStorageFTPPathOperationCompleted(object arg) {
            if ((this.GetSharedStorageFTPPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharedStorageFTPPathCompleted(this, new GetSharedStorageFTPPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetRecycleManager", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRecycleManager() {
            object[] results = this.Invoke("GetRecycleManager", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecycleManagerAsync() {
            this.GetRecycleManagerAsync(null);
        }
        
        /// <remarks/>
        public void GetRecycleManagerAsync(object userState) {
            if ((this.GetRecycleManagerOperationCompleted == null)) {
                this.GetRecycleManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecycleManagerOperationCompleted);
            }
            this.InvokeAsync("GetRecycleManager", new object[0], this.GetRecycleManagerOperationCompleted, userState);
        }
        
        private void OnGetRecycleManagerOperationCompleted(object arg) {
            if ((this.GetRecycleManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecycleManagerCompleted(this, new GetRecycleManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetOnairRecycle", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOnairRecycle() {
            object[] results = this.Invoke("GetOnairRecycle", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnairRecycleAsync() {
            this.GetOnairRecycleAsync(null);
        }
        
        /// <remarks/>
        public void GetOnairRecycleAsync(object userState) {
            if ((this.GetOnairRecycleOperationCompleted == null)) {
                this.GetOnairRecycleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnairRecycleOperationCompleted);
            }
            this.InvokeAsync("GetOnairRecycle", new object[0], this.GetOnairRecycleOperationCompleted, userState);
        }
        
        private void OnGetOnairRecycleOperationCompleted(object arg) {
            if ((this.GetOnairRecycleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnairRecycleCompleted(this, new GetOnairRecycleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetRealDeleteFile", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRealDeleteFile() {
            object[] results = this.Invoke("GetRealDeleteFile", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealDeleteFileAsync() {
            this.GetRealDeleteFileAsync(null);
        }
        
        /// <remarks/>
        public void GetRealDeleteFileAsync(object userState) {
            if ((this.GetRealDeleteFileOperationCompleted == null)) {
                this.GetRealDeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealDeleteFileOperationCompleted);
            }
            this.InvokeAsync("GetRealDeleteFile", new object[0], this.GetRealDeleteFileOperationCompleted, userState);
        }
        
        private void OnGetRealDeleteFileOperationCompleted(object arg) {
            if ((this.GetRealDeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealDeleteFileCompleted(this, new GetRealDeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetErrorPassCount", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetErrorPassCount() {
            object[] results = this.Invoke("GetErrorPassCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorPassCountAsync() {
            this.GetErrorPassCountAsync(null);
        }
        
        /// <remarks/>
        public void GetErrorPassCountAsync(object userState) {
            if ((this.GetErrorPassCountOperationCompleted == null)) {
                this.GetErrorPassCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorPassCountOperationCompleted);
            }
            this.InvokeAsync("GetErrorPassCount", new object[0], this.GetErrorPassCountOperationCompleted, userState);
        }
        
        private void OnGetErrorPassCountOperationCompleted(object arg) {
            if ((this.GetErrorPassCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorPassCountCompleted(this, new GetErrorPassCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetBasicX1Zone", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBasicX1Zone() {
            object[] results = this.Invoke("GetBasicX1Zone", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicX1ZoneAsync() {
            this.GetBasicX1ZoneAsync(null);
        }
        
        /// <remarks/>
        public void GetBasicX1ZoneAsync(object userState) {
            if ((this.GetBasicX1ZoneOperationCompleted == null)) {
                this.GetBasicX1ZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicX1ZoneOperationCompleted);
            }
            this.InvokeAsync("GetBasicX1Zone", new object[0], this.GetBasicX1ZoneOperationCompleted, userState);
        }
        
        private void OnGetBasicX1ZoneOperationCompleted(object arg) {
            if ((this.GetBasicX1ZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicX1ZoneCompleted(this, new GetBasicX1ZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetBasicOnairZone", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBasicOnairZone() {
            object[] results = this.Invoke("GetBasicOnairZone", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicOnairZoneAsync() {
            this.GetBasicOnairZoneAsync(null);
        }
        
        /// <remarks/>
        public void GetBasicOnairZoneAsync(object userState) {
            if ((this.GetBasicOnairZoneOperationCompleted == null)) {
                this.GetBasicOnairZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicOnairZoneOperationCompleted);
            }
            this.InvokeAsync("GetBasicOnairZone", new object[0], this.GetBasicOnairZoneOperationCompleted, userState);
        }
        
        private void OnGetBasicOnairZoneOperationCompleted(object arg) {
            if ((this.GetBasicOnairZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicOnairZoneCompleted(this, new GetBasicOnairZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetJingle2Media", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetJingle2Media() {
            object[] results = this.Invoke("GetJingle2Media", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetJingle2MediaAsync() {
            this.GetJingle2MediaAsync(null);
        }
        
        /// <remarks/>
        public void GetJingle2MediaAsync(object userState) {
            if ((this.GetJingle2MediaOperationCompleted == null)) {
                this.GetJingle2MediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJingle2MediaOperationCompleted);
            }
            this.InvokeAsync("GetJingle2Media", new object[0], this.GetJingle2MediaOperationCompleted, userState);
        }
        
        private void OnGetJingle2MediaOperationCompleted(object arg) {
            if ((this.GetJingle2MediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJingle2MediaCompleted(this, new GetJingle2MediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsUserSingleLogin", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserSingleLogin(string userID, out string status) {
            object[] results = this.Invoke("IsUserSingleLogin", new object[] {
                        userID});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserSingleLoginAsync(string userID) {
            this.IsUserSingleLoginAsync(userID, null);
        }
        
        /// <remarks/>
        public void IsUserSingleLoginAsync(string userID, object userState) {
            if ((this.IsUserSingleLoginOperationCompleted == null)) {
                this.IsUserSingleLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserSingleLoginOperationCompleted);
            }
            this.InvokeAsync("IsUserSingleLogin", new object[] {
                        userID}, this.IsUserSingleLoginOperationCompleted, userState);
        }
        
        private void OnIsUserSingleLoginOperationCompleted(object arg) {
            if ((this.IsUserSingleLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserSingleLoginCompleted(this, new IsUserSingleLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetLockedUser", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLockedUser() {
            object[] results = this.Invoke("GetLockedUser", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLockedUserAsync() {
            this.GetLockedUserAsync(null);
        }
        
        /// <remarks/>
        public void GetLockedUserAsync(object userState) {
            if ((this.GetLockedUserOperationCompleted == null)) {
                this.GetLockedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLockedUserOperationCompleted);
            }
            this.InvokeAsync("GetLockedUser", new object[0], this.GetLockedUserOperationCompleted, userState);
        }
        
        private void OnGetLockedUserOperationCompleted(object arg) {
            if ((this.GetLockedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLockedUserCompleted(this, new GetLockedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetLockedUser1", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLockedUser1() {
            object[] results = this.Invoke("GetLockedUser1", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLockedUser1Async() {
            this.GetLockedUser1Async(null);
        }
        
        /// <remarks/>
        public void GetLockedUser1Async(object userState) {
            if ((this.GetLockedUser1OperationCompleted == null)) {
                this.GetLockedUser1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLockedUser1OperationCompleted);
            }
            this.InvokeAsync("GetLockedUser1", new object[0], this.GetLockedUser1OperationCompleted, userState);
        }
        
        private void OnGetLockedUser1OperationCompleted(object arg) {
            if ((this.GetLockedUser1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLockedUser1Completed(this, new GetLockedUser1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteUserLoginInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUserLoginInfo(string userID) {
            object[] results = this.Invoke("DeleteUserLoginInfo", new object[] {
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserLoginInfoAsync(string userID) {
            this.DeleteUserLoginInfoAsync(userID, null);
        }
        
        /// <remarks/>
        public void DeleteUserLoginInfoAsync(string userID, object userState) {
            if ((this.DeleteUserLoginInfoOperationCompleted == null)) {
                this.DeleteUserLoginInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserLoginInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteUserLoginInfo", new object[] {
                        userID}, this.DeleteUserLoginInfoOperationCompleted, userState);
        }
        
        private void OnDeleteUserLoginInfoOperationCompleted(object arg) {
            if ((this.DeleteUserLoginInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserLoginInfoCompleted(this, new DeleteUserLoginInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteUserLoginEX", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUserLoginEX(string UserLoginName) {
            object[] results = this.Invoke("DeleteUserLoginEX", new object[] {
                        UserLoginName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserLoginEXAsync(string UserLoginName) {
            this.DeleteUserLoginEXAsync(UserLoginName, null);
        }
        
        /// <remarks/>
        public void DeleteUserLoginEXAsync(string UserLoginName, object userState) {
            if ((this.DeleteUserLoginEXOperationCompleted == null)) {
                this.DeleteUserLoginEXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserLoginEXOperationCompleted);
            }
            this.InvokeAsync("DeleteUserLoginEX", new object[] {
                        UserLoginName}, this.DeleteUserLoginEXOperationCompleted, userState);
        }
        
        private void OnDeleteUserLoginEXOperationCompleted(object arg) {
            if ((this.DeleteUserLoginEXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserLoginEXCompleted(this, new DeleteUserLoginEXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateUserLoginInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserLoginInfo(string userID, string compute, string ip) {
            object[] results = this.Invoke("UpdateUserLoginInfo", new object[] {
                        userID,
                        compute,
                        ip});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserLoginInfoAsync(string userID, string compute, string ip) {
            this.UpdateUserLoginInfoAsync(userID, compute, ip, null);
        }
        
        /// <remarks/>
        public void UpdateUserLoginInfoAsync(string userID, string compute, string ip, object userState) {
            if ((this.UpdateUserLoginInfoOperationCompleted == null)) {
                this.UpdateUserLoginInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserLoginInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserLoginInfo", new object[] {
                        userID,
                        compute,
                        ip}, this.UpdateUserLoginInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserLoginInfoOperationCompleted(object arg) {
            if ((this.UpdateUserLoginInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserLoginInfoCompleted(this, new UpdateUserLoginInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetItem2MeidaStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetItem2MeidaStatus(string itemIDs) {
            object[] results = this.Invoke("GetItem2MeidaStatus", new object[] {
                        itemIDs});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetItem2MeidaStatusAsync(string itemIDs) {
            this.GetItem2MeidaStatusAsync(itemIDs, null);
        }
        
        /// <remarks/>
        public void GetItem2MeidaStatusAsync(string itemIDs, object userState) {
            if ((this.GetItem2MeidaStatusOperationCompleted == null)) {
                this.GetItem2MeidaStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItem2MeidaStatusOperationCompleted);
            }
            this.InvokeAsync("GetItem2MeidaStatus", new object[] {
                        itemIDs}, this.GetItem2MeidaStatusOperationCompleted, userState);
        }
        
        private void OnGetItem2MeidaStatusOperationCompleted(object arg) {
            if ((this.GetItem2MeidaStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItem2MeidaStatusCompleted(this, new GetItem2MeidaStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetServerDate", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDate() {
            object[] results = this.Invoke("GetServerDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateAsync() {
            this.GetServerDateAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateAsync(object userState) {
            if ((this.GetServerDateOperationCompleted == null)) {
                this.GetServerDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateOperationCompleted);
            }
            this.InvokeAsync("GetServerDate", new object[0], this.GetServerDateOperationCompleted, userState);
        }
        
        private void OnGetServerDateOperationCompleted(object arg) {
            if ((this.GetServerDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateCompleted(this, new GetServerDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetStorageByStorageIDAndZoneID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStorageByStorageIDAndZoneID(string storageID, string zoneID) {
            object[] results = this.Invoke("GetStorageByStorageIDAndZoneID", new object[] {
                        storageID,
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageByStorageIDAndZoneIDAsync(string storageID, string zoneID) {
            this.GetStorageByStorageIDAndZoneIDAsync(storageID, zoneID, null);
        }
        
        /// <remarks/>
        public void GetStorageByStorageIDAndZoneIDAsync(string storageID, string zoneID, object userState) {
            if ((this.GetStorageByStorageIDAndZoneIDOperationCompleted == null)) {
                this.GetStorageByStorageIDAndZoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageByStorageIDAndZoneIDOperationCompleted);
            }
            this.InvokeAsync("GetStorageByStorageIDAndZoneID", new object[] {
                        storageID,
                        zoneID}, this.GetStorageByStorageIDAndZoneIDOperationCompleted, userState);
        }
        
        private void OnGetStorageByStorageIDAndZoneIDOperationCompleted(object arg) {
            if ((this.GetStorageByStorageIDAndZoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageByStorageIDAndZoneIDCompleted(this, new GetStorageByStorageIDAndZoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserInfoByUserLoginName", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfoByUserLoginName(string loginName, out string fullName) {
            object[] results = this.Invoke("GetUserInfoByUserLoginName", new object[] {
                        loginName});
            fullName = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserLoginNameAsync(string loginName) {
            this.GetUserInfoByUserLoginNameAsync(loginName, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserLoginNameAsync(string loginName, object userState) {
            if ((this.GetUserInfoByUserLoginNameOperationCompleted == null)) {
                this.GetUserInfoByUserLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserLoginName", new object[] {
                        loginName}, this.GetUserInfoByUserLoginNameOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserLoginNameOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserLoginNameCompleted(this, new GetUserInfoByUserLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserInfoByUserICNumber", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfoByUserICNumber(string iccard) {
            object[] results = this.Invoke("GetUserInfoByUserICNumber", new object[] {
                        iccard});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserICNumberAsync(string iccard) {
            this.GetUserInfoByUserICNumberAsync(iccard, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserICNumberAsync(string iccard, object userState) {
            if ((this.GetUserInfoByUserICNumberOperationCompleted == null)) {
                this.GetUserInfoByUserICNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserICNumberOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserICNumber", new object[] {
                        iccard}, this.GetUserInfoByUserICNumberOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserICNumberOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserICNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserICNumberCompleted(this, new GetUserInfoByUserICNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserBaseInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserBaseInfo(string userID) {
            object[] results = this.Invoke("GetUserBaseInfo", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBaseInfoAsync(string userID) {
            this.GetUserBaseInfoAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserBaseInfoAsync(string userID, object userState) {
            if ((this.GetUserBaseInfoOperationCompleted == null)) {
                this.GetUserBaseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBaseInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserBaseInfo", new object[] {
                        userID}, this.GetUserBaseInfoOperationCompleted, userState);
        }
        
        private void OnGetUserBaseInfoOperationCompleted(object arg) {
            if ((this.GetUserBaseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBaseInfoCompleted(this, new GetUserBaseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetXStudioBaseInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXStudioBaseInfo(int zone) {
            object[] results = this.Invoke("GetXStudioBaseInfo", new object[] {
                        zone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXStudioBaseInfoAsync(int zone) {
            this.GetXStudioBaseInfoAsync(zone, null);
        }
        
        /// <remarks/>
        public void GetXStudioBaseInfoAsync(int zone, object userState) {
            if ((this.GetXStudioBaseInfoOperationCompleted == null)) {
                this.GetXStudioBaseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXStudioBaseInfoOperationCompleted);
            }
            this.InvokeAsync("GetXStudioBaseInfo", new object[] {
                        zone}, this.GetXStudioBaseInfoOperationCompleted, userState);
        }
        
        private void OnGetXStudioBaseInfoOperationCompleted(object arg) {
            if ((this.GetXStudioBaseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXStudioBaseInfoCompleted(this, new GetXStudioBaseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserFolderRightInfo", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserFolderRightInfo(string userID, string folderID) {
            object[] results = this.Invoke("GetUserFolderRightInfo", new object[] {
                        userID,
                        folderID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFolderRightInfoAsync(string userID, string folderID) {
            this.GetUserFolderRightInfoAsync(userID, folderID, null);
        }
        
        /// <remarks/>
        public void GetUserFolderRightInfoAsync(string userID, string folderID, object userState) {
            if ((this.GetUserFolderRightInfoOperationCompleted == null)) {
                this.GetUserFolderRightInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFolderRightInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserFolderRightInfo", new object[] {
                        userID,
                        folderID}, this.GetUserFolderRightInfoOperationCompleted, userState);
        }
        
        private void OnGetUserFolderRightInfoOperationCompleted(object arg) {
            if ((this.GetUserFolderRightInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFolderRightInfoCompleted(this, new GetUserFolderRightInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMyFolderInfoByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMyFolderInfoByUserID(string userID, out string programlibid) {
            object[] results = this.Invoke("GetMyFolderInfoByUserID", new object[] {
                        userID});
            programlibid = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyFolderInfoByUserIDAsync(string userID) {
            this.GetMyFolderInfoByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetMyFolderInfoByUserIDAsync(string userID, object userState) {
            if ((this.GetMyFolderInfoByUserIDOperationCompleted == null)) {
                this.GetMyFolderInfoByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyFolderInfoByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetMyFolderInfoByUserID", new object[] {
                        userID}, this.GetMyFolderInfoByUserIDOperationCompleted, userState);
        }
        
        private void OnGetMyFolderInfoByUserIDOperationCompleted(object arg) {
            if ((this.GetMyFolderInfoByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyFolderInfoByUserIDCompleted(this, new GetMyFolderInfoByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMyFolderInfoByUserID1", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMyFolderInfoByUserID1(string userID, string programlibid) {
            object[] results = this.Invoke("GetMyFolderInfoByUserID1", new object[] {
                        userID,
                        programlibid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyFolderInfoByUserID1Async(string userID, string programlibid) {
            this.GetMyFolderInfoByUserID1Async(userID, programlibid, null);
        }
        
        /// <remarks/>
        public void GetMyFolderInfoByUserID1Async(string userID, string programlibid, object userState) {
            if ((this.GetMyFolderInfoByUserID1OperationCompleted == null)) {
                this.GetMyFolderInfoByUserID1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyFolderInfoByUserID1OperationCompleted);
            }
            this.InvokeAsync("GetMyFolderInfoByUserID1", new object[] {
                        userID,
                        programlibid}, this.GetMyFolderInfoByUserID1OperationCompleted, userState);
        }
        
        private void OnGetMyFolderInfoByUserID1OperationCompleted(object arg) {
            if ((this.GetMyFolderInfoByUserID1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyFolderInfoByUserID1Completed(this, new GetMyFolderInfoByUserID1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/CheckProgramTitleExist", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckProgramTitleExist(string programLibID, string folderID, string programTitle, int isMixDone, out string programXML) {
            object[] results = this.Invoke("CheckProgramTitleExist", new object[] {
                        programLibID,
                        folderID,
                        programTitle,
                        isMixDone});
            programXML = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckProgramTitleExistAsync(string programLibID, string folderID, string programTitle, int isMixDone) {
            this.CheckProgramTitleExistAsync(programLibID, folderID, programTitle, isMixDone, null);
        }
        
        /// <remarks/>
        public void CheckProgramTitleExistAsync(string programLibID, string folderID, string programTitle, int isMixDone, object userState) {
            if ((this.CheckProgramTitleExistOperationCompleted == null)) {
                this.CheckProgramTitleExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckProgramTitleExistOperationCompleted);
            }
            this.InvokeAsync("CheckProgramTitleExist", new object[] {
                        programLibID,
                        folderID,
                        programTitle,
                        isMixDone}, this.CheckProgramTitleExistOperationCompleted, userState);
        }
        
        private void OnCheckProgramTitleExistOperationCompleted(object arg) {
            if ((this.CheckProgramTitleExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckProgramTitleExistCompleted(this, new CheckProgramTitleExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderInfoByFolderID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFolderInfoByFolderID(string folderID) {
            object[] results = this.Invoke("GetFolderInfoByFolderID", new object[] {
                        folderID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderInfoByFolderIDAsync(string folderID) {
            this.GetFolderInfoByFolderIDAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetFolderInfoByFolderIDAsync(string folderID, object userState) {
            if ((this.GetFolderInfoByFolderIDOperationCompleted == null)) {
                this.GetFolderInfoByFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderInfoByFolderIDOperationCompleted);
            }
            this.InvokeAsync("GetFolderInfoByFolderID", new object[] {
                        folderID}, this.GetFolderInfoByFolderIDOperationCompleted, userState);
        }
        
        private void OnGetFolderInfoByFolderIDOperationCompleted(object arg) {
            if ((this.GetFolderInfoByFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderInfoByFolderIDCompleted(this, new GetFolderInfoByFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetFolderInfoByID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFolderInfoByID(string folderID, bool isPrj) {
            object[] results = this.Invoke("GetFolderInfoByID", new object[] {
                        folderID,
                        isPrj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderInfoByIDAsync(string folderID, bool isPrj) {
            this.GetFolderInfoByIDAsync(folderID, isPrj, null);
        }
        
        /// <remarks/>
        public void GetFolderInfoByIDAsync(string folderID, bool isPrj, object userState) {
            if ((this.GetFolderInfoByIDOperationCompleted == null)) {
                this.GetFolderInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderInfoByIDOperationCompleted);
            }
            this.InvokeAsync("GetFolderInfoByID", new object[] {
                        folderID,
                        isPrj}, this.GetFolderInfoByIDOperationCompleted, userState);
        }
        
        private void OnGetFolderInfoByIDOperationCompleted(object arg) {
            if ((this.GetFolderInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderInfoByIDCompleted(this, new GetFolderInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/SuperviseProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SuperviseProgram(string userid, string userName, string desc, string programid, string folderID, string programLibID, int folderSuperviseLevel, bool isSupervise) {
            object[] results = this.Invoke("SuperviseProgram", new object[] {
                        userid,
                        userName,
                        desc,
                        programid,
                        folderID,
                        programLibID,
                        folderSuperviseLevel,
                        isSupervise});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SuperviseProgramAsync(string userid, string userName, string desc, string programid, string folderID, string programLibID, int folderSuperviseLevel, bool isSupervise) {
            this.SuperviseProgramAsync(userid, userName, desc, programid, folderID, programLibID, folderSuperviseLevel, isSupervise, null);
        }
        
        /// <remarks/>
        public void SuperviseProgramAsync(string userid, string userName, string desc, string programid, string folderID, string programLibID, int folderSuperviseLevel, bool isSupervise, object userState) {
            if ((this.SuperviseProgramOperationCompleted == null)) {
                this.SuperviseProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuperviseProgramOperationCompleted);
            }
            this.InvokeAsync("SuperviseProgram", new object[] {
                        userid,
                        userName,
                        desc,
                        programid,
                        folderID,
                        programLibID,
                        folderSuperviseLevel,
                        isSupervise}, this.SuperviseProgramOperationCompleted, userState);
        }
        
        private void OnSuperviseProgramOperationCompleted(object arg) {
            if ((this.SuperviseProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuperviseProgramCompleted(this, new SuperviseProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramSuperviseStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProgramSuperviseStatus(string programID, string programLibID) {
            object[] results = this.Invoke("GetProgramSuperviseStatus", new object[] {
                        programID,
                        programLibID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramSuperviseStatusAsync(string programID, string programLibID) {
            this.GetProgramSuperviseStatusAsync(programID, programLibID, null);
        }
        
        /// <remarks/>
        public void GetProgramSuperviseStatusAsync(string programID, string programLibID, object userState) {
            if ((this.GetProgramSuperviseStatusOperationCompleted == null)) {
                this.GetProgramSuperviseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramSuperviseStatusOperationCompleted);
            }
            this.InvokeAsync("GetProgramSuperviseStatus", new object[] {
                        programID,
                        programLibID}, this.GetProgramSuperviseStatusOperationCompleted, userState);
        }
        
        private void OnGetProgramSuperviseStatusOperationCompleted(object arg) {
            if ((this.GetProgramSuperviseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramSuperviseStatusCompleted(this, new GetProgramSuperviseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetISchedulerWebPath", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetISchedulerWebPath() {
            object[] results = this.Invoke("GetISchedulerWebPath", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetISchedulerWebPathAsync() {
            this.GetISchedulerWebPathAsync(null);
        }
        
        /// <remarks/>
        public void GetISchedulerWebPathAsync(object userState) {
            if ((this.GetISchedulerWebPathOperationCompleted == null)) {
                this.GetISchedulerWebPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetISchedulerWebPathOperationCompleted);
            }
            this.InvokeAsync("GetISchedulerWebPath", new object[0], this.GetISchedulerWebPathOperationCompleted, userState);
        }
        
        private void OnGetISchedulerWebPathOperationCompleted(object arg) {
            if ((this.GetISchedulerWebPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetISchedulerWebPathCompleted(this, new GetISchedulerWebPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetUserSpaceAlarmValue", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserSpaceAlarmValue() {
            object[] results = this.Invoke("GetUserSpaceAlarmValue", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSpaceAlarmValueAsync() {
            this.GetUserSpaceAlarmValueAsync(null);
        }
        
        /// <remarks/>
        public void GetUserSpaceAlarmValueAsync(object userState) {
            if ((this.GetUserSpaceAlarmValueOperationCompleted == null)) {
                this.GetUserSpaceAlarmValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSpaceAlarmValueOperationCompleted);
            }
            this.InvokeAsync("GetUserSpaceAlarmValue", new object[0], this.GetUserSpaceAlarmValueOperationCompleted, userState);
        }
        
        private void OnGetUserSpaceAlarmValueOperationCompleted(object arg) {
            if ((this.GetUserSpaceAlarmValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSpaceAlarmValueCompleted(this, new GetUserSpaceAlarmValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/IsCanUploadWaveFile", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCanUploadWaveFile(string zoneNumber) {
            object[] results = this.Invoke("IsCanUploadWaveFile", new object[] {
                        zoneNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCanUploadWaveFileAsync(string zoneNumber) {
            this.IsCanUploadWaveFileAsync(zoneNumber, null);
        }
        
        /// <remarks/>
        public void IsCanUploadWaveFileAsync(string zoneNumber, object userState) {
            if ((this.IsCanUploadWaveFileOperationCompleted == null)) {
                this.IsCanUploadWaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCanUploadWaveFileOperationCompleted);
            }
            this.InvokeAsync("IsCanUploadWaveFile", new object[] {
                        zoneNumber}, this.IsCanUploadWaveFileOperationCompleted, userState);
        }
        
        private void OnIsCanUploadWaveFileOperationCompleted(object arg) {
            if ((this.IsCanUploadWaveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCanUploadWaveFileCompleted(this, new IsCanUploadWaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetISchedulerWebPath1", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetISchedulerWebPath1() {
            object[] results = this.Invoke("GetISchedulerWebPath1", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetISchedulerWebPath1Async() {
            this.GetISchedulerWebPath1Async(null);
        }
        
        /// <remarks/>
        public void GetISchedulerWebPath1Async(object userState) {
            if ((this.GetISchedulerWebPath1OperationCompleted == null)) {
                this.GetISchedulerWebPath1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetISchedulerWebPath1OperationCompleted);
            }
            this.InvokeAsync("GetISchedulerWebPath1", new object[0], this.GetISchedulerWebPath1OperationCompleted, userState);
        }
        
        private void OnGetISchedulerWebPath1OperationCompleted(object arg) {
            if ((this.GetISchedulerWebPath1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetISchedulerWebPath1Completed(this, new GetISchedulerWebPath1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetISchedulerWebPath2", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetISchedulerWebPath2() {
            object[] results = this.Invoke("GetISchedulerWebPath2", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetISchedulerWebPath2Async() {
            this.GetISchedulerWebPath2Async(null);
        }
        
        /// <remarks/>
        public void GetISchedulerWebPath2Async(object userState) {
            if ((this.GetISchedulerWebPath2OperationCompleted == null)) {
                this.GetISchedulerWebPath2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetISchedulerWebPath2OperationCompleted);
            }
            this.InvokeAsync("GetISchedulerWebPath2", new object[0], this.GetISchedulerWebPath2OperationCompleted, userState);
        }
        
        private void OnGetISchedulerWebPath2OperationCompleted(object arg) {
            if ((this.GetISchedulerWebPath2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetISchedulerWebPath2Completed(this, new GetISchedulerWebPath2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetISchedulerWebPath21", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetISchedulerWebPath21() {
            object[] results = this.Invoke("GetISchedulerWebPath21", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetISchedulerWebPath21Async() {
            this.GetISchedulerWebPath21Async(null);
        }
        
        /// <remarks/>
        public void GetISchedulerWebPath21Async(object userState) {
            if ((this.GetISchedulerWebPath21OperationCompleted == null)) {
                this.GetISchedulerWebPath21OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetISchedulerWebPath21OperationCompleted);
            }
            this.InvokeAsync("GetISchedulerWebPath21", new object[0], this.GetISchedulerWebPath21OperationCompleted, userState);
        }
        
        private void OnGetISchedulerWebPath21OperationCompleted(object arg) {
            if ((this.GetISchedulerWebPath21Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetISchedulerWebPath21Completed(this, new GetISchedulerWebPath21CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetLogService", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLogService() {
            object[] results = this.Invoke("GetLogService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogServiceAsync() {
            this.GetLogServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetLogServiceAsync(object userState) {
            if ((this.GetLogServiceOperationCompleted == null)) {
                this.GetLogServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogServiceOperationCompleted);
            }
            this.InvokeAsync("GetLogService", new object[0], this.GetLogServiceOperationCompleted, userState);
        }
        
        private void OnGetLogServiceOperationCompleted(object arg) {
            if ((this.GetLogServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogServiceCompleted(this, new GetLogServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetBusinessService", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBusinessService() {
            object[] results = this.Invoke("GetBusinessService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusinessServiceAsync() {
            this.GetBusinessServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetBusinessServiceAsync(object userState) {
            if ((this.GetBusinessServiceOperationCompleted == null)) {
                this.GetBusinessServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusinessServiceOperationCompleted);
            }
            this.InvokeAsync("GetBusinessService", new object[0], this.GetBusinessServiceOperationCompleted, userState);
        }
        
        private void OnGetBusinessServiceOperationCompleted(object arg) {
            if ((this.GetBusinessServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusinessServiceCompleted(this, new GetBusinessServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetRadioName", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRadioName() {
            object[] results = this.Invoke("GetRadioName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioNameAsync() {
            this.GetRadioNameAsync(null);
        }
        
        /// <remarks/>
        public void GetRadioNameAsync(object userState) {
            if ((this.GetRadioNameOperationCompleted == null)) {
                this.GetRadioNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioNameOperationCompleted);
            }
            this.InvokeAsync("GetRadioName", new object[0], this.GetRadioNameOperationCompleted, userState);
        }
        
        private void OnGetRadioNameOperationCompleted(object arg) {
            if ((this.GetRadioNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioNameCompleted(this, new GetRadioNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetBusinessService1", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBusinessService1() {
            object[] results = this.Invoke("GetBusinessService1", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusinessService1Async() {
            this.GetBusinessService1Async(null);
        }
        
        /// <remarks/>
        public void GetBusinessService1Async(object userState) {
            if ((this.GetBusinessService1OperationCompleted == null)) {
                this.GetBusinessService1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusinessService1OperationCompleted);
            }
            this.InvokeAsync("GetBusinessService1", new object[0], this.GetBusinessService1OperationCompleted, userState);
        }
        
        private void OnGetBusinessService1OperationCompleted(object arg) {
            if ((this.GetBusinessService1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusinessService1Completed(this, new GetBusinessService1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetLogService1", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLogService1() {
            object[] results = this.Invoke("GetLogService1", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogService1Async() {
            this.GetLogService1Async(null);
        }
        
        /// <remarks/>
        public void GetLogService1Async(object userState) {
            if ((this.GetLogService1OperationCompleted == null)) {
                this.GetLogService1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogService1OperationCompleted);
            }
            this.InvokeAsync("GetLogService1", new object[0], this.GetLogService1OperationCompleted, userState);
        }
        
        private void OnGetLogService1OperationCompleted(object arg) {
            if ((this.GetLogService1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogService1Completed(this, new GetLogService1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetLogServiceByZone", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLogServiceByZone(string zone) {
            object[] results = this.Invoke("GetLogServiceByZone", new object[] {
                        zone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogServiceByZoneAsync(string zone) {
            this.GetLogServiceByZoneAsync(zone, null);
        }
        
        /// <remarks/>
        public void GetLogServiceByZoneAsync(string zone, object userState) {
            if ((this.GetLogServiceByZoneOperationCompleted == null)) {
                this.GetLogServiceByZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogServiceByZoneOperationCompleted);
            }
            this.InvokeAsync("GetLogServiceByZone", new object[] {
                        zone}, this.GetLogServiceByZoneOperationCompleted, userState);
        }
        
        private void OnGetLogServiceByZoneOperationCompleted(object arg) {
            if ((this.GetLogServiceByZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogServiceByZoneCompleted(this, new GetLogServiceByZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetOnairServiceByZone", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOnairServiceByZone(string zone) {
            object[] results = this.Invoke("GetOnairServiceByZone", new object[] {
                        zone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnairServiceByZoneAsync(string zone) {
            this.GetOnairServiceByZoneAsync(zone, null);
        }
        
        /// <remarks/>
        public void GetOnairServiceByZoneAsync(string zone, object userState) {
            if ((this.GetOnairServiceByZoneOperationCompleted == null)) {
                this.GetOnairServiceByZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnairServiceByZoneOperationCompleted);
            }
            this.InvokeAsync("GetOnairServiceByZone", new object[] {
                        zone}, this.GetOnairServiceByZoneOperationCompleted, userState);
        }
        
        private void OnGetOnairServiceByZoneOperationCompleted(object arg) {
            if ((this.GetOnairServiceByZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnairServiceByZoneCompleted(this, new GetOnairServiceByZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetOnairServiceBakByZone", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOnairServiceBakByZone(string zone) {
            object[] results = this.Invoke("GetOnairServiceBakByZone", new object[] {
                        zone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnairServiceBakByZoneAsync(string zone) {
            this.GetOnairServiceBakByZoneAsync(zone, null);
        }
        
        /// <remarks/>
        public void GetOnairServiceBakByZoneAsync(string zone, object userState) {
            if ((this.GetOnairServiceBakByZoneOperationCompleted == null)) {
                this.GetOnairServiceBakByZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnairServiceBakByZoneOperationCompleted);
            }
            this.InvokeAsync("GetOnairServiceBakByZone", new object[] {
                        zone}, this.GetOnairServiceBakByZoneOperationCompleted, userState);
        }
        
        private void OnGetOnairServiceBakByZoneOperationCompleted(object arg) {
            if ((this.GetOnairServiceBakByZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnairServiceBakByZoneCompleted(this, new GetOnairServiceBakByZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/DeleteProgramByProgramID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteProgramByProgramID(string programLibID, string programID) {
            object[] results = this.Invoke("DeleteProgramByProgramID", new object[] {
                        programLibID,
                        programID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramByProgramIDAsync(string programLibID, string programID) {
            this.DeleteProgramByProgramIDAsync(programLibID, programID, null);
        }
        
        /// <remarks/>
        public void DeleteProgramByProgramIDAsync(string programLibID, string programID, object userState) {
            if ((this.DeleteProgramByProgramIDOperationCompleted == null)) {
                this.DeleteProgramByProgramIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramByProgramIDOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramByProgramID", new object[] {
                        programLibID,
                        programID}, this.DeleteProgramByProgramIDOperationCompleted, userState);
        }
        
        private void OnDeleteProgramByProgramIDOperationCompleted(object arg) {
            if ((this.DeleteProgramByProgramIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramByProgramIDCompleted(this, new DeleteProgramByProgramIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateProgramProperty", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProgramProperty(string title, string tag, string programLibID, string programID) {
            object[] results = this.Invoke("UpdateProgramProperty", new object[] {
                        title,
                        tag,
                        programLibID,
                        programID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgramPropertyAsync(string title, string tag, string programLibID, string programID) {
            this.UpdateProgramPropertyAsync(title, tag, programLibID, programID, null);
        }
        
        /// <remarks/>
        public void UpdateProgramPropertyAsync(string title, string tag, string programLibID, string programID, object userState) {
            if ((this.UpdateProgramPropertyOperationCompleted == null)) {
                this.UpdateProgramPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgramPropertyOperationCompleted);
            }
            this.InvokeAsync("UpdateProgramProperty", new object[] {
                        title,
                        tag,
                        programLibID,
                        programID}, this.UpdateProgramPropertyOperationCompleted, userState);
        }
        
        private void OnUpdateProgramPropertyOperationCompleted(object arg) {
            if ((this.UpdateProgramPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgramPropertyCompleted(this, new UpdateProgramPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateProgramExportedStatus", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProgramExportedStatus(string programID) {
            object[] results = this.Invoke("UpdateProgramExportedStatus", new object[] {
                        programID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgramExportedStatusAsync(string programID) {
            this.UpdateProgramExportedStatusAsync(programID, null);
        }
        
        /// <remarks/>
        public void UpdateProgramExportedStatusAsync(string programID, object userState) {
            if ((this.UpdateProgramExportedStatusOperationCompleted == null)) {
                this.UpdateProgramExportedStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgramExportedStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateProgramExportedStatus", new object[] {
                        programID}, this.UpdateProgramExportedStatusOperationCompleted, userState);
        }
        
        private void OnUpdateProgramExportedStatusOperationCompleted(object arg) {
            if ((this.UpdateProgramExportedStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgramExportedStatusCompleted(this, new UpdateProgramExportedStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPaddingExportProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPaddingExportProgram() {
            object[] results = this.Invoke("GetPaddingExportProgram", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaddingExportProgramAsync() {
            this.GetPaddingExportProgramAsync(null);
        }
        
        /// <remarks/>
        public void GetPaddingExportProgramAsync(object userState) {
            if ((this.GetPaddingExportProgramOperationCompleted == null)) {
                this.GetPaddingExportProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaddingExportProgramOperationCompleted);
            }
            this.InvokeAsync("GetPaddingExportProgram", new object[0], this.GetPaddingExportProgramOperationCompleted, userState);
        }
        
        private void OnGetPaddingExportProgramOperationCompleted(object arg) {
            if ((this.GetPaddingExportProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaddingExportProgramCompleted(this, new GetPaddingExportProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMyMessage", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMyMessage(string userID, string startDate, string endDate, int readType, string title, int page, int pageCount, out int total) {
            object[] results = this.Invoke("GetMyMessage", new object[] {
                        userID,
                        startDate,
                        endDate,
                        readType,
                        title,
                        page,
                        pageCount});
            total = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyMessageAsync(string userID, string startDate, string endDate, int readType, string title, int page, int pageCount) {
            this.GetMyMessageAsync(userID, startDate, endDate, readType, title, page, pageCount, null);
        }
        
        /// <remarks/>
        public void GetMyMessageAsync(string userID, string startDate, string endDate, int readType, string title, int page, int pageCount, object userState) {
            if ((this.GetMyMessageOperationCompleted == null)) {
                this.GetMyMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyMessageOperationCompleted);
            }
            this.InvokeAsync("GetMyMessage", new object[] {
                        userID,
                        startDate,
                        endDate,
                        readType,
                        title,
                        page,
                        pageCount}, this.GetMyMessageOperationCompleted, userState);
        }
        
        private void OnGetMyMessageOperationCompleted(object arg) {
            if ((this.GetMyMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyMessageCompleted(this, new GetMyMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMyNetRecord", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMyNetRecord(string folderID, string startDate, string endDate, string title, string programLibID, string creator, int page, int pageCount, bool onlyShowMyPrj, out int count) {
            object[] results = this.Invoke("GetMyNetRecord", new object[] {
                        folderID,
                        startDate,
                        endDate,
                        title,
                        programLibID,
                        creator,
                        page,
                        pageCount,
                        onlyShowMyPrj});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyNetRecordAsync(string folderID, string startDate, string endDate, string title, string programLibID, string creator, int page, int pageCount, bool onlyShowMyPrj) {
            this.GetMyNetRecordAsync(folderID, startDate, endDate, title, programLibID, creator, page, pageCount, onlyShowMyPrj, null);
        }
        
        /// <remarks/>
        public void GetMyNetRecordAsync(string folderID, string startDate, string endDate, string title, string programLibID, string creator, int page, int pageCount, bool onlyShowMyPrj, object userState) {
            if ((this.GetMyNetRecordOperationCompleted == null)) {
                this.GetMyNetRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyNetRecordOperationCompleted);
            }
            this.InvokeAsync("GetMyNetRecord", new object[] {
                        folderID,
                        startDate,
                        endDate,
                        title,
                        programLibID,
                        creator,
                        page,
                        pageCount,
                        onlyShowMyPrj}, this.GetMyNetRecordOperationCompleted, userState);
        }
        
        private void OnGetMyNetRecordOperationCompleted(object arg) {
            if ((this.GetMyNetRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyNetRecordCompleted(this, new GetMyNetRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProjectByFolderID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectByFolderID(string folderID, string modifydate, string endDate, string title, string programLibID, string creator, int page, int pageCount, bool onlyShowMyPrj, out int count) {
            object[] results = this.Invoke("GetProjectByFolderID", new object[] {
                        folderID,
                        modifydate,
                        endDate,
                        title,
                        programLibID,
                        creator,
                        page,
                        pageCount,
                        onlyShowMyPrj});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectByFolderIDAsync(string folderID, string modifydate, string endDate, string title, string programLibID, string creator, int page, int pageCount, bool onlyShowMyPrj) {
            this.GetProjectByFolderIDAsync(folderID, modifydate, endDate, title, programLibID, creator, page, pageCount, onlyShowMyPrj, null);
        }
        
        /// <remarks/>
        public void GetProjectByFolderIDAsync(string folderID, string modifydate, string endDate, string title, string programLibID, string creator, int page, int pageCount, bool onlyShowMyPrj, object userState) {
            if ((this.GetProjectByFolderIDOperationCompleted == null)) {
                this.GetProjectByFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectByFolderIDOperationCompleted);
            }
            this.InvokeAsync("GetProjectByFolderID", new object[] {
                        folderID,
                        modifydate,
                        endDate,
                        title,
                        programLibID,
                        creator,
                        page,
                        pageCount,
                        onlyShowMyPrj}, this.GetProjectByFolderIDOperationCompleted, userState);
        }
        
        private void OnGetProjectByFolderIDOperationCompleted(object arg) {
            if ((this.GetProjectByFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectByFolderIDCompleted(this, new GetProjectByFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetSupervisedProgramByUserID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupervisedProgramByUserID(string userID, string title, string programLibID, int page, int pageCount, out int total) {
            object[] results = this.Invoke("GetSupervisedProgramByUserID", new object[] {
                        userID,
                        title,
                        programLibID,
                        page,
                        pageCount});
            total = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupervisedProgramByUserIDAsync(string userID, string title, string programLibID, int page, int pageCount) {
            this.GetSupervisedProgramByUserIDAsync(userID, title, programLibID, page, pageCount, null);
        }
        
        /// <remarks/>
        public void GetSupervisedProgramByUserIDAsync(string userID, string title, string programLibID, int page, int pageCount, object userState) {
            if ((this.GetSupervisedProgramByUserIDOperationCompleted == null)) {
                this.GetSupervisedProgramByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupervisedProgramByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetSupervisedProgramByUserID", new object[] {
                        userID,
                        title,
                        programLibID,
                        page,
                        pageCount}, this.GetSupervisedProgramByUserIDOperationCompleted, userState);
        }
        
        private void OnGetSupervisedProgramByUserIDOperationCompleted(object arg) {
            if ((this.GetSupervisedProgramByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupervisedProgramByUserIDCompleted(this, new GetSupervisedProgramByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMyTask", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMyTask(string programLibID, string creator, string folderID, string title, string modifydate, string enddate, int SuperViseStatus, int page, int pageCount, out int count) {
            object[] results = this.Invoke("GetMyTask", new object[] {
                        programLibID,
                        creator,
                        folderID,
                        title,
                        modifydate,
                        enddate,
                        SuperViseStatus,
                        page,
                        pageCount});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyTaskAsync(string programLibID, string creator, string folderID, string title, string modifydate, string enddate, int SuperViseStatus, int page, int pageCount) {
            this.GetMyTaskAsync(programLibID, creator, folderID, title, modifydate, enddate, SuperViseStatus, page, pageCount, null);
        }
        
        /// <remarks/>
        public void GetMyTaskAsync(string programLibID, string creator, string folderID, string title, string modifydate, string enddate, int SuperViseStatus, int page, int pageCount, object userState) {
            if ((this.GetMyTaskOperationCompleted == null)) {
                this.GetMyTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyTaskOperationCompleted);
            }
            this.InvokeAsync("GetMyTask", new object[] {
                        programLibID,
                        creator,
                        folderID,
                        title,
                        modifydate,
                        enddate,
                        SuperViseStatus,
                        page,
                        pageCount}, this.GetMyTaskOperationCompleted, userState);
        }
        
        private void OnGetMyTaskOperationCompleted(object arg) {
            if ((this.GetMyTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyTaskCompleted(this, new GetMyTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetPandingSuperviseProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPandingSuperviseProgram(string programLibID, bool canCross, string userID, string title, int pageCount, int page, out int totalCount) {
            object[] results = this.Invoke("GetPandingSuperviseProgram", new object[] {
                        programLibID,
                        canCross,
                        userID,
                        title,
                        pageCount,
                        page});
            totalCount = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPandingSuperviseProgramAsync(string programLibID, bool canCross, string userID, string title, int pageCount, int page) {
            this.GetPandingSuperviseProgramAsync(programLibID, canCross, userID, title, pageCount, page, null);
        }
        
        /// <remarks/>
        public void GetPandingSuperviseProgramAsync(string programLibID, bool canCross, string userID, string title, int pageCount, int page, object userState) {
            if ((this.GetPandingSuperviseProgramOperationCompleted == null)) {
                this.GetPandingSuperviseProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPandingSuperviseProgramOperationCompleted);
            }
            this.InvokeAsync("GetPandingSuperviseProgram", new object[] {
                        programLibID,
                        canCross,
                        userID,
                        title,
                        pageCount,
                        page}, this.GetPandingSuperviseProgramOperationCompleted, userState);
        }
        
        private void OnGetPandingSuperviseProgramOperationCompleted(object arg) {
            if ((this.GetPandingSuperviseProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPandingSuperviseProgramCompleted(this, new GetPandingSuperviseProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramByObjectID1", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProgramByObjectID1(string userid, string objectID, string startDate, string endDate, string title, string comment, string programLibID, int durationStart, int durationEnd, int pageCount, int page, out int count) {
            object[] results = this.Invoke("GetProgramByObjectID1", new object[] {
                        userid,
                        objectID,
                        startDate,
                        endDate,
                        title,
                        comment,
                        programLibID,
                        durationStart,
                        durationEnd,
                        pageCount,
                        page});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramByObjectID1Async(string userid, string objectID, string startDate, string endDate, string title, string comment, string programLibID, int durationStart, int durationEnd, int pageCount, int page) {
            this.GetProgramByObjectID1Async(userid, objectID, startDate, endDate, title, comment, programLibID, durationStart, durationEnd, pageCount, page, null);
        }
        
        /// <remarks/>
        public void GetProgramByObjectID1Async(string userid, string objectID, string startDate, string endDate, string title, string comment, string programLibID, int durationStart, int durationEnd, int pageCount, int page, object userState) {
            if ((this.GetProgramByObjectID1OperationCompleted == null)) {
                this.GetProgramByObjectID1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramByObjectID1OperationCompleted);
            }
            this.InvokeAsync("GetProgramByObjectID1", new object[] {
                        userid,
                        objectID,
                        startDate,
                        endDate,
                        title,
                        comment,
                        programLibID,
                        durationStart,
                        durationEnd,
                        pageCount,
                        page}, this.GetProgramByObjectID1OperationCompleted, userState);
        }
        
        private void OnGetProgramByObjectID1OperationCompleted(object arg) {
            if ((this.GetProgramByObjectID1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramByObjectID1Completed(this, new GetProgramByObjectID1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramByObjectID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProgramByObjectID(string userid, string objectID, string startDate, string endDate, string title, string programLibID, int isMixDone, int superviselevel, int objType, int pageCount, int page, out int count) {
            object[] results = this.Invoke("GetProgramByObjectID", new object[] {
                        userid,
                        objectID,
                        startDate,
                        endDate,
                        title,
                        programLibID,
                        isMixDone,
                        superviselevel,
                        objType,
                        pageCount,
                        page});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramByObjectIDAsync(string userid, string objectID, string startDate, string endDate, string title, string programLibID, int isMixDone, int superviselevel, int objType, int pageCount, int page) {
            this.GetProgramByObjectIDAsync(userid, objectID, startDate, endDate, title, programLibID, isMixDone, superviselevel, objType, pageCount, page, null);
        }
        
        /// <remarks/>
        public void GetProgramByObjectIDAsync(string userid, string objectID, string startDate, string endDate, string title, string programLibID, int isMixDone, int superviselevel, int objType, int pageCount, int page, object userState) {
            if ((this.GetProgramByObjectIDOperationCompleted == null)) {
                this.GetProgramByObjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramByObjectIDOperationCompleted);
            }
            this.InvokeAsync("GetProgramByObjectID", new object[] {
                        userid,
                        objectID,
                        startDate,
                        endDate,
                        title,
                        programLibID,
                        isMixDone,
                        superviselevel,
                        objType,
                        pageCount,
                        page}, this.GetProgramByObjectIDOperationCompleted, userState);
        }
        
        private void OnGetProgramByObjectIDOperationCompleted(object arg) {
            if ((this.GetProgramByObjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramByObjectIDCompleted(this, new GetProgramByObjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetProgramByAdvance", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProgramByAdvance(string adcanceXML, int pageCount, int page, out int count) {
            object[] results = this.Invoke("GetProgramByAdvance", new object[] {
                        adcanceXML,
                        pageCount,
                        page});
            count = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramByAdvanceAsync(string adcanceXML, int pageCount, int page) {
            this.GetProgramByAdvanceAsync(adcanceXML, pageCount, page, null);
        }
        
        /// <remarks/>
        public void GetProgramByAdvanceAsync(string adcanceXML, int pageCount, int page, object userState) {
            if ((this.GetProgramByAdvanceOperationCompleted == null)) {
                this.GetProgramByAdvanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramByAdvanceOperationCompleted);
            }
            this.InvokeAsync("GetProgramByAdvance", new object[] {
                        adcanceXML,
                        pageCount,
                        page}, this.GetProgramByAdvanceOperationCompleted, userState);
        }
        
        private void OnGetProgramByAdvanceOperationCompleted(object arg) {
            if ((this.GetProgramByAdvanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramByAdvanceCompleted(this, new GetProgramByAdvanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetStorageInfoByProgramLibID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStorageInfoByProgramLibID(string programLibID, string zoneID) {
            object[] results = this.Invoke("GetStorageInfoByProgramLibID", new object[] {
                        programLibID,
                        zoneID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageInfoByProgramLibIDAsync(string programLibID, string zoneID) {
            this.GetStorageInfoByProgramLibIDAsync(programLibID, zoneID, null);
        }
        
        /// <remarks/>
        public void GetStorageInfoByProgramLibIDAsync(string programLibID, string zoneID, object userState) {
            if ((this.GetStorageInfoByProgramLibIDOperationCompleted == null)) {
                this.GetStorageInfoByProgramLibIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageInfoByProgramLibIDOperationCompleted);
            }
            this.InvokeAsync("GetStorageInfoByProgramLibID", new object[] {
                        programLibID,
                        zoneID}, this.GetStorageInfoByProgramLibIDOperationCompleted, userState);
        }
        
        private void OnGetStorageInfoByProgramLibIDOperationCompleted(object arg) {
            if ((this.GetStorageInfoByProgramLibIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageInfoByProgramLibIDCompleted(this, new GetStorageInfoByProgramLibIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/GetMaxProgramCountByFolderID", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxProgramCountByFolderID(string folderID, string programlibid) {
            object[] results = this.Invoke("GetMaxProgramCountByFolderID", new object[] {
                        folderID,
                        programlibid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxProgramCountByFolderIDAsync(string folderID, string programlibid) {
            this.GetMaxProgramCountByFolderIDAsync(folderID, programlibid, null);
        }
        
        /// <remarks/>
        public void GetMaxProgramCountByFolderIDAsync(string folderID, string programlibid, object userState) {
            if ((this.GetMaxProgramCountByFolderIDOperationCompleted == null)) {
                this.GetMaxProgramCountByFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxProgramCountByFolderIDOperationCompleted);
            }
            this.InvokeAsync("GetMaxProgramCountByFolderID", new object[] {
                        folderID,
                        programlibid}, this.GetMaxProgramCountByFolderIDOperationCompleted, userState);
        }
        
        private void OnGetMaxProgramCountByFolderIDOperationCompleted(object arg) {
            if ((this.GetMaxProgramCountByFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxProgramCountByFolderIDCompleted(this, new GetMaxProgramCountByFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/InsertToProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertToProgram(string programXMLStr, string programLibID) {
            object[] results = this.Invoke("InsertToProgram", new object[] {
                        programXMLStr,
                        programLibID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertToProgramAsync(string programXMLStr, string programLibID) {
            this.InsertToProgramAsync(programXMLStr, programLibID, null);
        }
        
        /// <remarks/>
        public void InsertToProgramAsync(string programXMLStr, string programLibID, object userState) {
            if ((this.InsertToProgramOperationCompleted == null)) {
                this.InsertToProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertToProgramOperationCompleted);
            }
            this.InvokeAsync("InsertToProgram", new object[] {
                        programXMLStr,
                        programLibID}, this.InsertToProgramOperationCompleted, userState);
        }
        
        private void OnInsertToProgramOperationCompleted(object arg) {
            if ((this.InsertToProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertToProgramCompleted(this, new InsertToProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.infomedia.com.cn/UpdateProgram", RequestNamespace="http://www.infomedia.com.cn/", ResponseNamespace="http://www.infomedia.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProgram(string programXMLStr, string programLibID) {
            object[] results = this.Invoke("UpdateProgram", new object[] {
                        programXMLStr,
                        programLibID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgramAsync(string programXMLStr, string programLibID) {
            this.UpdateProgramAsync(programXMLStr, programLibID, null);
        }
        
        /// <remarks/>
        public void UpdateProgramAsync(string programXMLStr, string programLibID, object userState) {
            if ((this.UpdateProgramOperationCompleted == null)) {
                this.UpdateProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgramOperationCompleted);
            }
            this.InvokeAsync("UpdateProgram", new object[] {
                        programXMLStr,
                        programLibID}, this.UpdateProgramOperationCompleted, userState);
        }
        
        private void OnUpdateProgramOperationCompleted(object arg) {
            if ((this.UpdateProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgramCompleted(this, new UpdateProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanManageFolderCompletedEventHandler(object sender, IsCanManageFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanManageFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanManageFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanCheckOtherTeleInFolderCompletedEventHandler(object sender, IsCanCheckOtherTeleInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanCheckOtherTeleInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanCheckOtherTeleInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanOverwriteCompletedEventHandler(object sender, IsCanOverwriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanOverwriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanOverwriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanDeleteProgramCompletedEventHandler(object sender, IsCanDeleteProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanDeleteProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanDeleteProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanVsRECYCLECompletedEventHandler(object sender, IsCanVsRECYCLECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanVsRECYCLECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanVsRECYCLECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanUnlockUserCompletedEventHandler(object sender, IsCanUnlockUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanUnlockUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanUnlockUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsHasRightsCompletedEventHandler(object sender, IsHasRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsHasRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsHasRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanVsAudioCheckSettingsCompletedEventHandler(object sender, IsCanVsAudioCheckSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanVsAudioCheckSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanVsAudioCheckSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanVsCrossSuperviceParametersCompletedEventHandler(object sender, IsCanVsCrossSuperviceParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanVsCrossSuperviceParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanVsCrossSuperviceParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateRecycleSpaceCompletedEventHandler(object sender, UpdateRecycleSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRecycleSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRecycleSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCrossSuperviceParametersCompletedEventHandler(object sender, UpdateCrossSuperviceParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCrossSuperviceParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCrossSuperviceParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRecycleSpaceCompletedEventHandler(object sender, GetRecycleSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecycleSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecycleSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCrossSuperviceParametersCompletedEventHandler(object sender, GetCrossSuperviceParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrossSuperviceParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrossSuperviceParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProgram2RecycleCompletedEventHandler(object sender, DeleteProgram2RecycleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgram2RecycleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgram2RecycleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UnLockProgramCompletedEventHandler(object sender, UnLockProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnLockProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnLockProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDeletedProgramSpaceCompletedEventHandler(object sender, GetDeletedProgramSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeletedProgramSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeletedProgramSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UnDeleteProgramCompletedEventHandler(object sender, UnDeleteProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnDeleteProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnDeleteProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPaddingDeleteProgramByUserIDCompletedEventHandler(object sender, GetPaddingDeleteProgramByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaddingDeleteProgramByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaddingDeleteProgramByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPaddingDeleteProgramCompletedEventHandler(object sender, GetPaddingDeleteProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaddingDeleteProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaddingDeleteProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MoveProgram2RecycleCompletedEventHandler(object sender, MoveProgram2RecycleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveProgram2RecycleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveProgram2RecycleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderUserdSpaceCompletedEventHandler(object sender, GetFolderUserdSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderUserdSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderUserdSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserFolderUserdSpaceCompletedEventHandler(object sender, GetUserFolderUserdSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFolderUserdSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFolderUserdSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserUserdSpaceByProgramLibIDCompletedEventHandler(object sender, GetUserUserdSpaceByProgramLibIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserUserdSpaceByProgramLibIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserUserdSpaceByProgramLibIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUSerSpaceByObjIDCompletedEventHandler(object sender, GetUSerSpaceByObjIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUSerSpaceByObjIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUSerSpaceByObjIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserSpaceInObjCompletedEventHandler(object sender, UpdateUserSpaceInObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserSpaceInObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserSpaceInObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderSharedUsersCompletedEventHandler(object sender, GetFolderSharedUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderSharedUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderSharedUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanBatch2OnairCompletedEventHandler(object sender, IsCanBatch2OnairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanBatch2OnairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanBatch2OnairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanUseRightManagerCompletedEventHandler(object sender, IsCanUseRightManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanUseRightManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanUseRightManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanSendProgram2MeidiaCompletedEventHandler(object sender, IsCanSendProgram2MeidiaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanSendProgram2MeidiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanSendProgram2MeidiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRecycleSaveDayCompletedEventHandler(object sender, GetRecycleSaveDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecycleSaveDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecycleSaveDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPandingDeleteProgramCompletedEventHandler(object sender, GetPandingDeleteProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPandingDeleteProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPandingDeleteProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserGroupByUserIDCompletedEventHandler(object sender, GetUserGroupByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsRecycleBinFullCompletedEventHandler(object sender, IsRecycleBinFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRecycleBinFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRecycleBinFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDeleteAllAMTSCompletedEventHandler(object sender, GetDeleteAllAMTSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeleteAllAMTSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeleteAllAMTSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteAllAMTSCompletedEventHandler(object sender, DeleteAllAMTSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllAMTSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllAMTSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteMyAMTSCompletedEventHandler(object sender, DeleteMyAMTSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMyAMTSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMyAMTSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderMaxSuperlevelByUserIDCompletedEventHandler(object sender, GetFolderMaxSuperlevelByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderMaxSuperlevelByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderMaxSuperlevelByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAudioCheckSettingsCompletedEventHandler(object sender, GetAudioCheckSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAudioCheckSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAudioCheckSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAudioCheckLogsCompletedEventHandler(object sender, GetAudioCheckLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAudioCheckLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAudioCheckLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetAudioCheckSettingsCompletedEventHandler(object sender, SetAudioCheckSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAudioCheckSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAudioCheckSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetAudioCheckLogCompletedEventHandler(object sender, SetAudioCheckLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAudioCheckLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAudioCheckLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSearchPatternCompletedEventHandler(object sender, GetSearchPatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSearchPatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSearchPatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetResource2UsersListCompletedEventHandler(object sender, GetResource2UsersListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResource2UsersListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResource2UsersListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPandingDeleteMessagesCompletedEventHandler(object sender, GetPandingDeleteMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPandingDeleteMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPandingDeleteMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteMessagesCompletedEventHandler(object sender, DeleteMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPandingDeleteProgramCountByFolderCompletedEventHandler(object sender, GetPandingDeleteProgramCountByFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPandingDeleteProgramCountByFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPandingDeleteProgramCountByFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckFolderNameExistCompletedEventHandler(object sender, CheckFolderNameExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFolderNameExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFolderNameExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteUserLoginExCompletedEventHandler(object sender, DeleteUserLoginExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserLoginExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserLoginExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserLoginExCountCompletedEventHandler(object sender, GetUserLoginExCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLoginExCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLoginExCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetUserLoginExCompletedEventHandler(object sender, SetUserLoginExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserLoginExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserLoginExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDeleteProgramByFolderCompletedEventHandler(object sender, GetDeleteProgramByFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeleteProgramByFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeleteProgramByFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllProgramCompletedEventHandler(object sender, GetAllProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllProgram1CompletedEventHandler(object sender, GetAllProgram1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProgram1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProgram1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAdProgramCompletedEventHandler(object sender, GetAdProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProgramByFolderCompletedEventHandler(object sender, DeleteProgramByFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramByFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramByFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetNewsItemByObjectIDCompletedEventHandler(object sender, GetNewsItemByObjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsItemByObjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsItemByObjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetNewsAudioByNewsIDCompletedEventHandler(object sender, GetNewsAudioByNewsIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsAudioByNewsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsAudioByNewsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetNewsLibInfoByUserIDCompletedEventHandler(object sender, GetNewsLibInfoByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsLibInfoByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsLibInfoByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetNewsFolderTableByNewsLibIDAndUserIDCompletedEventHandler(object sender, GetNewsFolderTableByNewsLibIDAndUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsFolderTableByNewsLibIDAndUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsFolderTableByNewsLibIDAndUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateNewsAudioCompletedEventHandler(object sender, UpdateNewsAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNewsAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNewsAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateNewsItemCompletedEventHandler(object sender, UpdateNewsItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNewsItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNewsItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramOnairApplyCompletedEventHandler(object sender, GetProgramOnairApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramOnairApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramOnairApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void MaketProgramOnairApplyDoneCompletedEventHandler(object sender, MaketProgramOnairApplyDoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaketProgramOnairApplyDoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MaketProgramOnairApplyDoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertIntoProgramOnairApplyCompletedEventHandler(object sender, InsertIntoProgramOnairApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertIntoProgramOnairApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertIntoProgramOnairApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsExistWorkTaskCompletedEventHandler(object sender, IsExistWorkTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistWorkTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistWorkTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkTaskCountByStatusCompletedEventHandler(object sender, GetWorkTaskCountByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkTaskCountByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkTaskCountByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkTasksByStatusCompletedEventHandler(object sender, GetWorkTasksByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkTasksByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkTasksByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateTaskStatusCompletedEventHandler(object sender, UpdateTaskStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetWorkTaskProgramIDCompletedEventHandler(object sender, SetWorkTaskProgramIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetWorkTaskProgramIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetWorkTaskProgramIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendWorkTaskCompleteCompletedEventHandler(object sender, SendWorkTaskCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWorkTaskCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWorkTaskCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkTaskByWorkItemIdCompletedEventHandler(object sender, GetWorkTaskByWorkItemIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkTaskByWorkItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkTaskByWorkItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgram2WorkTaskStatusCompletedEventHandler(object sender, GetProgram2WorkTaskStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgram2WorkTaskStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgram2WorkTaskStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIsUseFileStreamerCompletedEventHandler(object sender, GetIsUseFileStreamerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsUseFileStreamerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsUseFileStreamerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIsRecoverPlaylistCompletedEventHandler(object sender, GetIsRecoverPlaylistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsRecoverPlaylistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsRecoverPlaylistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMonitorIPCompletedEventHandler(object sender, GetMonitorIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMonitorIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMonitorIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MonitorPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSwitchAudioEditorCompletedEventHandler(object sender, GetSwitchAudioEditorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSwitchAudioEditorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSwitchAudioEditorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSwitchMediaAssetCompletedEventHandler(object sender, GetSwitchMediaAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSwitchMediaAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSwitchMediaAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDefaultMessageSaveDaysCompletedEventHandler(object sender, GetDefaultMessageSaveDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultMessageSaveDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultMessageSaveDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDefaultATMSSaveDaysCompletedEventHandler(object sender, GetDefaultATMSSaveDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultATMSSaveDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultATMSSaveDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDefaultProjectSaveDaysCompletedEventHandler(object sender, GetDefaultProjectSaveDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultProjectSaveDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultProjectSaveDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetShowProgramSuperviceCompletedEventHandler(object sender, GetShowProgramSuperviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShowProgramSuperviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShowProgramSuperviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgram2JCCompletedEventHandler(object sender, UpdateProgram2JCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgram2JCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgram2JCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetJetsenWebServiceCompletedEventHandler(object sender, GetJetsenWebServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJetsenWebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJetsenWebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetJetsenWebServiceByZoneIDCompletedEventHandler(object sender, GetJetsenWebServiceByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJetsenWebServiceByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJetsenWebServiceByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetJetsenUumServiceWebServiceByZoneIDCompletedEventHandler(object sender, GetJetsenUumServiceWebServiceByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJetsenUumServiceWebServiceByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJetsenUumServiceWebServiceByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFlowWebServiceByZoneCompletedEventHandler(object sender, GetFlowWebServiceByZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlowWebServiceByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlowWebServiceByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCfgServiceByZoneIDCompletedEventHandler(object sender, GetCfgServiceByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCfgServiceByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCfgServiceByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetM2ServiceByZoneIDCompletedEventHandler(object sender, GetM2ServiceByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetM2ServiceByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetM2ServiceByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetM3SchedulerWebServiceZoneIDCompletedEventHandler(object sender, GetM3SchedulerWebServiceZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetM3SchedulerWebServiceZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetM3SchedulerWebServiceZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetM3ServiceByZoneIDCompletedEventHandler(object sender, GetM3ServiceByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetM3ServiceByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetM3ServiceByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmbServieByZoneIDCompletedEventHandler(object sender, GetEmbServieByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmbServieByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmbServieByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmbServieBakByZoneIDCompletedEventHandler(object sender, GetEmbServieBakByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmbServieBakByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmbServieBakByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetS1ServieByZoneIDCompletedEventHandler(object sender, GetS1ServieByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetS1ServieByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetS1ServieByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetS1ServieBakByZoneIDCompletedEventHandler(object sender, GetS1ServieBakByZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetS1ServieBakByZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetS1ServieBakByZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPersonProgramLibCompletedEventHandler(object sender, GetPersonProgramLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonProgramLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonProgramLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibInfoByUserIDCompletedEventHandler(object sender, GetProgramLibInfoByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibInfoByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibInfoByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramLibInfoByUserIDByTypeCompletedEventHandler(object sender, GetProgramLibInfoByUserIDByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramLibInfoByUserIDByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramLibInfoByUserIDByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTrustFolderByUserIDCompletedEventHandler(object sender, GetTrustFolderByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrustFolderByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrustFolderByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompletedEventHandler(object sender, GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderTableByProgramLibIDAndUserIDAndAccessTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRightChannelTableCompletedEventHandler(object sender, GetRightChannelTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRightChannelTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRightChannelTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramInFolderCompletedEventHandler(object sender, GetProgramInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderInFolderCompletedEventHandler(object sender, GetFolderInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteFolderCompletedEventHandler(object sender, DeleteFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserFolderRightsCompletedEventHandler(object sender, GetUserFolderRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFolderRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFolderRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserFolderRightsTableCompletedEventHandler(object sender, GetUserFolderRightsTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFolderRightsTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFolderRightsTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderTableByProgramLibIDCompletedEventHandler(object sender, GetFolderTableByProgramLibIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderTableByProgramLibIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderTableByProgramLibIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderTableByFolderNameCompletedEventHandler(object sender, GetFolderTableByFolderNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderTableByFolderNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderTableByFolderNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckTagsExsitCompletedEventHandler(object sender, CheckTagsExsitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTagsExsitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTagsExsitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UserLoginWithOutPasswordCompletedEventHandler(object sender, UserLoginWithOutPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginWithOutPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginWithOutPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateFolderInfoByFolderIDCompletedEventHandler(object sender, UpdateFolderInfoByFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderInfoByFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderInfoByFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateFolderInfoCompletedEventHandler(object sender, UpdateFolderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUsersTableCompletedEventHandler(object sender, GetUsersTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTeleTableCompletedEventHandler(object sender, GetTeleTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeleTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeleTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUser2TeleTableCompletedEventHandler(object sender, GetUser2TeleTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUser2TeleTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUser2TeleTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateFolderIntrustCompletedEventHandler(object sender, UpdateFolderIntrustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderIntrustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderIntrustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLoggerFolderByProgramLibNameCompletedEventHandler(object sender, GetLoggerFolderByProgramLibNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoggerFolderByProgramLibNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoggerFolderByProgramLibNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTeleFolderByNameOrTeleNumberCompletedEventHandler(object sender, GetTeleFolderByNameOrTeleNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeleFolderByNameOrTeleNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeleFolderByNameOrTeleNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageByFolderIDCompletedEventHandler(object sender, GetStorageByFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageByFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageByFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageByNewsFolderIDCompletedEventHandler(object sender, GetStorageByNewsFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageByNewsFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageByNewsFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ftpPath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderPathCompletedEventHandler(object sender, GetFolderPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllProgramLibNameCompletedEventHandler(object sender, GetAllProgramLibNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProgramLibNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProgramLibNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllProgramLibName2XStudioCompletedEventHandler(object sender, GetAllProgramLibName2XStudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProgramLibName2XStudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProgramLibName2XStudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProgram2MediaCompletedEventHandler(object sender, InsertProgram2MediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProgram2MediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProgram2MediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertProgram2Media_NewCompletedEventHandler(object sender, InsertProgram2Media_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProgram2Media_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProgram2Media_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgram2Media_NEWCompletedEventHandler(object sender, UpdateProgram2Media_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgram2Media_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgram2Media_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgram2MediaCompletedEventHandler(object sender, UpdateProgram2MediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgram2MediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgram2MediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageInfoByProgramLibNumberCompletedEventHandler(object sender, GetStorageInfoByProgramLibNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageInfoByProgramLibNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageInfoByProgramLibNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckProgramIDExistCompletedEventHandler(object sender, CheckProgramIDExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckProgramIDExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckProgramIDExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMyWorkAreaByUserIDCompletedEventHandler(object sender, GetMyWorkAreaByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyWorkAreaByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyWorkAreaByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserInfoByUserIDCompletedEventHandler(object sender, GetUserInfoByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserInfoByFullNameCompletedEventHandler(object sender, GetUserInfoByFullNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByFullNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByFullNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderFreeSpaceCompletedEventHandler(object sender, GetFolderFreeSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderFreeSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderFreeSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderFreeSpaceByTypeCompletedEventHandler(object sender, GetFolderFreeSpaceByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderFreeSpaceByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderFreeSpaceByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserSettingsCompletedEventHandler(object sender, GetUserSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserPasswordAndUserSettingsCompletedEventHandler(object sender, UpdateUserPasswordAndUserSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPasswordAndUserSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPasswordAndUserSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateAnotherDBUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendMessage2GroupUserCompletedEventHandler(object sender, SendMessage2GroupUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessage2GroupUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessage2GroupUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendSystemMessageCompletedEventHandler(object sender, SendSystemMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSystemMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSystemMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUnReadMessageCountCompletedEventHandler(object sender, GetUnReadMessageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnReadMessageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnReadMessageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReadMessageCompletedEventHandler(object sender, ReadMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReadSystemMessageCompletedEventHandler(object sender, ReadSystemMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadSystemMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadSystemMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSystemMessageBySenderIDCompletedEventHandler(object sender, GetSystemMessageBySenderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemMessageBySenderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemMessageBySenderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUnReadSystemMessageCompletedEventHandler(object sender, GetUnReadSystemMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnReadSystemMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnReadSystemMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteMessageCompletedEventHandler(object sender, DeleteMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUserCanSendMessageCompletedEventHandler(object sender, IsUserCanSendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserCanSendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserCanSendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUserCanSendGroupMessageCompletedEventHandler(object sender, IsUserCanSendGroupMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserCanSendGroupMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserCanSendGroupMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanUnlockCompletedEventHandler(object sender, IsCanUnlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanUnlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanUnlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWebVersionCompletedEventHandler(object sender, GetWebVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void freeSpaceCompletedEventHandler(object sender, freeSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class freeSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal freeSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void importCompletedEventHandler(object sender, importCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void queryValidateCompletedEventHandler(object sender, queryValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getTargetInfoCompletedEventHandler(object sender, getTargetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTargetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTargetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void callbackCompletedEventHandler(object sender, callbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSingleLoginStatusCompletedEventHandler(object sender, GetSingleLoginStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleLoginStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleLoginStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIsUseJetsenUumServiceCompletedEventHandler(object sender, GetIsUseJetsenUumServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsUseJetsenUumServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsUseJetsenUumServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIsPassword2MD5CompletedEventHandler(object sender, GetIsPassword2MD5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsPassword2MD5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsPassword2MD5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPasswordLevelCompletedEventHandler(object sender, GetPasswordLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTreeStatusCompletedEventHandler(object sender, GetTreeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTreeDisplayCompletedEventHandler(object sender, GetTreeDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProjectSaveTypeCompletedEventHandler(object sender, GetProjectSaveTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectSaveTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectSaveTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIsICCardLoginCompletedEventHandler(object sender, GetIsICCardLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsICCardLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsICCardLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetIsShowWorkTaskMessageCompletedEventHandler(object sender, GetIsShowWorkTaskMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsShowWorkTaskMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsShowWorkTaskMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOtherBroadcastSystemServiceCompletedEventHandler(object sender, GetOtherBroadcastSystemServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOtherBroadcastSystemServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOtherBroadcastSystemServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWorkTaskCallBackServiceCompletedEventHandler(object sender, GetWorkTaskCallBackServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkTaskCallBackServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkTaskCallBackServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSharedStorageFTPPathCompletedEventHandler(object sender, GetSharedStorageFTPPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharedStorageFTPPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSharedStorageFTPPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRecycleManagerCompletedEventHandler(object sender, GetRecycleManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecycleManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecycleManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOnairRecycleCompletedEventHandler(object sender, GetOnairRecycleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnairRecycleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnairRecycleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRealDeleteFileCompletedEventHandler(object sender, GetRealDeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealDeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealDeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetErrorPassCountCompletedEventHandler(object sender, GetErrorPassCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorPassCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorPassCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBasicX1ZoneCompletedEventHandler(object sender, GetBasicX1ZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicX1ZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicX1ZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBasicOnairZoneCompletedEventHandler(object sender, GetBasicOnairZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicOnairZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicOnairZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetJingle2MediaCompletedEventHandler(object sender, GetJingle2MediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJingle2MediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJingle2MediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUserSingleLoginCompletedEventHandler(object sender, IsUserSingleLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserSingleLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserSingleLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLockedUserCompletedEventHandler(object sender, GetLockedUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLockedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLockedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLockedUser1CompletedEventHandler(object sender, GetLockedUser1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLockedUser1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLockedUser1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteUserLoginInfoCompletedEventHandler(object sender, DeleteUserLoginInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserLoginInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserLoginInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteUserLoginEXCompletedEventHandler(object sender, DeleteUserLoginEXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserLoginEXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserLoginEXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserLoginInfoCompletedEventHandler(object sender, UpdateUserLoginInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserLoginInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserLoginInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetItem2MeidaStatusCompletedEventHandler(object sender, GetItem2MeidaStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItem2MeidaStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItem2MeidaStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetServerDateCompletedEventHandler(object sender, GetServerDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageByStorageIDAndZoneIDCompletedEventHandler(object sender, GetStorageByStorageIDAndZoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageByStorageIDAndZoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageByStorageIDAndZoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserInfoByUserLoginNameCompletedEventHandler(object sender, GetUserInfoByUserLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string fullName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserInfoByUserICNumberCompletedEventHandler(object sender, GetUserInfoByUserICNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserICNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserICNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserBaseInfoCompletedEventHandler(object sender, GetUserBaseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetXStudioBaseInfoCompletedEventHandler(object sender, GetXStudioBaseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXStudioBaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXStudioBaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserFolderRightInfoCompletedEventHandler(object sender, GetUserFolderRightInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFolderRightInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFolderRightInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMyFolderInfoByUserIDCompletedEventHandler(object sender, GetMyFolderInfoByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyFolderInfoByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyFolderInfoByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string programlibid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMyFolderInfoByUserID1CompletedEventHandler(object sender, GetMyFolderInfoByUserID1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyFolderInfoByUserID1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyFolderInfoByUserID1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckProgramTitleExistCompletedEventHandler(object sender, CheckProgramTitleExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckProgramTitleExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckProgramTitleExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string programXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderInfoByFolderIDCompletedEventHandler(object sender, GetFolderInfoByFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderInfoByFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderInfoByFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFolderInfoByIDCompletedEventHandler(object sender, GetFolderInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SuperviseProgramCompletedEventHandler(object sender, SuperviseProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuperviseProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuperviseProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramSuperviseStatusCompletedEventHandler(object sender, GetProgramSuperviseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramSuperviseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramSuperviseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetISchedulerWebPathCompletedEventHandler(object sender, GetISchedulerWebPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetISchedulerWebPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetISchedulerWebPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserSpaceAlarmValueCompletedEventHandler(object sender, GetUserSpaceAlarmValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSpaceAlarmValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSpaceAlarmValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsCanUploadWaveFileCompletedEventHandler(object sender, IsCanUploadWaveFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCanUploadWaveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCanUploadWaveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetISchedulerWebPath1CompletedEventHandler(object sender, GetISchedulerWebPath1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetISchedulerWebPath1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetISchedulerWebPath1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetISchedulerWebPath2CompletedEventHandler(object sender, GetISchedulerWebPath2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetISchedulerWebPath2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetISchedulerWebPath2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetISchedulerWebPath21CompletedEventHandler(object sender, GetISchedulerWebPath21CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetISchedulerWebPath21CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetISchedulerWebPath21CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLogServiceCompletedEventHandler(object sender, GetLogServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBusinessServiceCompletedEventHandler(object sender, GetBusinessServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusinessServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusinessServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRadioNameCompletedEventHandler(object sender, GetRadioNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBusinessService1CompletedEventHandler(object sender, GetBusinessService1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusinessService1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusinessService1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLogService1CompletedEventHandler(object sender, GetLogService1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogService1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogService1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLogServiceByZoneCompletedEventHandler(object sender, GetLogServiceByZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogServiceByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogServiceByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOnairServiceByZoneCompletedEventHandler(object sender, GetOnairServiceByZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnairServiceByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnairServiceByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOnairServiceBakByZoneCompletedEventHandler(object sender, GetOnairServiceBakByZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnairServiceBakByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnairServiceBakByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteProgramByProgramIDCompletedEventHandler(object sender, DeleteProgramByProgramIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramByProgramIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramByProgramIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgramPropertyCompletedEventHandler(object sender, UpdateProgramPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgramPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgramPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgramExportedStatusCompletedEventHandler(object sender, UpdateProgramExportedStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgramExportedStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgramExportedStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPaddingExportProgramCompletedEventHandler(object sender, GetPaddingExportProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaddingExportProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaddingExportProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMyMessageCompletedEventHandler(object sender, GetMyMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMyNetRecordCompletedEventHandler(object sender, GetMyNetRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyNetRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyNetRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProjectByFolderIDCompletedEventHandler(object sender, GetProjectByFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectByFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectByFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSupervisedProgramByUserIDCompletedEventHandler(object sender, GetSupervisedProgramByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupervisedProgramByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupervisedProgramByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMyTaskCompletedEventHandler(object sender, GetMyTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPandingSuperviseProgramCompletedEventHandler(object sender, GetPandingSuperviseProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPandingSuperviseProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPandingSuperviseProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramByObjectID1CompletedEventHandler(object sender, GetProgramByObjectID1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramByObjectID1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramByObjectID1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramByObjectIDCompletedEventHandler(object sender, GetProgramByObjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramByObjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramByObjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetProgramByAdvanceCompletedEventHandler(object sender, GetProgramByAdvanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramByAdvanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramByAdvanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStorageInfoByProgramLibIDCompletedEventHandler(object sender, GetStorageInfoByProgramLibIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageInfoByProgramLibIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageInfoByProgramLibIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMaxProgramCountByFolderIDCompletedEventHandler(object sender, GetMaxProgramCountByFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxProgramCountByFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxProgramCountByFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertToProgramCompletedEventHandler(object sender, InsertToProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertToProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertToProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateProgramCompletedEventHandler(object sender, UpdateProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591